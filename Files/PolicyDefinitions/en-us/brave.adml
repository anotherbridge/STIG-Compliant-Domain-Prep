<?xml version="1.0"?>
<policyDefinitionResources revision="1.0" schemaVersion="1.0">
  <!--chrome version: 97.0.4692.71-->
  <displayName />
  <description />
  <resources>
    <stringTable>
      <string id="SUPPORTED_WIN7">Microsoft Windows 7 or later</string>
      <string id="SUPPORTED_WIN7_ONLY">Microsoft Windows 7</string>
      <string id="brave_browser">Brave Browser</string>
      <string id="brave_browser_recommended">Brave Browser - Default Settings (users can override)</string>
      <string id="ScreenCapture_group">Allow or deny screen capture</string>
      <string id="ScreenCaptureAllowed">Allow or deny screen capture</string>
      <string id="ScreenCaptureAllowed_Explain">If enabled or not configured (default), a Web page can use
screen-share APIs (e.g., getDisplayMedia() or the Desktop Capture extension API)
to prompt the user to select a tab, window or desktop to capture.

When this policy is disabled, any calls to screen-share APIs will fail
with an error; however this policy is not considered (and a site will be
allowed to use screen-share APIs) if the site matches an origin pattern in
any of the following policies:
ScreenCaptureAllowedByOrigins,
WindowCaptureAllowedByOrigins,
TabCaptureAllowedByOrigins,
SameOriginTabCaptureAllowedByOrigins.
</string>
      <string id="ScreenCaptureAllowedByOrigins">Allow Desktop, Window, and Tab capture by these origins</string>
      <string id="ScreenCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can use Desktop, Window, and Tab Capture.

Leaving the policy unset means that sites will not be considered for an override at this level of Capture.

This policy is not considered if a site matches a URL pattern in any of the following policies: WindowCaptureAllowedByOrigins, TabCaptureAllowedByOrigins, SameOriginTabCaptureAllowedByOrigins.

If a site matches a URL pattern in this policy, the ScreenCaptureAllowed will not be considered.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="ScreenCaptureAllowedByOriginsDesc">Allow Desktop, Window, and Tab capture by these origins</string>
      <string id="WindowCaptureAllowedByOrigins">Allow Window and Tab capture by these origins</string>
      <string id="WindowCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can use Window and Tab Capture.

Leaving the policy unset means that sites will not be considered for an override at this level of Capture.

This policy is not considered if a site matches a URL pattern in any of the following policies: TabCaptureAllowedByOrigins, SameOriginTabCaptureAllowedByOrigins.

If a site matches a URL pattern in this policy, the following policies will not be considered: ScreenCaptureAllowedByOrigins, ScreenCaptureAllowed.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="WindowCaptureAllowedByOriginsDesc">Allow Window and Tab capture by these origins</string>
      <string id="TabCaptureAllowedByOrigins">Allow Tab capture by these origins</string>
      <string id="TabCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can use Tab Capture.

Leaving the policy unset means that sites will not be considered for an override at this level of capture.

Note that windowed Chrome Apps will still be allowed to be captured.

This policy is not considered if a site matches a URL pattern in the SameOriginTabCaptureAllowedByOrigins policy.

If a site matches a URL pattern in this policy, the following policies will not be considered: WindowCaptureAllowedByOrigins, ScreenCaptureAllowedByOrigins, ScreenCaptureAllowed.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="TabCaptureAllowedByOriginsDesc">Allow Tab capture by these origins</string>
      <string id="SameOriginTabCaptureAllowedByOrigins">Allow Same Origin Tab capture by these origins</string>
      <string id="SameOriginTabCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can capture tabs with their same Origin.

Leaving the policy unset means that sites will not be considered for an override at this level of capture.

Note that windowed Chrome Apps with the same origin as this site will still be allowed to be captured.

If a site matches a URL pattern in this policy, the following policies will not be considered: TabCaptureAllowedByOrigins, WindowCaptureAllowedByOrigins, ScreenCaptureAllowedByOrigins, ScreenCaptureAllowed.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="SameOriginTabCaptureAllowedByOriginsDesc">Allow Same Origin Tab capture by these origins</string>
      <string id="ContentSettings_group">Content settings</string>
      <string id="DefaultCookiesSetting">Default cookies setting</string>
      <string id="DefaultCookiesSetting_Explain">Unless the RestoreOnStartup policy is set to permanently restore URLs from previous sessions, then setting CookiesSessionOnlyForUrls lets you make a list of URL patterns that specify sites that can and can't set cookies for one session.

Leaving the policy unset results in the use of DefaultCookiesSetting for all sites, if it's set. If not, the user's personal setting applies. URLs not covered by the patterns specified also result in the use of defaults.

While no specific policy takes precedence, see CookiesBlockedForUrls and CookiesAllowedForUrls. URL patterns among these 3 policies must not conflict.</string>
      <string id="DefaultCookiesSetting_AllowCookies">Allow all sites to set local data</string>
      <string id="DefaultCookiesSetting_BlockCookies">Do not allow any site to set local data</string>
      <string id="DefaultCookiesSetting_SessionOnly">Keep cookies for the duration of the session</string>
      <string id="DefaultFileSystemReadGuardSetting">Control use of the File System API for reading</string>
      <string id="DefaultFileSystemReadGuardSetting_Explain">Setting the policy to 3 lets websites ask for read access to files and directories in the host operating system's file system via the File System API. Setting the policy to 2 denies access.

Leaving it unset lets websites ask for access, but users can change this setting.</string>
      <string id="DefaultFileSystemReadGuardSetting_BlockFileSystemRead">Do not allow any site to request read access to files and directories via the File System API</string>
      <string id="DefaultFileSystemReadGuardSetting_AskFileSystemRead">Allow sites to ask the user to grant read access to files and directories via the File System API</string>
      <string id="DefaultFileSystemWriteGuardSetting">Control use of the File System API for writing</string>
      <string id="DefaultFileSystemWriteGuardSetting_Explain">Setting the policy to 3 lets websites ask for write access to files and directories in the host operating system's file system. Setting the policy to 2 denies access.

Leaving it unset lets websites ask for access, but users can change this setting.</string>
      <string id="DefaultFileSystemWriteGuardSetting_BlockFileSystemWrite">Do not allow any site to request write access to files and directories</string>
      <string id="DefaultFileSystemWriteGuardSetting_AskFileSystemWrite">Allow sites to ask the user to grant write access to files and directories</string>
      <string id="DefaultImagesSetting">Default images setting</string>
      <string id="DefaultImagesSetting_Explain">Setting the policy to 1 lets all websites display images. Setting the policy to 2 denies image display.

Leaving it unset allows images, but users can change this setting.</string>
      <string id="DefaultImagesSetting_AllowImages">Allow all sites to show all images</string>
      <string id="DefaultImagesSetting_BlockImages">Do not allow any site to show images</string>
      <string id="DefaultInsecureContentSetting">Control use of insecure content exceptions</string>
      <string id="DefaultInsecureContentSetting_Explain">Allows you to set whether users can add exceptions to allow mixed content for specific sites.

This policy can be overridden for specific URL patterns using the 'InsecureContentAllowedForUrls' and 'InsecureContentBlockedForUrls' policies.

If this policy is left not set, users will be allowed to add exceptions to allow blockable mixed content and disable autoupgrades for optionally blockable mixed content.</string>
      <string id="DefaultInsecureContentSetting_BlockInsecureContent">Do not allow any site to load mixed content</string>
      <string id="DefaultInsecureContentSetting_AllowExceptionsInsecureContent">Allow users to add exceptions to allow mixed content</string>
      <string id="DefaultJavaScriptSetting">Default JavaScript setting</string>
      <string id="DefaultJavaScriptSetting_Explain">Setting the policy to 1 lets websites run JavaScript. Setting the policy to 2 denies JavaScript.

Leaving it unset allows JavaScript, but users can change this setting.</string>
      <string id="DefaultJavaScriptSetting_AllowJavaScript">Allow all sites to run JavaScript</string>
      <string id="DefaultJavaScriptSetting_BlockJavaScript">Do not allow any site to run JavaScript</string>
      <string id="DefaultJavaScriptJitSetting">Control use of JavaScript JIT</string>
      <string id="DefaultJavaScriptJitSetting_Explain">Allows you to set whether Brave will run the v8 JavaScript engine with JIT (Just In Time) compiler enabled or not.

Disabling the JavaScript JIT will mean that Brave may render web content more slowly, and may also disable parts of JavaScript including WebAssembly. Disabling the JavaScript JIT may allow Brave to render web content in a more secure configuration.

This policy can be overridden for specific URL patterns using the JavaScriptJitAllowedForSites and JavaScriptJitBlockedForSites policies.

If this policy is left not set, JavaScript JIT is enabled.</string>
      <string id="DefaultJavaScriptJitSetting_AllowJavaScriptJit">Allow any site to run JavaScript JIT</string>
      <string id="DefaultJavaScriptJitSetting_BlockJavaScriptJit">Do not allow any site to run JavaScript JIT</string>
      <string id="DefaultPopupsSetting">Default popups setting</string>
      <string id="DefaultPopupsSetting_Explain">Setting the policy to 1 lets websites display pop-ups. Setting the policy to 2 denies pop-ups.

Leaving it unset means BlockPopups applies, but users can change this setting.</string>
      <string id="DefaultPopupsSetting_AllowPopups">Allow all sites to show pop-ups</string>
      <string id="DefaultPopupsSetting_BlockPopups">Do not allow any site to show popups</string>
      <string id="DefaultNotificationsSetting">Default notification setting</string>
      <string id="DefaultNotificationsSetting_Explain">Setting the policy to 1 lets websites display desktop notifications. Setting the policy to 2 denies desktop notifications.

Leaving it unset means AskNotifications applies, but users can change this setting.</string>
      <string id="DefaultNotificationsSetting_AllowNotifications">Allow sites to show desktop notifications</string>
      <string id="DefaultNotificationsSetting_BlockNotifications">Do not allow any site to show desktop notifications</string>
      <string id="DefaultNotificationsSetting_AskNotifications">Ask every time a site wants to show desktop notifications</string>
      <string id="DefaultGeolocationSetting">Default geolocation setting</string>
      <string id="DefaultGeolocationSetting_Explain">Setting the policy to 1 lets sites track the users' physical location as the default state. Setting the policy to 2 denies this tracking by default. You can set the policy to ask whenever a site wants to track the users' physical location.

Leaving the policy unset means the AskGeolocation policy applies, but users can change this setting.</string>
      <string id="DefaultGeolocationSetting_AllowGeolocation">Allow sites to track the users' physical location</string>
      <string id="DefaultGeolocationSetting_BlockGeolocation">Do not allow any site to track the users' physical location</string>
      <string id="DefaultGeolocationSetting_AskGeolocation">Ask whenever a site wants to track the users' physical location</string>
      <string id="DefaultSensorsSetting">Default sensors setting</string>
      <string id="DefaultSensorsSetting_Explain">Setting the policy to 1 lets websites access and use sensors such as motion and light. Setting the policy to 2 denies acess to sensors.

Leaving it unset means AllowSensors applies, but users can change this setting.</string>
      <string id="DefaultSensorsSetting_AllowSensors">Allow sites to access sensors</string>
      <string id="DefaultSensorsSetting_BlockSensors">Do not allow any site to access sensors</string>
      <string id="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</string>
      <string id="DefaultWebBluetoothGuardSetting_Explain">Setting the policy to 3 lets websites ask for access to nearby Bluetooth devices. Setting the policy to 2 denies access to nearby Bluetooth devices.

Leaving the policy unset lets sites ask for access, but users can change this setting.</string>
      <string id="DefaultWebBluetoothGuardSetting_BlockWebBluetooth">Do not allow any site to request access to Bluetooth devices via the Web Bluetooth API</string>
      <string id="DefaultWebBluetoothGuardSetting_AskWebBluetooth">Allow sites to ask the user to grant access to a nearby Bluetooth device</string>
      <string id="DefaultWebUsbGuardSetting">Control use of the WebUSB API</string>
      <string id="DefaultWebUsbGuardSetting_Explain">Setting the policy to 3 lets websites ask for access to connected USB devices. Setting the policy to 2 denies access to connected USB devices.

Leaving it unset lets websites ask for access, but users can change this setting.</string>
      <string id="DefaultWebUsbGuardSetting_BlockWebUsb">Do not allow any site to request access to USB devices via the WebUSB API</string>
      <string id="DefaultWebUsbGuardSetting_AskWebUsb">Allow sites to ask the user to grant access to a connected USB device</string>
      <string id="DefaultSerialGuardSetting">Control use of the Serial API</string>
      <string id="DefaultSerialGuardSetting_Explain">Setting the policy to 3 lets websites ask for access to serial ports. Setting the policy to 2 denies access to serial ports.

Leaving it unset lets websites ask for access, but users can change this setting.</string>
      <string id="DefaultSerialGuardSetting_BlockSerial">Do not allow any site to request access to serial ports via the Serial API</string>
      <string id="DefaultSerialGuardSetting_AskSerial">Allow sites to ask the user to grant access to a serial port</string>
      <string id="AutoSelectCertificateForUrls">Automatically select client certificates for these sites</string>
      <string id="AutoSelectCertificateForUrls_Explain">Setting the policy lets you make a list of URL patterns that specify sites for which Chrome can automatically select a client certificate. The value is an array of stringified JSON dictionaries, each with the form { "pattern": "$URL_PATTERN", "filter" : $FILTER }, where $URL_PATTERN is a content setting pattern. $FILTER restricts the client certificates the browser automatically selects from. Independent of the filter, only certificates that match the server's certificate request are selected.

Examples for the usage of the $FILTER section:

* When $FILTER is set to { "ISSUER": { "CN": "$ISSUER_CN" } }, only client certificates issued by a certificate with the CommonName $ISSUER_CN are selected.

* When $FILTER contains both the "ISSUER" and the "SUBJECT" sections, only client certificates that satisfy both conditions are selected.

* When $FILTER contains a "SUBJECT" section with the "O" value, a certificate needs at least one organization matching the specified value to be selected.

* When $FILTER contains a "SUBJECT" section with a "OU" value, a certificate needs at least one organizational unit matching the specified value to be selected.

* When $FILTER is set to {}, the selection of client certificates is not additionally restricted. Note that filters provided by the web server still apply.

Leaving the policy unset means there's no autoselection for any site.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=AutoSelectCertificateForUrls for more information about schema and formatting.


Example value:

{"pattern":"https://www.example.com","filter":{"ISSUER":{"CN":"certificate issuer name", "L": "certificate issuer location", "O": "certificate issuer org", "OU": "certificate issuer org unit"}, "SUBJECT":{"CN":"certificate subject name", "L": "certificate subject location", "O": "certificate subject org", "OU": "certificate subject org unit"}}}</string>
      <string id="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</string>
      <string id="CookiesAllowedForUrls">Allow cookies on these sites</string>
      <string id="CookiesAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to set cookies.

If this policy is left not set the global default value will be used for all sites either from the DefaultCookiesSetting policy if it is set, or the user's personal configuration otherwise.

See also policies CookiesBlockedForUrls and CookiesSessionOnlyForUrls. Note that there must be no conflicting URL patterns between these three policies - it is unspecified which policy takes precedence.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="CookiesAllowedForUrlsDesc">Allow cookies on these sites</string>
      <string id="CookiesBlockedForUrls">Block cookies on these sites</string>
      <string id="CookiesBlockedForUrls_Explain">Setting the policy lets you make a list of URL patterns that specify sites that can't set cookies.

Leaving the policy unset results in the use of DefaultCookiesSetting for all sites, if it's set. If not, the user's personal setting applies.

While no specific policy takes precedence, see CookiesAllowedForUrls and CookiesSessionOnlyForUrls. URL patterns among these 3 policies must not conflict.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="CookiesBlockedForUrlsDesc">Block cookies on these sites</string>
      <string id="CookiesSessionOnlyForUrls">Limit cookies from matching URLs to the current session</string>
      <string id="CookiesSessionOnlyForUrls_Explain">Unless the RestoreOnStartup policy is set to permanently restore URLs from previous sessions, then setting CookiesSessionOnlyForUrls lets you make a list of URL patterns that specify sites that can and can't set cookies for one session.

Leaving the policy unset results in the use of DefaultCookiesSetting for all sites, if it's set. If not, the user's personal setting applies. URLs not covered by the patterns specified also result in the use of defaults.

While no specific policy takes precedence, see CookiesBlockedForUrls and CookiesAllowedForUrls. URL patterns among these 3 policies must not conflict.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="CookiesSessionOnlyForUrlsDesc">Limit cookies from matching URLs to the current session</string>
      <string id="FileSystemReadAskForUrls">Allow read access via the File System API on these sites</string>
      <string id="FileSystemReadAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them read access to files or directories in the host operating system's file system via the File System API.

Leaving the policy unset means DefaultFileSystemReadGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns must not conflict with FileSystemReadBlockedForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="FileSystemReadAskForUrlsDesc">Allow read access via the File System API on these sites</string>
      <string id="FileSystemReadBlockedForUrls">Block read access via the File System API on these sites</string>
      <string id="FileSystemReadBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them read access to files or directories in the host operating system's file system via the File System API.

Leaving the policy unset means DefaultFileSystemReadGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns can't conflict with FileSystemReadAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="FileSystemReadBlockedForUrlsDesc">Block read access via the File System API on these sites</string>
      <string id="FileSystemWriteAskForUrls">Allow write access to files and directories on these sites</string>
      <string id="FileSystemWriteAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them write access to files or directories in the host operating system's file system.

Leaving the policy unset means DefaultFileSystemWriteGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns must not conflict with FileSystemWriteBlockedForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="FileSystemWriteAskForUrlsDesc">Allow write access to files and directories on these sites</string>
      <string id="FileSystemWriteBlockedForUrls">Block write access to files and directories on these sites</string>
      <string id="FileSystemWriteBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them write access to files or directories in the host operating system's file system.

Leaving the policy unset means DefaultFileSystemWriteGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns can't conflict with FileSystemWriteAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="FileSystemWriteBlockedForUrlsDesc">Block write access to files and directories on these sites</string>
      <string id="ImagesAllowedForUrls">Allow images on these sites</string>
      <string id="ImagesAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify sites that may display images.

Leaving the policy unset means DefaultImagesSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Note that previously this policy was erroneously enabled on Android, but this functionality has never been fully supported on Android.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="ImagesAllowedForUrlsDesc">Allow images on these sites</string>
      <string id="ImagesBlockedForUrls">Block images on these sites</string>
      <string id="ImagesBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify sites that can't display images.

Leaving the policy unset means DefaultImagesSetting applies for all sites, if it's set. If not, the user's personal setting applies.

 For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

 Note that previously this policy was erroneously enabled on Android, but this functionality has never been fully supported on Android.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="ImagesBlockedForUrlsDesc">Block images on these sites</string>
      <string id="InsecureContentAllowedForUrls">Allow insecure content on these sites</string>
      <string id="InsecureContentAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites) and for which optionally blockable mixed content upgrades will be disabled.

If this policy is left not set blockable mixed content will be blocked and optionally blockable mixed content will be upgraded, and users will be allowed to set exceptions to allow it for specific sites.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="InsecureContentAllowedForUrlsDesc">Allow insecure content on these sites</string>
      <string id="InsecureContentBlockedForUrls">Block insecure content on these sites</string>
      <string id="InsecureContentBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites), and for which optionally blockable (i.e. passive) mixed content will be upgraded.

If this policy is left not set blockable mixed content will be blocked and optionally blockable mixed content will be upgraded, but users will be allowed to set exceptions to allow it for specific sites.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="InsecureContentBlockedForUrlsDesc">Block insecure content on these sites</string>
      <string id="JavaScriptAllowedForUrls">Allow JavaScript on these sites</string>
      <string id="JavaScriptAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can run JavaScript.

Leaving the policy unset means DefaultJavaScriptSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</string>
      <string id="JavaScriptBlockedForUrls">Block JavaScript on these sites</string>
      <string id="JavaScriptBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't run JavaScript.

Leaving the policy unset means DefaultJavaScriptSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</string>
      <string id="JavaScriptJitAllowedForSites">Allow JavaScript to use JIT on these sites</string>
      <string id="JavaScriptJitAllowedForSites_Explain">Allows you to set a list of site url patterns that specify sites which are allowed to run JavaScript with JIT (Just In Time) compiler enabled.

For detailed information on valid site url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

JavaScript JIT policy exceptions will only be enforced at a site granularity (eTLD+1). A policy set for only subdomain.site.com will not correctly apply to site.com or subdomain.site.com since they both resolve to the same eTLD+1 (site.com) for which there is no policy. In this case, policy must be set on site.com to apply correctly for both site.com and subdomain.site.com.

This policy applies on a frame-by-frame basis and not based on top level origin url alone, so e.g. if site-one.com is listed in the JavaScriptJitAllowedForSites policy but site-one.com loads a frame containing site-two.com then site-one.com will have JavaScript JIT enabled, but site-two.com will use the policy from DefaultJavaScriptJitSetting, if set, or default to JavaScript JIT enabled.

If this policy is not set for a site then the policy from DefaultJavaScriptJitSetting applies to the site, if set, otherwise Javascript JIT is enabled for the site.

Example value:

[*.]example.edu</string>
      <string id="JavaScriptJitAllowedForSitesDesc">Allow JavaScript to use JIT on these sites</string>
      <string id="JavaScriptJitBlockedForSites">Block JavaScript from using JIT on these sites</string>
      <string id="JavaScriptJitBlockedForSites_Explain">Allows you to set a list of site url patterns that specify sites which are not allowed to run JavaScript JIT (Just In Time) compiler enabled.

Disabling the JavaScript JIT will mean that Brave may render web content more slowly, and may also disable parts of JavaScript including WebAssembly. Disabling the JavaScript JIT may allow Brave to render web content in a more secure configuration.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

JavaScript JIT policy exceptions will only be enforced at a site granularity (eTLD+1). A policy set for only subdomain.site.com will not correctly apply to site.com or subdomain.site.com since they both resolve to the same eTLD+1 (site.com) for which there is no policy. In this case, policy must be set on site.com to apply correctly for both site.com and subdomain.site.com.

This policy applies on a frame-by-frame basis and not based on top level origin url alone, so e.g. if site-one.com is listed in the JavaScriptJitBlockedForSites policy but site-one.com loads a frame containing site-two.com then site-one.com will have JavaScript JIT disabled, but site-two.com will use the policy from DefaultJavaScriptJitSetting, if set, or default to JavaScript JIT enabled.

If this policy is not set for a site then the policy from DefaultJavaScriptJitSetting applies to the site, if set, otherwise JavaScript JIT is enabled for the site.

Example value:

[*.]example.edu</string>
      <string id="JavaScriptJitBlockedForSitesDesc">Block JavaScript from using JIT on these sites</string>
      <string id="LegacySameSiteCookieBehaviorEnabledForDomainList">Revert to legacy SameSite behavior for cookies on these sites</string>
      <string id="LegacySameSiteCookieBehaviorEnabledForDomainList_Explain">Cookies set for domains matching these patterns will revert to legacy SameSite behavior. Reverting to legacy behavior causes cookies that don't specify a SameSite attribute to be treated as if they were "SameSite=None", removes the requirement for "SameSite=None" cookies to carry the "Secure" attribute, and skips the scheme comparison when evaluating if two sites are same-site. See https://www.chromium.org/administrators/policy-list-3/cookie-legacy-samesite-policies for full description.

For cookies on domains not covered by the patterns specified here, or for all cookies if this policy is not set, the global default value will be the user's personal configuration.

For detailed information on valid patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

Note that patterns you list here are treated as domains, not URLs, so you should not specify a scheme or port.

Example value:

www.example.com
[*.]example.edu</string>
      <string id="LegacySameSiteCookieBehaviorEnabledForDomainListDesc">Revert to legacy SameSite behavior for cookies on these sites</string>
      <string id="PopupsAllowedForUrls">Allow popups on these sites</string>
      <string id="PopupsAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can open pop-ups.

Leaving the policy unset means DefaultPopupsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="PopupsAllowedForUrlsDesc">Allow popups on these sites</string>
      <string id="RegisteredProtocolHandlers">Register protocol handlers</string>
      <string id="RegisteredProtocolHandlers_Explain">Setting the policy (as recommended only) lets you register a list of protocol handlers, which merge with the ones that the user registers, putting both sets in use. Set the property "protocol" to the scheme, such as "mailto", and set the property "URL" to the URL pattern of the application that handles the scheme specified in the "protocol" field. The pattern can include a "%s" placeholder, which the handled URL replaces.

Users can't remove a protocol handler registered by policy. However, by installing a new default handler, they can change the protocol handlers installed by policy.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=RegisteredProtocolHandlers for more information about schema and formatting.


Example value:

[
  {
    "protocol": "mailto",
    "url": "https://mail.google.com/mail/?extsrc=mailto&amp;url=%s",
    "default": true
  }
]</string>
      <string id="PopupsBlockedForUrls">Block popups on these sites</string>
      <string id="PopupsBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't open pop-ups.

Leaving the policy unset means DefaultPopupsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="PopupsBlockedForUrlsDesc">Block popups on these sites</string>
      <string id="NotificationsAllowedForUrls">Allow notifications on these sites</string>
      <string id="NotificationsAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can display notifications.

Leaving the policy unset means DefaultNotificationsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</string>
      <string id="NotificationsBlockedForUrls">Block notifications on these sites</string>
      <string id="NotificationsBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't display notifications.

Leaving the policy unset means DefaultNotificationsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="NotificationsBlockedForUrlsDesc">Block notifications on these sites</string>
      <string id="SensorsAllowedForUrls">Allow access to sensors on these sites</string>
      <string id="SensorsAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can access sensors like motion and light sensors.

Leaving the policy unset means DefaultSensorsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

If the same URL pattern exists in both this policy and the SensorsBlockedForUrls policy, the latter is prioritized and access to motion or light sensors will be blocked.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="SensorsAllowedForUrlsDesc">Allow access to sensors on these sites</string>
      <string id="SensorsBlockedForUrls">Block access to sensors on these sites</string>
      <string id="SensorsBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't access sensors like motion and light sensors.

Leaving the policy unset means DefaultSensorsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

If the same URL pattern exists in both this policy and the SensorsAllowedForUrls policy, this policy is prioritized and access to motion or light sensors will be blocked.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="SensorsBlockedForUrlsDesc">Block access to sensors on these sites</string>
      <string id="WebUsbAllowDevicesForUrls">Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.</string>
      <string id="WebUsbAllowDevicesForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites are automatically granted permission to access a USB device with the given vendor and product IDs. Each item in the list requires both devices and urls fields for the policy to be valid. Each item in the devices field can have a vendor_id and product_id field. Omitting the vendor_id field will create a policy matching any device. Omitting the product_id field will create a policy matching any device with the given vendor ID. A policy which has a product_id field without a vendor_id field is invalid.

The USB permission model will grant the specified URL permission to access the USB device as a top-level origin. If embedded frames need to access USB devices, the 'usb' feature-policy header should be used to grant access. The URL must be valid, otherwise the policy is ignored.

Deprecated: The USB permission model used to support specifying both the requesting and embedding URLs. This is deprecated and only supported for backwards compatiblity in this manner: if both a requesting and embedding URL is specified, then the embedding URL will be granted the permission as top-level origin and the requsting URL will be ignored entirely.

This policy overrides DefaultWebUsbGuardSetting, WebUsbAskForUrls, WebUsbBlockedForUrls and the user's preferences.

This policy only affects access to USB devices through the WebUSB API. To grant access to USB devices through the Web Serial API see the SerialAllowUsbDevicesForUrls policy.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebUsbAllowDevicesForUrls for more information about schema and formatting.


Example value:

[
  {
    "devices": [
      {
        "vendor_id": 1234,
        "product_id": 5678
      }
    ],
    "urls": [
      "https://google.com"
    ]
  }
]</string>
      <string id="WebUsbAskForUrls">Allow WebUSB on these sites</string>
      <string id="WebUsbAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them access to a USB device.

Leaving the policy unset means DefaultWebUsbGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns must not conflict with WebUsbAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="WebUsbAskForUrlsDesc">Allow WebUSB on these sites</string>
      <string id="WebUsbBlockedForUrls">Block WebUSB on these sites</string>
      <string id="WebUsbBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them access to a USB device.

Leaving the policy unset means DefaultWebUsbGuardSetting applies for all sites, if it's set. If not, the user's personal setting applies.

URL patterns can't conflict with WebUsbAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="WebUsbBlockedForUrlsDesc">Block WebUSB on these sites</string>
      <string id="SerialAskForUrls">Allow the Serial API on these sites</string>
      <string id="SerialAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them access to a serial port.

Leaving the policy unset means DefaultSerialGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

For URL patterns which do not match the policy SerialBlockedForUrls (if there is a match), DefaultSerialGuardSetting (if set), or the users' personal settings take precedence, in that order.

URL patterns must not conflict with SerialBlockedForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="SerialAskForUrlsDesc">Allow the Serial API on these sites</string>
      <string id="SerialBlockedForUrls">Block the Serial API on these sites</string>
      <string id="SerialBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them access to a serial port.

Leaving the policy unset means DefaultSerialGuardSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For URL patterns which do not match the policy SerialAskForUrls (if there is a match), DefaultSerialGuardSetting (if set), or the users' personal settings take precedence, in that order.

URL patterns can't conflict with SerialAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="SerialBlockedForUrlsDesc">Block the Serial API on these sites</string>
      <string id="SerialAllowAllPortsForUrls">Automatically grant permission to sites to connect all serial ports.</string>
      <string id="SerialAllowAllPortsForUrls_Explain">Setting the policy allows you to list sites which are automatically granted permission to access all available serial ports.

The URLs must be valid, otherwise the policy is ignored. Only the origin (scheme, host and port) of the URL is considered.

On Chrome OS, this policy only applies to affiliated users.

This policy overrides DefaultSerialGuardSetting, SerialAskForUrls, SerialBlockedForUrls and the user's preferences.

Example value:

https://www.example.com</string>
      <string id="SerialAllowAllPortsForUrlsDesc">Automatically grant permission to sites to connect all serial ports.</string>
      <string id="SerialAllowUsbDevicesForUrls">Automatically grant permission to sites to connect to USB serial devices.</string>
      <string id="SerialAllowUsbDevicesForUrls_Explain">Setting the policy allows you to list sites which are automatically granted permission to access USB serial devices with vendor and product IDs matching the vendor_id and product_id fields. Omitting the product_id field allows the given sites permission to access devices with a vendor ID matching the vendor_id field and any product ID.

The URLs must be valid, otherwise the policy is ignored. Only the origin (scheme, host and port) of the URL is considered.

On Chrome OS, this policy only applies to affiliated users.

This policy overrides DefaultSerialGuardSetting, SerialAskForUrls, SerialBlockedForUrls and the user's preferences.

This policy only affects access to USB devices through the Web Serial API. To grant access to USB devices through the WebUSB API see the WebUsbAllowDevicesForUrls policy.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=SerialAllowUsbDevicesForUrls for more information about schema and formatting.


Example value:

[
  {
    "devices": [
      {
        "vendor_id": 1234,
        "product_id": 5678
      }
    ],
    "urls": [
      "https://specific-device.example.com"
    ]
  },
  {
    "devices": [
      {
        "vendor_id": 1234
      }
    ],
    "urls": [
      "https://all-vendor-devices.example.com"
    ]
  }
]</string>
      <string id="DefaultSearchProvider_group">Default search provider</string>
      <string id="DefaultSearchProviderEnabled">Enable the default search provider</string>
      <string id="DefaultSearchProviderEnabled_Explain">Setting the policy to Enabled means a default search is performed when a user enters non-URL text in the address bar. To specify the default search provider, set the rest of the default search policies. If you leave those policies empty, the user can choose the default provider. Setting the policy to Disabled means there's no search when the user enters non-URL text in the address bar.

If you set the policy, users can't change it in Brave. If not set, the default search provider is on, and users can set the search provider list.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.</string>
      <string id="DefaultSearchProviderName">Default search provider name</string>
      <string id="DefaultSearchProviderName_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderName specifies the default search provider's name.

Leaving DefaultSearchProviderName unset means the hostname specified by the search URL is used.

Example value: My Intranet Search</string>
      <string id="DefaultSearchProviderKeyword">Default search provider keyword</string>
      <string id="DefaultSearchProviderKeyword_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderKeyword specifies the keyword or shortcut used in the address bar to trigger the search for this provider.

Leaving DefaultSearchProviderKeyword unset means no keyword activates the search provider.

Example value: mis</string>
      <string id="DefaultSearchProviderSearchURL">Default search provider search URL</string>
      <string id="DefaultSearchProviderSearchURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSearchURL specifies the URL of the search engine used during a default search. The URL should include the string '{searchTerms}', replaced in the query by the user's search terms.

You can specify Google's search URL as: '{google:baseURL}search?q={searchTerms}&amp;{google:RLZ}{google:originalQueryForSuggestion}{google:assistedQueryStats}{google:searchFieldtrialParameter}{google:searchClient}{google:sourceId}ie={inputEncoding}'.

Example value: https://search.my.company/search?q={searchTerms}</string>
      <string id="DefaultSearchProviderSuggestURL">Default search provider suggest URL</string>
      <string id="DefaultSearchProviderSuggestURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSuggestURL specifies the URL of the search engine to provide search suggestions. The URL should include the string '{searchTerms}', replaced in the query by the user's search terms.

You can specify Google's search URL as: '{google:baseURL}complete/search?output=chrome&amp;q={searchTerms}'.

Example value: https://search.my.company/suggest?q={searchTerms}</string>
      <string id="DefaultSearchProviderIconURL">Default search provider icon</string>
      <string id="DefaultSearchProviderIconURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderIconURL specifies the default search provider's favorite icon URL.

Leaving DefaultSearchProviderIconURL unset means there's no icon for the search provider.

Example value: https://search.my.company/favicon.ico</string>
      <string id="DefaultSearchProviderEncodings">Default search provider encodings</string>
      <string id="DefaultSearchProviderEncodings_Explain">If DefaultSearchProviderEnabled is on, setting DefaultSearchProviderEncodings specifies the character encodings supported by the search provider. Encodings are code page names such as UTF-8, GB2312, and ISO-8859-1. They're tried in the order provided.

Leaving DefaultSearchProviderEncodings unset puts UTF-8 in use.

Example value:

UTF-8
UTF-16
GB2312
ISO-8859-1</string>
      <string id="DefaultSearchProviderEncodingsDesc">Default search provider encodings</string>
      <string id="DefaultSearchProviderAlternateURLs">List of alternate URLs for the default search provider</string>
      <string id="DefaultSearchProviderAlternateURLs_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderAlternateURLs specifies a list of alternate URLs for extracting search terms from the search engine. The URLs should include the string '{searchTerms}'.

Leaving DefaultSearchProviderAlternateURLs unset means no alternate URLs are used to extract search terms.

Example value:

https://search.my.company/suggest#q={searchTerms}
https://search.my.company/suggest/search#q={searchTerms}</string>
      <string id="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</string>
      <string id="DefaultSearchProviderImageURL">Parameter providing search-by-image feature for the default search provider</string>
      <string id="DefaultSearchProviderImageURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderImageURL specifies the URL of the search engine used for image search. (If DefaultSearchProviderImageURLPostParams is set, then image search requests use the POST method instead.)

Leaving DefaultSearchProviderImageURL unset means no image search is used.

Example value: https://search.my.company/searchbyimage/upload</string>
      <string id="DefaultSearchProviderNewTabURL">Default search provider new tab page URL</string>
      <string id="DefaultSearchProviderNewTabURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderNewTabURL specifies the URL of the search engine used to provide a New Tab page.

Leaving DefaultSearchProviderNewTabURL unset means no new tab page is provided.

Example value: https://search.my.company/newtab</string>
      <string id="DefaultSearchProviderSearchURLPostParams">Parameters for search URL which uses POST</string>
      <string id="DefaultSearchProviderSearchURLPostParams_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSearchURLPostParams specifies the parameters when searching a URL with POST. It consists of comma-separated, name-value pairs. If a value is a template parameter, such as '{searchTerms}', real search terms data replaces it.

Leaving DefaultSearchProviderSearchURLPostParams unset means search requests are sent using the GET method.

Example value: q={searchTerms},ie=utf-8,oe=utf-8</string>
      <string id="DefaultSearchProviderSuggestURLPostParams">Parameters for suggest URL which uses POST</string>
      <string id="DefaultSearchProviderSuggestURLPostParams_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSuggestURLPostParams specifies the parameters during suggestion search with POST. It consists of comma-separated, name-value pairs. If a value is a template parameter, such as '{searchTerms}', real search terms data replaces it.

Leaving DefaultSearchProviderSuggestURLPostParams unset unset means suggest search requests are sent using the GET method.

Example value: q={searchTerms},ie=utf-8,oe=utf-8</string>
      <string id="DefaultSearchProviderImageURLPostParams">Parameters for image URL which uses POST</string>
      <string id="DefaultSearchProviderImageURLPostParams_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderImageURLPostParams specifies the parameters during image search with POST. It consists of comma-separated, name-value pairs. If a value is a template parameter, such as {imageThumbnail}, real image thumbnail data replaces it.

Leaving DefaultSearchProviderImageURLPostParams unset means image search request is sent using the GET method.

Example value: content={imageThumbnail},url={imageURL},sbisrc={SearchSource}</string>
      <string id="DeprecatedPolicies_group">Deprecated policies</string>
      <string id="RemoteAccessHostClientDomain">Configure the required domain name for remote access clients</string>
      <string id="RemoteAccessHostClientDomain_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: my-awesome-domain.com</string>
      <string id="RemoteAccessHostDomain">Configure the required domain name for remote access hosts</string>
      <string id="RemoteAccessHostDomain_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: my-awesome-domain.com</string>
      <string id="ProxyMode">Choose how to specify proxy server settings</string>
      <string id="ProxyMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: direct</string>
      <string id="ProxyMode_ProxyDisabled">Never use a proxy</string>
      <string id="ProxyMode_ProxyAutoDetect">Auto detect proxy settings</string>
      <string id="ProxyMode_ProxyPacScript">Use a .pac proxy script</string>
      <string id="ProxyMode_ProxyFixedServers">Use fixed proxy servers</string>
      <string id="ProxyMode_ProxyUseSystem">Use system proxy settings</string>
      <string id="ProxyServerMode">Choose how to specify proxy server settings</string>
      <string id="ProxyServerMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ProxyServerMode_ProxyServerDisabled">Never use a proxy</string>
      <string id="ProxyServerMode_ProxyServerAutoDetect">Auto detect proxy settings</string>
      <string id="ProxyServerMode_ProxyServerManual">Manually specify proxy settings</string>
      <string id="ProxyServerMode_ProxyServerUseSystem">Use system proxy settings</string>
      <string id="ProxyServer">Address or URL of proxy server</string>
      <string id="ProxyServer_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: 123.123.123.123:8080</string>
      <string id="ProxyPacUrl">URL to a proxy .pac file</string>
      <string id="ProxyPacUrl_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: https://internal.site/example.pac</string>
      <string id="ProxyBypassList">Proxy bypass rules</string>
      <string id="ProxyBypassList_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: https://www.example1.com,https://www.example2.com,https://internalsite/</string>
      <string id="AuthServerWhitelist">Authentication server whitelist</string>
      <string id="AuthServerWhitelist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: *.example.com,example.com</string>
      <string id="AuthNegotiateDelegateWhitelist">Kerberos delegation server whitelist</string>
      <string id="AuthNegotiateDelegateWhitelist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: foobar.example.com</string>
      <string id="ExtensionInstallBlacklist">Configure extension installation blacklist</string>
      <string id="ExtensionInstallBlacklist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

extension_id1
extension_id2</string>
      <string id="ExtensionInstallBlacklistDesc">Configure extension installation blacklist</string>
      <string id="ExtensionInstallWhitelist">Configure extension installation whitelist</string>
      <string id="ExtensionInstallWhitelist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

extension_id1
extension_id2</string>
      <string id="ExtensionInstallWhitelistDesc">Configure extension installation whitelist</string>
      <string id="DefaultMediaStreamSetting">Default mediastream setting</string>
      <string id="DefaultMediaStreamSetting_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultMediaStreamSetting_BlockAccess">Do not allow any site to access the camera and microphone</string>
      <string id="DefaultMediaStreamSetting_PromptOnAccess">Ask every time a site wants to access the camera and/or microphone</string>
      <string id="NativeMessagingBlacklist">Configure native messaging blocklist</string>
      <string id="NativeMessagingBlacklist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string>
      <string id="NativeMessagingBlacklistDesc">Configure native messaging blocklist</string>
      <string id="NativeMessagingWhitelist">Configure native messaging whitelist</string>
      <string id="NativeMessagingWhitelist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string>
      <string id="NativeMessagingWhitelistDesc">Configure native messaging whitelist</string>
      <string id="SafeBrowsingEnabled">Enable Safe Browsing</string>
      <string id="SafeBrowsingEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SafeBrowsingWhitelistDomains">Configure the list of domains on which Safe Browsing will not trigger warnings.</string>
      <string id="SafeBrowsingWhitelistDomains_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

mydomain.com
myuniversity.edu</string>
      <string id="SafeBrowsingWhitelistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</string>
      <string id="NativeWindowOcclusionEnabled">Enable Native Window Occlusion</string>
      <string id="NativeWindowOcclusionEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DisabledSchemes">Disable URL protocol schemes</string>
      <string id="DisabledSchemes_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

file
https</string>
      <string id="DisabledSchemesDesc">Disable URL protocol schemes</string>
      <string id="JavascriptEnabled">Enable JavaScript</string>
      <string id="JavascriptEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="IncognitoEnabled">Enable Incognito mode</string>
      <string id="IncognitoEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ForceSafeSearch">Force SafeSearch</string>
      <string id="ForceSafeSearch_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ForceYouTubeSafetyMode">Force YouTube Safety Mode</string>
      <string id="ForceYouTubeSafetyMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="AutoFillEnabled">Enable AutoFill</string>
      <string id="AutoFillEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SigninAllowed">Allow sign in to Brave</string>
      <string id="SigninAllowed_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DeveloperToolsDisabled">Disable Developer Tools</string>
      <string id="DeveloperToolsDisabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="URLBlacklist">Block access to a list of URLs</string>
      <string id="URLBlacklist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

example.com
https://ssl.server.com
hosting.com/bad_path
https://server:8080/path
.exact.hostname.com
file://*
custom_scheme:*
*</string>
      <string id="URLBlacklistDesc">Block access to a list of URLs</string>
      <string id="URLWhitelist">Allow access to a list of URLs</string>
      <string id="URLWhitelist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

example.com
https://ssl.server.com
hosting.com/good_path
https://server:8080/path
.exact.hostname.com</string>
      <string id="URLWhitelistDesc">Allow access to a list of URLs</string>
      <string id="ForceBrowserSignin">Enable force sign in for Brave</string>
      <string id="ForceBrowserSignin_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="UnsafelyTreatInsecureOriginAsSecure">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string>
      <string id="UnsafelyTreatInsecureOriginAsSecure_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

http://testserver.example.com/
*.example.org</string>
      <string id="UnsafelyTreatInsecureOriginAsSecureDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string>
      <string id="SpellcheckLanguageBlacklist">Force disable spellcheck languages</string>
      <string id="SpellcheckLanguageBlacklist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

fr
es</string>
      <string id="SpellcheckLanguageBlacklistDesc">Force disable spellcheck languages</string>
      <string id="AutoplayWhitelist">Allow media autoplay on a whitelist of URL patterns</string>
      <string id="AutoplayWhitelist_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="AutoplayWhitelistDesc">Allow media autoplay on a whitelist of URL patterns</string>
      <string id="StricterMixedContentTreatmentEnabled">Enable stricter treatment for mixed content</string>
      <string id="StricterMixedContentTreatmentEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="Extensions_group">Extensions</string>
      <string id="ExtensionInstallAllowlist">Configure extension installation allow list</string>
      <string id="ExtensionInstallAllowlist_Explain">Setting the policy specifies which extensions are not subject to the blocklist.

A blocklist value of * means all extensions are blocked and users can only install extensions listed in the allow list.

By default, all extensions are allowed. But, if you prohibited extensions by policy, use the list of allowed extensions to change that policy.

Example value:

extension_id1
extension_id2</string>
      <string id="ExtensionInstallAllowlistDesc">Configure extension installation allow list</string>
      <string id="ExtensionInstallBlocklist">Configure extension installation blocklist</string>
      <string id="ExtensionInstallBlocklist_Explain">Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if blocked, without a way for the user to enable them. Once an extension disabled due to the blocklist is removed from it, it will automatically get re-enabled.

A blocklist value of '*' means all extensions are blocked unless they are explicitly listed in the allowlist.

If this policy is left not set the user can install any extension in Brave.

Example value:

extension_id1
extension_id2</string>
      <string id="ExtensionInstallBlocklistDesc">Configure extension installation blocklist</string>
      <string id="ExtensionInstallForcelist">Configure the list of force-installed apps and extensions</string>
      <string id="ExtensionInstallForcelist_Explain">Setting the policy specifies a list of apps and extensions that install silently, without user interaction, and which users can't uninstall or turn off. Permissions are granted implicitly, including for the enterprise.deviceAttributes and enterprise.platformKeys extension APIs. (These 2 APIs aren't available to apps and extensions that aren't force-installed.)

Leaving the policy unset means no apps or extensions are autoinstalled, and users can uninstall any app or extension in Brave.

This policy superseeds ExtensionInstallBlocklist policy. If a previously force-installed app or extension is removed from this list, Brave automatically uninstalls it.

On Microsoft® Windows® instances, apps and extensions from outside the Chrome Web Store can only be forced installed if the instance is joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management.

On macOS instances, apps and extensions from outside the Chrome Web Store can only be force installed if the instance is managed via MDM, or joined to a domain via MCX.

The source code of any extension may be altered by users through developer tools, potentially rendering the extension dysfunctional. If this is a concern, set the DeveloperToolsDisabled policy.

Each list item of the policy is a string that contains an extension ID and, optionally, an "update" URL separated by a semicolon (;). The extension ID is the 32-letter string found, for example, on chrome://extensions when in Developer mode. If specified, the "update" URL should point to an Update Manifest XML document ( https://developer.chrome.com/extensions/autoupdate ). By default, the Chrome Web Store's update URL is used. The "update" URL set in this policy is only used for the initial installation; subsequent updates of the extension use the update URL in the extension's manifest.

 Note: This policy doesn't apply to Incognito mode. Read about hosting extensions ( https://developer.chrome.com/extensions/hosting ).

Example value:

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;https://clients2.google.com/service/update2/crx
abcdefghijklmnopabcdefghijklmnop</string>
      <string id="ExtensionInstallForcelistDesc">Configure the list of force-installed apps and extensions</string>
      <string id="ExtensionInstallSources">Configure extension, app, and user script install sources</string>
      <string id="ExtensionInstallSources_Explain">Setting the policy specifies which URLs may install extensions, apps, and themes. Before Brave 21, users could click on a link to a *.crx file, and Brave would offer to install the file after a few warnings. Afterwards, such files must be downloaded and dragged to the Brave settings page. This setting allows specific URLs to have the old, easier installation flow.

Each item in this list is an extension-style match pattern (see https://developer.chrome.com/extensions/match_patterns). Users can easily install items from any URL that matches an item in this list. Both the location of the *.crx file and the page where the download is started from (the referrer) must be allowed by these patterns.

ExtensionInstallBlocklist takes precedence over this policy. That is, an extension on the blocklist won't be installed, even if it happens from a site on this list.

Example value:

https://corp.mycompany.com/*</string>
      <string id="ExtensionInstallSourcesDesc">Configure extension, app, and user script install sources</string>
      <string id="ExtensionAllowedTypes">Configure allowed app/extension types</string>
      <string id="ExtensionAllowedTypes_Explain">Setting the policy controls which apps and extensions may be installed in Brave, which hosts they can interact with, and limits runtime access.

Leaving the policy unset results in no restrictions on the acceptable extension and app types.

Extensions and apps which have a type that's not on the list won't be installed. Each value should be one of these strings:

* "extension"

* "theme"

* "user_script"

* "hosted_app"

* "legacy_packaged_app"

* "platform_app"

See the Brave extensions documentation for more information on these types.

Versions earlier than 75 that use multiple comma separated extension IDs aren't supported and are skipped. The rest of the policy applies.

Note: This policy also affects extensions and apps to be force-installed using ExtensionInstallForcelist.

Example value:

hosted_app</string>
      <string id="ExtensionAllowedTypesDesc">Configure allowed app/extension types</string>
      <string id="ExtensionSettings">Extension management settings</string>
      <string id="ExtensionSettings_Explain">Setting the policy controls extension management settings for Brave, including any controlled by existing extension-related policies. The policy supersedes any legacy policies that might be set.

This policy maps an extension ID or an update URL to its specific setting only. A default configuration can be set for the special ID "*", which applies to all extensions without a custom configuration in this policy. With an update URL, configuration applies to extensions with the exact update URL stated in the extension manifest ( http://support.google.com/chrome/a?p=Configure_ExtensionSettings_policy ). If the 'override_update_url' flag is set to true, the extension is installed and updated using the "update" URL specified in the ExtensionInstallForcelist policy or in 'update_url' field in this policy. The flag 'override_update_url' is ignored if the 'update_url' is a Chrome Web Store url.

Note: For Windows® instances not joined to a Microsoft® Active Directory® domain, forced installation is limited to apps and extensions listed in the Chrome Web Store.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ExtensionSettings for more information about schema and formatting.


Example value:

{
  "abcdefghijklmnopabcdefghijklmnop": {
    "installation_mode": "allowed",
    "blocked_permissions": [
      "history"
    ],
    "minimum_version_required": "1.0.1",
    "toolbar_pin": "force_pinned"
  },
  "bcdefghijklmnopabcdefghijklmnopa": {
    "installation_mode": "force_installed",
    "update_url": "https://example.com/update_url",
    "allowed_permissions": [
      "downloads"
    ],
    "runtime_blocked_hosts": [
      "*://*.example.com"
    ],
    "runtime_allowed_hosts": [
      "*://good.example.com"
    ]
  },
  "cdefghijklmnopabcdefghijklmnopab": {
    "installation_mode": "blocked",
    "blocked_install_message": "Custom error message."
  },
  "defghijklmnopabcdefghijklmnopabc,efghijklmnopabcdefghijklmnopabcd": {
    "installation_mode": "blocked",
    "blocked_install_message": "Custom error message."
  },
  "update_url:https://www.example.com/update.xml": {
    "blocked_permissions": [
      "wallpaper"
    ],
    "allowed_permissions": [
      "downloads"
    ],
    "installation_mode": "allowed"
  },
  "fghijklmnopabcdefghijklmnopabcde": {
    "installation_mode": "removed",
    "blocked_install_message": "Custom removal message."
  },
  "ghijklmnopabcdefghijklmnopabcdef": {
    "installation_mode": "force_installed",
    "update_url": "https://example.com/update_url",
    "override_update_url": true
  },
  "*": {
    "installation_mode": "blocked",
    "blocked_permissions": [
      "downloads",
      "bookmarks"
    ],
    "install_sources": [
      "https://company-intranet/chromeapps"
    ],
    "allowed_types": [
      "hosted_app"
    ],
    "runtime_blocked_hosts": [
      "*://*.example.com"
    ],
    "runtime_allowed_hosts": [
      "*://good.example.com"
    ],
    "blocked_install_message": "Custom error message."
  }
}</string>
      <string id="BlockExternalExtensions">Blocks external extensions from being installed</string>
      <string id="BlockExternalExtensions_Explain">Controls external extensions installation.

Enabling this setting blocks external extensions from being installed.

Disabling this setting or leaving it unset allows external extensions to be installed.

External extensions and their installation are documented at https://developer.chrome.com/apps/external_extensions.
</string>
      <string id="GoogleCast_group">Google Cast</string>
      <string id="EnableMediaRouter">Enable Google Cast</string>
      <string id="EnableMediaRouter_Explain">Setting the policy to Enabled or leaving it unset turns on Google Cast, which users can launch from the app menu, page context menus, media controls on Cast-enabled websites, and (if shown) the Cast toolbar icon.

Setting the policy to Disabled turns off Google Cast.</string>
      <string id="ShowCastIconInToolbar">Show the Google Cast toolbar icon</string>
      <string id="ShowCastIconInToolbar_Explain">Setting the policy to Enabled displays the Cast toolbar icon on the toolbar or the overflow menu, and users can't remove it.

Setting the policy to Disabled or leaving it unset lets users pin or remove the icon through its contextual menu.

If the policy EnableMediaRouter is set to Disabled, then this policy's value has no effect, and the toolbar icon doesn't appear.</string>
      <string id="HTTPAuthentication_group">HTTP authentication</string>
      <string id="AuthSchemes">Supported authentication schemes</string>
      <string id="AuthSchemes_Explain">Setting the policy specifies which HTTP authentication schemes Brave supports.

Leaving the policy unset employs all 4 schemes.

Valid values:

* basic

* digest

* ntlm

* negotiate

Note: Separate multiple values with commas.

Example value: basic,digest,ntlm,negotiate</string>
      <string id="DisableAuthNegotiateCnameLookup">Disable CNAME lookup when negotiating Kerberos authentication</string>
      <string id="DisableAuthNegotiateCnameLookup_Explain">Setting the policy to Enabled skips CNAME lookup. The server name is used as entered when generating the Kerberos SPN.

Setting the policy to Disabled or leaving it unset means CNAME lookup determines the canonical name of the server when generating the Kerberos SPN.</string>
      <string id="EnableAuthNegotiatePort">Include non-standard port in Kerberos SPN</string>
      <string id="EnableAuthNegotiatePort_Explain">Setting the policy to Enabled and entering a nonstandard port (in other words, a port other than 80 or 443) includes it in the generated Kerberos SPN.

Setting the policy to Disabled or leaving it unset means the generated Kerberos SPN won't include a port.</string>
      <string id="BasicAuthOverHttpEnabled">Allow Basic authentication for HTTP</string>
      <string id="BasicAuthOverHttpEnabled_Explain">Setting the policy to Enabled or leaving it unset will allow Basic authentication challenges received over non-secure HTTP.

Setting the policy to Disabled forbids non-secure HTTP requests from using the Basic authentication scheme; only secure HTTPS is allowed.

This policy setting is ignored (and Basic is always forbidden) if the AuthSchemes policy is set and does not include Basic.</string>
      <string id="AuthServerAllowlist">Authentication server allowlist</string>
      <string id="AuthServerAllowlist_Explain">Setting the policy specifies which servers should be allowed for integrated authentication. Integrated authentication is only on when Brave gets an authentication challenge from a proxy or from a server in this permitted list.

Leaving the policy unset means Brave tries to detect if a server is on the intranet. Only then will it respond to IWA requests. If a server is detected as internet, then Brave ignores IWA requests from it.

Note: Separate multiple server names with commas. Wildcards, *, are allowed.

Example value: *.example.com,example.com</string>
      <string id="AuthNegotiateDelegateAllowlist">Kerberos delegation server allowlist</string>
      <string id="AuthNegotiateDelegateAllowlist_Explain">Setting the policy assigns servers that Brave may delegate to. Separate multiple server names with commas. Wildcards, *, are allowed.

Leaving the policy unset means Brave won't delegate user credentials, even if a server is detected as intranet.

Example value: foobar.example.com</string>
      <string id="AllowCrossOriginAuthPrompt">Cross-origin HTTP Authentication prompts</string>
      <string id="AllowCrossOriginAuthPrompt_Explain">Setting the policy to Enabled allows third-party images on a page to show an authentication prompt.

 Setting the policy to Disabled or leaving it unset renders third-party images unable to show an authentication prompt.

Typically, this policy is Disabled as a phishing defense.</string>
      <string id="BrowserSwitcher_group">Legacy Browser Support</string>
      <string id="AlternativeBrowserPath">Alternative browser to launch for configured websites.</string>
      <string id="AlternativeBrowserPath_Explain">Setting the policy controls which command to use to open URLs in an alternative browser. The policy can be set to one of ${ie}, ${firefox}, ${safari}, ${opera}, ${edge} or a file path. When this policy is set to a file path, that file is used as an executable file. ${ie} is only available on Microsoft® Windows®. ${safari} and ${edge} are only available on Microsoft® Windows® and macOS.

Leaving the policy unset puts a platform-specific default in use: Internet Explorer® for Microsoft® Windows®, or Safari® for macOS. On Linux®, launching an alternative browser will fail.

Example value: ${ie}</string>
      <string id="AlternativeBrowserParameters">Command-line parameters for the alternative browser.</string>
      <string id="AlternativeBrowserParameters_Explain">Setting the policy to a list of strings means each string is passed to the alternative browser as separate command-line parameters. On Microsoft® Windows®, the parameters are joined with spaces. On macOS and Linux®, a parameter can have spaces and still be treated as a single parameter.

If an parameter contains ${url}, ${url} is replaced with the URL of the page to open. If no parameter contains ${url}, the URL is appended at the end of the command line.

Environment variables are expanded. On Microsoft® Windows®, %ABC% is replaced with the value of the ABC environment variable. On macOS and Linux®, ${ABC} is replaced with the value of the ABC environment variable.

Leaving the policy unset means only the URL is passed as a command-line parameter.

Example value:

-foreground
-new-window
${url}
-profile
%HOME%\browser_profile</string>
      <string id="AlternativeBrowserParametersDesc">Command-line parameters for the alternative browser.</string>
      <string id="BrowserSwitcherChromePath">Path to Chrome for switching from the alternative browser.</string>
      <string id="BrowserSwitcherChromePath_Explain">This policy controls the command to use to open URLs in Brave when switching from Internet Explorer®. This policy can be set to an executable file path or ${chrome} to autodetect the location of Brave.

Leaving the policy unset means Internet Explorer® autodetects Brave's own executable path when launching Brave from Internet Explorer.

Note: If the Legacy Browser Support add-in for Internet Explorer® isn't installed, this policy has no effect.

Example value: ${chrome}</string>
      <string id="BrowserSwitcherChromeParameters">Command-line parameters for switching from the alternative browser.</string>
      <string id="BrowserSwitcherChromeParameters_Explain">Setting the policy to a list of strings means the strings are joined with spaces and passed from Internet Explorer® to Brave as command-line parameters. If an parameter contains ${url}, ${url} is replaced with the URL of the page to open. If no parameter contains ${url}, the URL is appended at the end of the command line.

Environment variables are expanded. On Microsoft® Windows®, %ABC% is replaced with the value of the ABC environment variable.

Leaving the policy unset means Internet Explorer® only passes the URL to Brave as a command-line parameter.

Note: If the Legacy Browser Support add-in for Internet Explorer® isn't installed, this policy has no effect.

Example value:

--force-dark-mode</string>
      <string id="BrowserSwitcherChromeParametersDesc">Command-line parameters for switching from the alternative browser.</string>
      <string id="BrowserSwitcherDelay">Delay before launching alternative browser (milliseconds)</string>
      <string id="BrowserSwitcherDelay_Explain">Setting the policy to a number has Brave show a message for that number of milliseconds, then it opens an alternative browser.

Leaving the policy unset or set to 0 means navigating to a designated URL immediately opens it in an alternative browser.</string>
      <string id="BrowserSwitcherEnabled">Enable the Legacy Browser Support feature.</string>
      <string id="BrowserSwitcherEnabled_Explain">Setting the policy to Enabled means Brave will try to launch some URLs in an alternate browser, such as Internet Explorer®. This feature is set using the policies in the Legacy Browser support group.

Setting the policy to Disabled or leaving it unset means Brave won't try to launch designated URLs in an alternate browser.</string>
      <string id="BrowserSwitcherExternalSitelistUrl">URL of an XML file that contains URLs to load in an alternative browser.</string>
      <string id="BrowserSwitcherExternalSitelistUrl_Explain">Setting the policy to a valid URL has Brave download the site list from that URL and apply the rules as if they were set up with the BrowserSwitcherUrlList policy.

Leaving it unset (or set to a invalid URL) means Brave doesn't use the policy as a source of rules for switching browsers.

Note: This policy points to an XML file in the same format as Internet Explorer®'s SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer®. Read more on Internet Explorer®'s SiteList policy ( https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode)

Example value: http://example.com/sitelist.xml</string>
      <string id="BrowserSwitcherExternalGreylistUrl">URL of an XML file that contains URLs that should never trigger a browser switch.</string>
      <string id="BrowserSwitcherExternalGreylistUrl_Explain">Setting the policy to a valid URL has Brave download the site list from that URL and apply the rules as if they were set up with the BrowserSwitcherUrlGreylist policy. These policies prevent Brave and the alternative browser from opening one another.

Leaving it unset (or set to a invalid URL) means Brave doesn't use the policy as a source of rules for not switching browsers.

Note: This policy points to an XML file in the same format as Internet Explorer®'s SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer®. Read more on Internet Explorer®'s SiteList policy ( https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode )

Example value: http://example.com/greylist.xml</string>
      <string id="BrowserSwitcherKeepLastChromeTab">Keep last tab open in Chrome.</string>
      <string id="BrowserSwitcherKeepLastChromeTab_Explain">Setting the policy to Enabled or leaving it unset has Brave keep at least one tab open, after switching to an alternate browser.

Setting the policy to Disabled has Brave close the tab after switching to an alternate browser, even if it was the last tab. This causes Brave to exit completely.</string>
      <string id="BrowserSwitcherParsingMode">Sitelist parsing mode</string>
      <string id="BrowserSwitcherParsingMode_Explain">This policy controls how Brave interprets sitelist/greylist policies for the Legacy Browser Support feature. It affects the following policies: BrowserSwitcherUrlList, BrowserSwitcherUrlGreylist, BrowserSwitcherUseIeSitelist, BrowserSwitcherExternalSitelistUrl, and BrowserSwitcherExternalGreylistUrl.

If 'Default' (0) or unset, URL matching is less strict. Rules that do not contain "/" look for a substring anywhere in the URL's hostname. Matching the path component of a URL is case-sensitive.

If 'IESiteListMode' (1), URL matching is more strict. Rules that do not contain "/" only match at the end of the hostname. They must also be at a domain name boundary. Matching the path component of a URL is case-insensitive. This is more compatible with Microsoft® Internet Explorer® and Microsoft® Edge®.

For example, with the rules "example.com" and "acme.com/abc":

"http://example.com/", "http://subdomain.example.com/" and "http://acme.com/abc" match regardless of parsing mode.

"http://notexample.com/", "http://example.com.invalid.com/", "http://example.comabc/" only match in 'Default' mode.

"http://acme.com/ABC" only matches in 'IESiteListMode'.</string>
      <string id="BrowserSwitcherParsingMode_Default">Default behavior for LBS.</string>
      <string id="BrowserSwitcherParsingMode_IESiteListMode">More compatible with Microsoft IE/Edge enterprise mode sitelists.</string>
      <string id="BrowserSwitcherUrlList">Websites to open in alternative browser</string>
      <string id="BrowserSwitcherUrlList_Explain">Setting the policy controls the list of websites to open in an alternative browser. Each item is treated as a rule for something to open in an alternative browser. Brave uses those rules when choosing if a URL should open in an alternative browser. When the Internet Explorer® add-in is on, Internet Explorer® switches back to Brave when the rules don't match. If rules contradict each other, Brave uses the most specific rule.

Leaving the policy unset adds no websites to the list.

Note: Elements can also be added to this list through the BrowserSwitcherUseIeSitelist and BrowserSwitcherExternalSitelistUrl policies.

Example value:

ie.com
!open-in-chrome.ie.com
foobar.com/ie-only/</string>
      <string id="BrowserSwitcherUrlListDesc">Websites to open in alternative browser</string>
      <string id="BrowserSwitcherUrlGreylist">Websites that should never trigger a browser switch.</string>
      <string id="BrowserSwitcherUrlGreylist_Explain">Setting the policy controls the list of websites that will never cause a browser switch. Each item is treated as a rule. Those rules that match won't open an alternative browser. Unlike the BrowserSwitcherUrlList policy, rules apply to both directions. When the Internet Explorer® add-in is on, it also controls whether Internet Explorer® should open these URLs in Brave.

Leaving the policy unset adds no websites to the list.

Note: Elements can also be added to this list through the BrowserSwitcherExternalGreylistUrl policy.

Example value:

ie.com
!open-in-chrome.ie.com
foobar.com/ie-only/</string>
      <string id="BrowserSwitcherUrlGreylistDesc">Websites that should never trigger a browser switch.</string>
      <string id="BrowserSwitcherUseIeSitelist">Use Internet Explorer's SiteList policy for Legacy Browser Support.</string>
      <string id="BrowserSwitcherUseIeSitelist_Explain">This policy controls whether to load rules from Internet Explorer®'s SiteList policy.

When this policy is set to true, Brave reads Internet Explorer®'s SiteList to obtain the site list's URL. Brave then downloads the site list from that URL, and applies the rules as if they had been configured with the BrowserSwitcherUrlList policy.

When this policy is false or unset, Brave does not use Internet Explorer®'s SiteList policy as a source of rules for switching browsers.

For more information on Internet Explorer's SiteList policy: https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode</string>
      <string id="NativeMessaging_group">Native Messaging</string>
      <string id="NativeMessagingBlocklist">Configure native messaging blocklist</string>
      <string id="NativeMessagingBlocklist_Explain">Setting the policy specifies which native messaging hosts shouldn't be loaded. A deny list value of * means all native messaging hosts are denied, unless they're explicitly allowed.

Leaving the policy unset means Brave loads all installed native messaging hosts.

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string>
      <string id="NativeMessagingBlocklistDesc">Configure native messaging blocklist</string>
      <string id="NativeMessagingAllowlist">Configure native messaging allowlist</string>
      <string id="NativeMessagingAllowlist_Explain">Setting the policy specifies which native messaging hosts aren't subject to the deny list. A deny list value of * means all native messaging hosts are denied, unless they're explicitly allowed.

All native messaging hosts are allowed by default. But, if all native messaging hosts are denied by policy, the admin can use the allow list to change that policy.

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string>
      <string id="NativeMessagingAllowlistDesc">Configure native messaging allowlist</string>
      <string id="NativeMessagingUserLevelHosts">Allow user-level Native Messaging hosts (installed without admin permissions)</string>
      <string id="NativeMessagingUserLevelHosts_Explain">Setting the policy to Enabled or leaving it unset means Brave can use native messaging hosts installed at the user level.

Setting the policy to Disabled means Brave can only use these hosts if installed at the system level.</string>
      <string id="Other_group">Other</string>
      <string id="PromptOnMultipleMatchingCertificates">Prompt for the client certificate when multiple certificates match.</string>
      <string id="PromptOnMultipleMatchingCertificates_Explain">This policy controls whether the user is prompted to select a client certificate when more than one certificate matches AutoSelectCertificateForUrls.
If this policy is set to Enabled, the user is prompted to select a client certificate whenever the auto-selection policy matches multiple certificates.
If this policy is set to Disabled or not set, the user may only be prompted when no certificate matches the auto-selection.</string>
      <string id="PasswordManager_group">Password manager</string>
      <string id="PasswordManagerEnabled">Enable saving passwords to the password manager</string>
      <string id="PasswordManagerEnabled_Explain">Setting the policy to Enabled means users have Brave remember passwords and provide them the next time they sign in to a site.

Setting the policy to Disabled means users can't save new passwords, but previously saved passwords will still work.

If the policy is set, users can't change it in Brave. If not set, the user can turn off password saving.</string>
      <string id="PasswordLeakDetectionEnabled">Enable leak detection for entered credentials</string>
      <string id="PasswordLeakDetectionEnabled_Explain">Setting the policy to Enabled lets users have Brave check whether usernames and passwords entered were part of a leak.

If the policy is set, users can't change it in Brave. If not set, credential leak checking is allowed, but the user can turn it off.

This behavior will not trigger if Safe Browsing is disabled (either by policy or by the user). In order to force Safe Browsing on, use the SafeBrowsingEnabled policy or the SafeBrowsingProtectionLevel policy.</string>
      <string id="Printing_group">Printing</string>
      <string id="PrintingEnabled">Enable printing</string>
      <string id="PrintingEnabled_Explain">Setting the policy to Enabled or leaving it unset lets users print in Brave, and users can't change this setting.

Setting the policy to Disabled means users can't print from Brave. Printing is off in the three dots menu, extensions, and JavaScript applications.</string>
      <string id="CloudPrintProxyEnabled">Enable Google Cloud Print proxy</string>
      <string id="CloudPrintProxyEnabled_Explain">Setting the policy to Enabled or leaving it unset lets Brave act as a proxy between Google Cloud Print and legacy printers connected to the machine. Using their Google Account, users may turn on the cloud print proxy by authentication.

Setting the policy to Disabled means users can't turn on the proxy, and the machine can't share its printers with Google Cloud Print.</string>
      <string id="PrintingAllowedBackgroundGraphicsModes">Restrict background graphics printing mode</string>
      <string id="PrintingAllowedBackgroundGraphicsModes_Explain">Restricts background graphics printing mode. Unset policy is treated as no restriction.

Example value: enabled</string>
      <string id="PrintingAllowedBackgroundGraphicsModes_any">Allow printing both with and without background graphics</string>
      <string id="PrintingAllowedBackgroundGraphicsModes_enabled">Allow printing only with background graphics</string>
      <string id="PrintingAllowedBackgroundGraphicsModes_disabled">Allow printing only without background graphics</string>
      <string id="PrintingBackgroundGraphicsDefault">Default background graphics printing mode</string>
      <string id="PrintingBackgroundGraphicsDefault_Explain">Overrides default background graphics printing mode.

Example value: enabled</string>
      <string id="PrintingBackgroundGraphicsDefault_enabled">Enable background graphics printing mode by default</string>
      <string id="PrintingBackgroundGraphicsDefault_disabled">Disable background graphics printing mode by default</string>
      <string id="PrintingPaperSizeDefault">Default printing page size</string>
      <string id="PrintingPaperSizeDefault_Explain">Overrides default printing page size.

name should contain one of the listed formats or 'custom' if required paper size is not in the list. If 'custom' value is provided custom_size property should be specified. It describes the desired height and width in micrometers. Otherwise custom_size property shouldn't be specified. Policy that violates these rules is ignored.

If the page size is unavailable on the printer chosen by the user this policy is ignored.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=PrintingPaperSizeDefault for more information about schema and formatting.


Example value:

{
  "name": "custom",
  "custom_size": {
    "width": 210000,
    "height": 297000
  }
}</string>
      <string id="CloudPrintSubmitEnabled">Enable submission of documents to Google Cloud Print</string>
      <string id="CloudPrintSubmitEnabled_Explain">Setting the policy to Enabled or leaving it unset lets users print to Google Cloud Print from the Brave print dialog. Brave can submit documents to Google Cloud Print for printing. This doesn't prevent users from submitting print jobs on websites.

Setting the policy to Disabled means users can't print to Google Cloud Print from the Brave print dialog.

In order to keep Google Cloud Print destinations discoverable, this policy must be set to Enabled and cloud must not be included in the PrinterTypeDenyList policy.</string>
      <string id="DisablePrintPreview">Disable Print Preview</string>
      <string id="DisablePrintPreview_Explain">Setting the policy to Enabled has Brave open the system print dialog instead of the built-in print preview when users request a printout.

Setting the policy to Disabled or leaving it unset has print commands trigger the print preview screen.</string>
      <string id="PrintHeaderFooter">Print Headers and Footers</string>
      <string id="PrintHeaderFooter_Explain">Setting the policy to Enabled turns headers and footers on in print preview. Setting the policy to Disabled turns them off in print preview.

If you set the policy, users can't change it. If unset, users decides whether headers and footers appear.</string>
      <string id="DefaultPrinterSelection">Default printer selection rules</string>
      <string id="DefaultPrinterSelection_Explain">Setting the policy sets the rules for selecting the default printer in Brave, overriding the default rules. Printer selection occurs the first time users try to print, when Brave seeks a printer matching the specified attributes. In case of a less than perfect match, Brave can be set to select any matching printer, depending on the order printers are discovered.

Leaving the policy unset or set to attributes for which there's no match means the built-in PDF printer is the default. If there's no PDF printer, Brave defaults to none.

Printers connected to Google Cloud Print are considered "cloud", the rest of the printers are classified as "local".

Note: Omitting a field means all values match. For example, not specifying connectivity causes Print Preview to start discovery of all kinds of printers, "local" and "cloud". Regular expression patterns must follow the JavaScript RegExp syntax, and matches are case sensistive.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=DefaultPrinterSelection for more information about schema and formatting.


Example value: { "kind": "cloud", "idPattern": ".*public", "namePattern": ".*Color" }</string>
      <string id="PrintPreviewUseSystemDefaultPrinter">Use System Default Printer as Default</string>
      <string id="PrintPreviewUseSystemDefaultPrinter_Explain">Setting the policy to Enabled means Brave uses the OS default printer as the default destination for print preview.

Setting the policy to Disabled or leaving it unset means Brave uses the most recently used printer as the default destination for print preview.</string>
      <string id="PrinterTypeDenyList">Disable printer types on the deny list</string>
      <string id="PrinterTypeDenyList_Explain">The printers of types placed on the deny list will be disabled from being discovered or having their capabilities fetched.

Placing all printer types on the deny list effectively disables printing, as there would be no available destinations to send a document for printing.

Including cloud on the deny list has the same effect as setting the CloudPrintSubmitEnabled policy to false. In order to keep Google Cloud Print destinations discoverable, the CloudPrintSubmitEnabled policy must be set to true and cloud must not be on the deny list.

If the policy is not set, or is set to an empty list, all printer types will be available for discovery.

Extension printers are also known as print provider destinations, and include any destination that belongs to a Brave extension.

Local printers are also known as native printing destinations, and include destinations available to the local machine and shared network printers.

Example value:

cloud
privet</string>
      <string id="PrinterTypeDenyListDesc">Disable printer types on the deny list</string>
      <string id="PrintRasterizationMode">Print Rasterization Mode</string>
      <string id="PrintRasterizationMode_Explain">Controls how Brave prints on Microsoft® Windows®.

When printing to a non-PostScript printer on Microsoft® Windows®, sometimes print jobs need to be rasterized to print correctly.

When this policy is set to Full, Brave will do full page rasterization if necessary.

When this policy is set to Fast, Brave will avoid rasterization if possible, reducing the amount of rasterization can help reduce print job sizes and increase printing speed.

When this policy is not set, Brave will be in Full mode.</string>
      <string id="PrintRasterizationMode_Full">Full</string>
      <string id="PrintRasterizationMode_Fast">Fast</string>
      <string id="PrintPdfAsImageAvailability">Print PDF as Image Available</string>
      <string id="PrintPdfAsImageAvailability_Explain">Controls how Brave makes the Print as image option available on Microsoft® Windows® and macOS when printing PDFs.

When printing a PDF on Microsoft® Windows® or macOS, sometimes print jobs need to be rasterized to an image for certain printers to get correct looking output.

When this policy is set to Enabled, Brave will make the Print as image option available in the Print Preview when printing a PDF.

When this policy is set to Disabled or not set Brave the Print as image option will not be available to users in Print Preview and PDFs will be printed as usual without being rasterized to an image before being sent to the destination.</string>
      <string id="PrintRasterizePdfDpi">Print Rasterize PDF DPI</string>
      <string id="PrintRasterizePdfDpi_Explain">Controls print image resolution when Brave prints PDFs with rasterization.

When printing a PDF using the Print to image option, it can be beneficial to specify a print resolution other than a device's printer setting or the PDF default.  A high resolution will significantly increase the processing and printing time while a low resolution can lead to poor imaging quality.

This policy allows a particular resolution to be specified for use when rasterizing PDFs for printing.

If this policy is set to zero or not set at all then the system default resolution will be used during rasterization of page images.</string>
      <string id="PrintPostScriptMode">Print PostScript Mode</string>
      <string id="PrintPostScriptMode_Explain">Controls how Brave prints on Microsoft® Windows®.

When printing to a PostScript printer on Microsoft® Windows® different PostScript generation methods can affect printing performance.

When this policy is set to Default, Brave will use a set of default options when generating PostScript. For text in particular, text will always be rendered using Type 3 fonts.

When this policy is set to Type42, Brave will render text using Type 42 fonts if possible. This should increase printing speed for some PostScript printers.

When this policy is not set, Brave will be in Default mode.</string>
      <string id="PrintPostScriptMode_Default">Default</string>
      <string id="PrintPostScriptMode_Type42">Type42</string>
      <string id="PrintPdfAsImageDefault">Print PDF as Image Default</string>
      <string id="PrintPdfAsImageDefault_Explain">Controls if Brave makes the Print as image option default to set when printing PDFs.

When this policy is set to Enabled, Brave will default to setting the Print as image option in the Print Preview when printing a PDF.

When this policy is set to Disabled or not set Brave then the user selection for Print as image option will be initially unset.  The user will be allowed to select it for each individual PDFs print job, if the option is available.

For Microsoft® Windows® or macOS this policy only has an effect if PrintPdfAsImageAvailability is also enabled.</string>
      <string id="RemoteAccess_group">Remote access</string>
      <string id="RemoteAccessHostClientDomainList">Configure the required domain names for remote access clients</string>
      <string id="RemoteAccessHostClientDomainList_Explain">Setting the policy specifies the client domain names that are imposed on remote access clients, and users can't change them. Only clients from one of the specified domains can connect to the host.

Setting the policy to an empty list or leaving it unset applies the default policy for the connection type. For remote assistance, this allows clients from any domain to connect to the host. For anytime remote access, only the host owner can connect.

See also RemoteAccessHostDomainList.

Note: This setting overrides RemoteAccessHostClientDomain, if present.

Example value:

my-awesome-domain.com
my-auxiliary-domain.com</string>
      <string id="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</string>
      <string id="RemoteAccessHostFirewallTraversal">Enable firewall traversal from remote access host</string>
      <string id="RemoteAccessHostFirewallTraversal_Explain">Setting the policy to Enabled or leaving it unset allows the usage of STUN servers, letting remote clients discover and connect to this machine, even if separated by a firewall.

Setting the policy to Disabled when outgoing UDP connections are filtered by the firewall means the machine only allows connections from client machines within the local network.</string>
      <string id="RemoteAccessHostDomainList">Configure the required domain names for remote access hosts</string>
      <string id="RemoteAccessHostDomainList_Explain">Setting the policy specifies the host domain names that are imposed on remote access hosts, and users can't change them. Hosts can be shared only using accounts registered on one of the specified domain names.

Setting the policy to an empty list or leaving it unset means hosts can be shared using any account.

See also RemoteAccessHostClientDomainList.

Note: This setting will override RemoteAccessHostDomain, if present.

Example value:

my-awesome-domain.com
my-auxiliary-domain.com</string>
      <string id="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</string>
      <string id="RemoteAccessHostRequireCurtain">Enable curtaining of remote access hosts</string>
      <string id="RemoteAccessHostRequireCurtain_Explain">Setting the policy to Enabled turns off remote access hosts' physical input and output devices during a remote connection.

Setting the policy to Disabled or leaving it unset lets both local and remote users interact with the host while it's shared.</string>
      <string id="RemoteAccessHostAllowClientPairing">Enable or disable PIN-less authentication for remote access hosts</string>
      <string id="RemoteAccessHostAllowClientPairing_Explain">Setting the policy to Enabled or leaving it unset lets users pair clients and hosts at connection time, eliminating the need to enter a PIN every time.

Setting the policy to Disabled makes this feature unavailable.</string>
      <string id="RemoteAccessHostAllowRelayedConnection">Enable the use of relay servers by the remote access host</string>
      <string id="RemoteAccessHostAllowRelayedConnection_Explain">If RemoteAccessHostFirewallTraversal is set to Enabled, setting RemoteAccessHostAllowRelayedConnection to Enabled or leaving it unset allows the use of remote clients to use relay servers to connect to this machine when a direct connection is not available, for example, because of firewall restrictions.

Setting the policy to Disabled doesn't turn remote access off, but only allows connections from the same network (not NAT traversal or relay).</string>
      <string id="RemoteAccessHostUdpPortRange">Restrict the UDP port range used by the remote access host</string>
      <string id="RemoteAccessHostUdpPortRange_Explain">Setting the policy restricts the UDP port range used by the remote access host in this machine.

Leaving the policy unset or set to an empty string means the remote access host can use any available port.

Note: If RemoteAccessHostFirewallTraversal is Disabled, the remote access host will use UDP ports in the 12400-12409 range.

Example value: 12400-12409</string>
      <string id="RemoteAccessHostAllowUiAccessForRemoteAssistance">Allow remote users to interact with elevated windows in remote assistance sessions</string>
      <string id="RemoteAccessHostAllowUiAccessForRemoteAssistance_Explain">Setting the policy to Enabled means the remote assistance host runs in a process with uiAccess permissions. This lets remote users interact with elevated windows on the local user's desktop.

Setting the policy to Disabled or leaving it unset means the remote assistance host runs in the user's context, and remote users can't interact with elevated windows on the desktop.</string>
      <string id="RemoteAccessHostAllowFileTransfer">Allow remote access users to transfer files to/from the host</string>
      <string id="RemoteAccessHostAllowFileTransfer_Explain">Setting the policy to Enabled or leaving it unset allows users connected to a remote access host to transfer files between the client and the host. This doesn't apply to remote assistance connections, which don't support file transfer.

Setting the policy to Disabled disallows file transfer.</string>
      <string id="RemoteAccessHostAllowRemoteAccessConnections">Allow remote access connections to this machine</string>
      <string id="RemoteAccessHostAllowRemoteAccessConnections_Explain">If this policy is Disabled, the remote access host service cannot be started or configured to accept incoming connections.  This policy does not affect remote support scenarios.

This policy has no effect if it is set to Enabled, left empty, or is not set.</string>
      <string id="RemoteAccessHostMaximumSessionDurationMinutes">Maximum session duration allowed for remote access connections</string>
      <string id="RemoteAccessHostMaximumSessionDurationMinutes_Explain">If this policy is set, remote access connections will automatically disconnect after the number of minutes defined in the policy have elapsed. This does not prevent the client from reconnecting after the maximum session duration has been reached. Setting the policy to a value that is not within the min/max range may prevent the host from starting. This policy does not affect remote support scenarios.

This policy has no effect if it is not set. In this case, remote access connections will have no maximum duration on this machine.</string>
      <string id="RemoteAccessHostClipboardSizeBytes">The maximum size, in bytes, that can be transferred between client and host via clipboard synchronization</string>
      <string id="RemoteAccessHostClipboardSizeBytes_Explain">If this policy is set, clipboard data sent to and from the host will be truncated to the limit set by this policy.

If a value of 0 is set, then clipboard sync is disabled.

This policy affects both remote access and remote support scenarios.

This policy has no effect if it is not set.

Setting the policy to a value that is not within the min/max range may prevent the host from starting.

Please note that the actual upper bound for the clipboard size is based on the maximum WebRTC data channel message size which this policy does not control.</string>
      <string id="RemoteAccessHostAllowRemoteSupportConnections">Allow remote support connections to this machine</string>
      <string id="RemoteAccessHostAllowRemoteSupportConnections_Explain">If this policy is disabled, the remote support host cannot be started or configured to accept incoming connections.

This policy does not affect remote access scenarios.

This policy does not prevent enterprise admins from connecting to managed Chrome OS devices.

This policy has no effect if enabled, left empty, or is not set.</string>
      <string id="RemovedPolicies_group">Removed policies</string>
      <string id="RemoteAccessClientFirewallTraversal">Enable firewall traversal from remote access client</string>
      <string id="RemoteAccessClientFirewallTraversal_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="RemoteAccessHostRequireTwoFactor">Enable two-factor authentication for remote access hosts</string>
      <string id="RemoteAccessHostRequireTwoFactor_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="RemoteAccessHostTalkGadgetPrefix">Configure the TalkGadget prefix for remote access hosts</string>
      <string id="RemoteAccessHostTalkGadgetPrefix_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="RemoteAccessHostDebugOverridePolicies">Policy overrides for Debug builds of the remote access host</string>
      <string id="RemoteAccessHostDebugOverridePolicies_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="PasswordManagerAllowShowPasswords">Allow users to show passwords in Password Manager (deprecated)</string>
      <string id="PasswordManagerAllowShowPasswords_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ExtensionAllowInsecureUpdates">Allow insecure algorithms in integrity checks on extension updates and installs</string>
      <string id="ExtensionAllowInsecureUpdates_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultSearchProviderInstantURL">Default search provider instant URL</string>
      <string id="DefaultSearchProviderInstantURL_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultSearchProviderSearchTermsReplacementKey">Parameter controlling search term placement for the default search provider</string>
      <string id="DefaultSearchProviderSearchTermsReplacementKey_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultSearchProviderInstantURLPostParams">Parameters for instant URL which uses POST</string>
      <string id="DefaultSearchProviderInstantURLPostParams_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultFileHandlingGuardSetting">Control use of the File Handling API</string>
      <string id="DefaultFileHandlingGuardSetting_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultFileHandlingGuardSetting_BlockFileHandling">Do not allow any web app to access file types via the File Handling API</string>
      <string id="DefaultFileHandlingGuardSetting_AskFileHandling">Allow web apps to ask the user to grant access to file types via the File Handling API</string>
      <string id="DefaultPluginsSetting">Default Flash setting</string>
      <string id="DefaultPluginsSetting_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultPluginsSetting_AllowPlugins">Allow all sites to automatically run the Flash plugin</string>
      <string id="DefaultPluginsSetting_BlockPlugins">Block the Flash plugin</string>
      <string id="DefaultPluginsSetting_ClickToPlay">Click to play</string>
      <string id="DefaultKeygenSetting">Default key generation setting</string>
      <string id="DefaultKeygenSetting_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DefaultKeygenSetting_AllowKeygen">Allow all sites to use key generation</string>
      <string id="DefaultKeygenSetting_BlockKeygen">Do not allow any site to use key generation</string>
      <string id="FileHandlingAllowedForUrls">Allow the File Handling API on these web apps</string>
      <string id="FileHandlingAllowedForUrls_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="FileHandlingAllowedForUrlsDesc">Allow the File Handling API on these web apps</string>
      <string id="FileHandlingBlockedForUrls">Block the File Handling API on these web apps</string>
      <string id="FileHandlingBlockedForUrls_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="FileHandlingBlockedForUrlsDesc">Block the File Handling API on these web apps</string>
      <string id="KeygenAllowedForUrls">Allow key generation on these sites</string>
      <string id="KeygenAllowedForUrls_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="KeygenAllowedForUrlsDesc">Allow key generation on these sites</string>
      <string id="KeygenBlockedForUrls">Block key generation on these sites</string>
      <string id="KeygenBlockedForUrls_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="KeygenBlockedForUrlsDesc">Block key generation on these sites</string>
      <string id="LegacySameSiteCookieBehaviorEnabled">Default legacy SameSite cookie behavior setting</string>
      <string id="LegacySameSiteCookieBehaviorEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="LegacySameSiteCookieBehaviorEnabled_DefaultToLegacySameSiteCookieBehavior">Revert to legacy SameSite behavior for cookies on all sites</string>
      <string id="LegacySameSiteCookieBehaviorEnabled_DefaultToSameSiteByDefaultCookieBehavior">Use SameSite-by-default behavior for cookies on all sites</string>
      <string id="PluginsAllowedForUrls">Allow the Flash plugin on these sites</string>
      <string id="PluginsAllowedForUrls_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</string>
      <string id="PluginsBlockedForUrls">Block the Flash plugin on these sites</string>
      <string id="PluginsBlockedForUrls_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</string>
      <string id="ChromeFrameRendererSettings">Default HTML renderer for Brave Frame</string>
      <string id="ChromeFrameRendererSettings_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ChromeFrameRendererSettings_RenderInHost">Use the host browser by default</string>
      <string id="ChromeFrameRendererSettings_RenderInChromeFrame">Use Brave Frame by default</string>
      <string id="RenderInChromeFrameList">Always render the following URL patterns in Brave Frame</string>
      <string id="RenderInChromeFrameList_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="RenderInChromeFrameListDesc">Always render the following URL patterns in Brave Frame</string>
      <string id="RenderInHostList">Always render the following URL patterns in the host browser</string>
      <string id="RenderInHostList_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="RenderInHostListDesc">Always render the following URL patterns in the host browser</string>
      <string id="AdditionalLaunchParameters">Additional command line parameters for Brave</string>
      <string id="AdditionalLaunchParameters_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SkipMetadataCheck">Skip the meta tag check in Brave Frame</string>
      <string id="SkipMetadataCheck_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ChromeFrameContentTypes">Allow Brave Frame to handle the listed content types</string>
      <string id="ChromeFrameContentTypes_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ChromeFrameContentTypesDesc">Allow Brave Frame to handle the listed content types</string>
      <string id="SupervisedUserCreationEnabled">Enable creation of supervised users</string>
      <string id="SupervisedUserCreationEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="CloudPrintWarningsSuppressed">Suppress Google Cloud Print deprecation messages</string>
      <string id="CloudPrintWarningsSuppressed_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DnsPrefetchingEnabled">Enable network prediction</string>
      <string id="DnsPrefetchingEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DisableSpdy">Disable SPDY protocol</string>
      <string id="DisableSpdy_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="Http09OnNonDefaultPortsEnabled">Enable HTTP/0.9 support on non-default ports</string>
      <string id="Http09OnNonDefaultPortsEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ForceLegacyDefaultReferrerPolicy">Use a default referrer policy of no-referrer-when-downgrade.</string>
      <string id="ForceLegacyDefaultReferrerPolicy_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="AppCacheForceEnabled">Allows the AppCache feature to be re-enabled even if it is off by default.</string>
      <string id="AppCacheForceEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DisabledPlugins">Specify a list of disabled plugins</string>
      <string id="DisabledPlugins_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DisabledPluginsDesc">Specify a list of disabled plugins</string>
      <string id="EnabledPlugins">Specify a list of enabled plugins</string>
      <string id="EnabledPlugins_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnabledPluginsDesc">Specify a list of enabled plugins</string>
      <string id="DisabledPluginsExceptions">Specify a list of plugins that the user can enable or disable</string>
      <string id="DisabledPluginsExceptions_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DisabledPluginsExceptionsDesc">Specify a list of plugins that the user can enable or disable</string>
      <string id="DisablePluginFinder">Specify whether the plugin finder should be disabled (deprecated)</string>
      <string id="DisablePluginFinder_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnableDeprecatedWebBasedSignin">Enable the old web-based signin flow</string>
      <string id="EnableDeprecatedWebBasedSignin_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="MediaCacheSize">Set media disk cache size in bytes</string>
      <string id="MediaCacheSize_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ClearSiteDataOnExit">Clear site data on browser shutdown (deprecated)</string>
      <string id="ClearSiteDataOnExit_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="InstantEnabled">Enable Instant</string>
      <string id="InstantEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="AllowOutdatedPlugins">Allow running plugins that are outdated</string>
      <string id="AllowOutdatedPlugins_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="AlwaysAuthorizePlugins">Always runs plugins that require authorization (deprecated)</string>
      <string id="AlwaysAuthorizePlugins_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="RunAllFlashInAllowMode">Extend Flash content setting to all content (deprecated)</string>
      <string id="RunAllFlashInAllowMode_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="GCFUserDataDir">Set Brave Frame user data directory</string>
      <string id="GCFUserDataDir_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="HideWebStorePromo">Prevent app promotions from appearing on the new tab page</string>
      <string id="HideWebStorePromo_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnterpriseWebStoreURL">Enterprise web store URL (deprecated)</string>
      <string id="EnterpriseWebStoreURL_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnterpriseWebStoreName">Enterprise web store name (deprecated)</string>
      <string id="EnterpriseWebStoreName_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DisableSSLRecordSplitting">Disable TLS False Start</string>
      <string id="DisableSSLRecordSplitting_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnableSha1ForLocalAnchors">Allow SHA-1 signed certificates issued by local trust anchors</string>
      <string id="EnableSha1ForLocalAnchors_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnableCommonNameFallbackForLocalAnchors">Allow certificates issued by local trust anchors without subjectAlternativeName extension</string>
      <string id="EnableCommonNameFallbackForLocalAnchors_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnableSymantecLegacyInfrastructure">Enable trust in Symantec Corporation's Legacy PKI Infrastructure</string>
      <string id="EnableSymantecLegacyInfrastructure_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SafeBrowsingExtendedReportingOptInAllowed">Allow users to opt in to Safe Browsing extended reporting</string>
      <string id="SafeBrowsingExtendedReportingOptInAllowed_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SuppressChromeFrameTurndownPrompt">Suppress the Brave Frame turndown prompt</string>
      <string id="SuppressChromeFrameTurndownPrompt_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnableDeprecatedWebPlatformFeatures">Enable deprecated web platform features for a limited time</string>
      <string id="EnableDeprecatedWebPlatformFeatures_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</string>
      <string id="SSLVersionFallbackMin">Minimum TLS version to fallback to</string>
      <string id="SSLVersionFallbackMin_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SSLVersionFallbackMin_TLSv1_1">TLS 1.1</string>
      <string id="SSLVersionFallbackMin_TLSv1_2">TLS 1.2</string>
      <string id="SSLVersionMax">Maximum SSL version enabled</string>
      <string id="SSLVersionMax_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SSLVersionMax_TLSv1_2">TLS 1.2</string>
      <string id="SSLVersionMax_TLSv1_3">TLS 1.3</string>
      <string id="RC4Enabled">Enable RC4 cipher suites in TLS</string>
      <string id="RC4Enabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="DHEEnabled">Enable DHE cipher suites in TLS</string>
      <string id="DHEEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="WelcomePageOnOSUpgradeEnabled">Enable showing the welcome page on the first browser launch following OS upgrade</string>
      <string id="WelcomePageOnOSUpgradeEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="PacHttpsUrlStrippingEnabled">Enable PAC URL stripping (for https://)</string>
      <string id="PacHttpsUrlStrippingEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="WebDriverOverridesIncompatiblePolicies">Allow WebDriver to Override Incompatible Policies</string>
      <string id="WebDriverOverridesIncompatiblePolicies_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="MachineLevelUserCloudPolicyEnrollmentToken">The enrollment token of cloud policy on desktop</string>
      <string id="MachineLevelUserCloudPolicyEnrollmentToken_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="TabUnderAllowed">Allow sites to simultaneously navigate and open pop-ups</string>
      <string id="TabUnderAllowed_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="TabFreezingEnabled">Allow background tabs freeze</string>
      <string id="TabFreezingEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="ForceNetworkInProcess">Force networking code to run in the browser process</string>
      <string id="ForceNetworkInProcess_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="AllowPopupsDuringPageUnload">Allows a page to show popups during its unloading</string>
      <string id="AllowPopupsDuringPageUnload_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="TLS13HardeningForLocalAnchorsEnabled">Enable a TLS 1.3 security feature for local trust anchors.</string>
      <string id="TLS13HardeningForLocalAnchorsEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="CorsMitigationList">Enable CORS check mitigations in the new CORS implementation</string>
      <string id="CorsMitigationList_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="CorsMitigationListDesc">Enable CORS check mitigations in the new CORS implementation</string>
      <string id="CorsLegacyModeEnabled">Use the legacy CORS implementation rather than new CORS</string>
      <string id="CorsLegacyModeEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="WebComponentsV0Enabled">Re-enable Web Components v0 API until M84.</string>
      <string id="WebComponentsV0Enabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="UseLegacyFormControls">Use Legacy Form Controls until M84.</string>
      <string id="UseLegacyFormControls_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="LocalDiscoveryEnabled">Enable chrome://devices</string>
      <string id="LocalDiscoveryEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="AdvancedProtectionDeepScanningEnabled">Enable sending downloads to Google for deep scanning for users enrolled in the Advanced Protection program</string>
      <string id="AdvancedProtectionDeepScanningEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="UserAgentClientHintsEnabled">Control the User-Agent Client Hints feature.</string>
      <string id="UserAgentClientHintsEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="EnableDeprecatedPrivetPrinting">Enable deprecated privet printing</string>
      <string id="EnableDeprecatedPrivetPrinting_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="TripleDESEnabled">Enable 3DES cipher suites in TLS</string>
      <string id="TripleDESEnabled_Explain">This policy is removed. It is not compatible with this version of Brave. Read more at https://support.google.com/chrome/a/answer/7643500</string>
      <string id="SafeBrowsing_group">Safe Browsing settings</string>
      <string id="SafeBrowsingExtendedReportingEnabled">Enable Safe Browsing Extended Reporting</string>
      <string id="SafeBrowsingExtendedReportingEnabled_Explain">Setting the policy to Enabled turns on Brave's Safe Browsing Extended Reporting, which sends some system information and page content to Google servers to help detect dangerous apps and sites.

Setting the policy to Disabled means reports are never sent.

If you set this policy, users can't change it. If not set, users can decide whether to send reports or not.

See more about Safe Browsing ( https://developers.google.com/safe-browsing ).</string>
      <string id="SafeBrowsingProtectionLevel">Safe Browsing Protection Level</string>
      <string id="SafeBrowsingProtectionLevel_Explain">Allows you to control whether Brave's Safe Browsing feature is enabled and the mode it operates in.

If this policy is set to 'NoProtection' (value 0), Safe Browsing is never active.

If this policy is set to 'StandardProtection' (value 1, which is the default), Safe Browsing is always active in the standard mode.

If this policy is set to 'EnhancedProtection' (value 2), Safe Browsing is always active in the enhanced mode, which provides better security, but requires sharing more browsing information with Google.

If you set this policy as mandatory, users cannot change or override the Safe Browsing setting in Brave.

If this policy is left not set, Safe Browsing will operate in Standard Protection mode but users can change this setting.

See https://developers.google.com/safe-browsing for more info on Safe Browsing.</string>
      <string id="SafeBrowsingProtectionLevel_NoProtection">Safe Browsing is never active.</string>
      <string id="SafeBrowsingProtectionLevel_StandardProtection">Safe Browsing is active in the standard mode.</string>
      <string id="SafeBrowsingProtectionLevel_EnhancedProtection">Safe Browsing is active in the enhanced mode. This mode provides better security, but requires sharing more browsing information with Google.</string>
      <string id="SafeBrowsingAllowlistDomains">Configure the list of domains on which Safe Browsing will not trigger warnings.</string>
      <string id="SafeBrowsingAllowlistDomains_Explain">Setting the policy to Enabled means Safe Browsing will trust the domains you designate. It won't check them for dangerous resources such as phishing, malware, or unwanted software. Safe Browsing's download protection service won't check downloads hosted on these domains. Its password protection service won't check for password reuse.

Leaving the policy unset means default Safe Browsing protection applies to all resources.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value:

mydomain.com
myuniversity.edu</string>
      <string id="SafeBrowsingAllowlistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</string>
      <string id="PasswordProtectionWarningTrigger">Password protection warning trigger</string>
      <string id="PasswordProtectionWarningTrigger_Explain">Setting the policy lets you control the triggering of password protection warning. Password protection alerts users when they reuse their protected password on potentially suspicious sites.

Use PasswordProtectionLoginURLs and PasswordProtectionChangePasswordURL to set which password to protect.

If this policy is set to:

* PasswordProtectionWarningOff, no password protection warning will be shown.

* PasswordProtectionWarningOnPasswordReuse, password protection warning will be shown when the user reuses their protected password on a non-allowed site.

* PasswordProtectionWarningOnPhishingReuse, password protection warning will be shown when the user reuses their protected password on a phishing site.

Leaving the policy unset has the password protection service only protect Google passwords, but users can change this setting.</string>
      <string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOff">Password protection warning is off</string>
      <string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOnPasswordReuse">Password protection warning is triggered by password reuse</string>
      <string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOnPhishingReuse">Password protection warning is triggered by password reuse on phishing page</string>
      <string id="PasswordProtectionLoginURLs">Configure the list of enterprise login URLs where password protection service should capture salted hashes of passwords.</string>
      <string id="PasswordProtectionLoginURLs_Explain">Setting the policy sets the list of enterprise login URLs (HTTP and HTTPS protocols only). Password protection service will capture salted hashes of passwords on these URLs and use them for password reuse detection. For Brave to correctly capture password salted hashes, ensure your sign-in pages follow these guidelines ( https://www.chromium.org/developers/design-documents/create-amazing-password-forms ).

Turning this setting off or leaving it unset means the password protection service only captures the password salted hashes on https://accounts.google.com.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value:

https://mydomain.com/login.html
https://login.mydomain.com</string>
      <string id="PasswordProtectionLoginURLsDesc">Configure the list of enterprise login URLs where password protection service should capture salted hashes of passwords.</string>
      <string id="PasswordProtectionChangePasswordURL">Configure the change password URL.</string>
      <string id="PasswordProtectionChangePasswordURL_Explain">Setting the policy sets the URL for users to change their password after seeing a warning in the browser. The password protection service sends users to the URL (HTTP and HTTPS protocols only) you designate through this policy. For Brave to correctly capture the salted hash of the new password on this change password page, make sure your change password page follows these guidelines ( https://www.chromium.org/developers/design-documents/create-amazing-password-forms ).

Turning the policy off or leaving it unset means the service sends users to https://myaccount.google.com to change their password.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value: https://mydomain.com/change_password.html</string>
      <string id="Startup_group">Startup, Home page and New Tab page</string>
      <string id="ShowHomeButton">Show Home button on toolbar</string>
      <string id="ShowHomeButton_Explain">Setting the policy to Enabled shows the Home button on Brave's toolbar. Setting the policy to Disabled keeps the Home button from appearing.

If you set the policy, users can't change it in Brave. If not set, users chooses whether to show the Home button.</string>
      <string id="HomepageLocation">Configure the home page URL</string>
      <string id="HomepageLocation_Explain">Setting the policy sets the default homepage URL in Brave. You open the homepage using the Home button. On desktop, the RestoreOnStartup policies control the pages that open on startup.

If the homepage is set to the New Tab Page, by the user or HomepageIsNewTabPage, this policy has no effect.

 The URL needs a standard scheme, such as http://example.com or https://example.com. When this policy is set, users can't change their homepage URL in Brave.

Leaving both HomepageLocation and HomepageIsNewTabPage unset lets users choose their homepage.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value: https://www.chromium.org</string>
      <string id="HomepageIsNewTabPage">Use New Tab Page as homepage</string>
      <string id="HomepageIsNewTabPage_Explain">Setting the policy to Enabled makes the New Tab page the user's homepage, ignoring any homepage URL location. Setting the policy to Disabled means that their homepage is never the New Tab page, unless the user's homepage URL is set to chrome://newtab.

If you set the policy, users can't change their homepage type in Brave. If not set, the user decides whether or not the New Tab page is their homepage.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.</string>
      <string id="NewTabPageLocation">Configure the New Tab page URL</string>
      <string id="NewTabPageLocation_Explain">Setting the policy configures the default New Tab page URL and prevents users from changing it.

The New Tab page opens with new tabs and windows.

This policy doesn't decide which pages open on start up. Those are controlled by the RestoreOnStartup policies. This policy does affect the homepage, if that's set to open the New Tab page, as well as the startup page if it's set to open the New Tab page.

It is a best practice to provide fully canonicalized URL, if the URL is not fully canonicalized Brave will default to https://.

Leaving the policy unset or empty puts the default New Tab page in use.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value: https://www.chromium.org</string>
      <string id="RestoreOnStartup">Action on startup</string>
      <string id="RestoreOnStartup_Explain">Setting the policy lets you specify system behavior on startup. Turning this setting off amounts to leaving it unset as Brave must have specified start up behavior.

If you set the policy, users can't change it in Brave. If not set, users can change it.

Setting this policy to RestoreOnStartupIsLastSession turns off some settings that rely on sessions or that perform actions on exit, such as clearing browsing data on exit or session-only cookies.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.</string>
      <string id="RestoreOnStartup_RestoreOnStartupIsNewTabPage">Open New Tab Page</string>
      <string id="RestoreOnStartup_RestoreOnStartupIsLastSession">Restore the last session</string>
      <string id="RestoreOnStartup_RestoreOnStartupIsURLs">Open a list of URLs</string>
      <string id="RestoreOnStartupURLs">URLs to open on startup</string>
      <string id="RestoreOnStartupURLs_Explain">If RestoreOnStartup is set to RestoreOnStartupIsURLs, then setting RestoreOnStartupURLs to a list of URLs specify which URLs open.

If not set, the New Tab page opens on start up.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value:

https://example.com
https://www.chromium.org</string>
      <string id="RestoreOnStartupURLsDesc">URLs to open on startup</string>
      <string id="AbusiveExperienceInterventionEnforce">Abusive Experience Intervention Enforce</string>
      <string id="AbusiveExperienceInterventionEnforce_Explain">If SafeBrowsingEnabled is not Disabled, then setting AbusiveExperienceInterventionEnforce to Enabled or leaving it unset prevents sites with abusive experiences from opening new windows or tabs.

Setting SafeBrowsingEnabled to Disabled or AbusiveExperienceInterventionEnforce to Disabled lets sites with abusive experiences open new windows or tabs.</string>
      <string id="AccessibilityImageLabelsEnabled">Enable Get Image Descriptions from Google.</string>
      <string id="AccessibilityImageLabelsEnabled_Explain">The Get Image Descriptions from Google
accessibility feature enables visually-impaired screen reader users to
get descriptions of unlabeled images on the web. Users who choose to enable it
will have the option of using an anonymous Google service to provide
automatic descriptions for unlabeled images they encounter on the web.

If this feature is enabled, the content of images will be sent to Google
servers in order to generate a description. No cookies or other user
data is sent, and Google does not save or log any image content.

If this policy is set to Enabled, the
Get Image Descriptions from Google
feature will be enabled, though it will only affect users who are using a
screen reader or other similar assistive technology.

If this policy is set to Disabled, users will not have the option of enabling
the feature.

If this policy is not set, user can choose to use this feature or not.
</string>
      <string id="AdditionalDnsQueryTypesEnabled">Allow DNS queries for additional DNS record types</string>
      <string id="AdditionalDnsQueryTypesEnabled_Explain">This policy controls whether Brave may query additional DNS record types when making insecure DNS requests. This policy has no effect on DNS queries made via Secure DNS, which may always query additional DNS types.

If this policy is unset or set to Enabled, additional types such as HTTPS (DNS type 65) may be queried in addition to A (DNS type 1) and AAAA (DNS type 28).

If this policy is set to Disabled, DNS will only be queried for A (DNS type 1) and/or AAAA (DNS type 28).

This policy is a temporary measure and will be removed in future versions of Brave. After removal of the policy, Brave will always be able to query additional DNS types.</string>
      <string id="AdsSettingForIntrusiveAdsSites">Ads setting for sites with intrusive ads</string>
      <string id="AdsSettingForIntrusiveAdsSites_Explain">Unless SafeBrowsingEnabled is set to False, then setting AdsSettingForIntrusiveAdsSites to 1 or leaving it unset allows ads on all sites.

Setting the policy to 2 blocks ads on sites with intrusive ads.</string>
      <string id="AdsSettingForIntrusiveAdsSites_AllowAds">Allow ads on all sites</string>
      <string id="AdsSettingForIntrusiveAdsSites_BlockAds">Do not allow ads on sites with intrusive ads</string>
      <string id="AdvancedProtectionAllowed">Enable additional protections for users enrolled in the Advanced Protection program</string>
      <string id="AdvancedProtectionAllowed_Explain">This policy controls whether users enrolled in the Advanced Protection program receive extra protections. Some of these features may involve the sharing of data with Google (for example, Advanced Protection users will be able to send their downloads to Google for malware scanning). If set to True or not set, enrolled users will receive extra protections. If set to False, Advanced Protection users will receive only the standard consumer features.</string>
      <string id="AllowDeletingBrowserHistory">Enable deleting browser and download history</string>
      <string id="AllowDeletingBrowserHistory_Explain">Setting the policy to Enabled or leaving it unset means browser history and download history can be deleted in Chrome, and users can't change this setting.

Setting the policy to Disabled means browser history and download history can't be deleted. Even with this policy off, the browsing and download history are not guaranteed to be retained. Users may be able to edit or delete the history database files directly, and the browser itself may expire or archive any or all history items at any time.</string>
      <string id="AllowDinosaurEasterEgg">Allow Dinosaur Easter Egg Game</string>
      <string id="AllowDinosaurEasterEgg_Explain">Setting the policy to True allows users to play the dinosaur game. Setting the policy to False means users can't play the dinosaur easter egg game when device is offline.

Leaving the policy unset means users can't play the game on enrolled Brave OS, but can under other circumstances.</string>
      <string id="AllowFileSelectionDialogs">Allow invocation of file selection dialogs</string>
      <string id="AllowFileSelectionDialogs_Explain">Setting the policy to Enabled or leaving it unset means Chrome can display, and users can open, file selection dialogs.

Setting the policy to Disabled means that whenever users perform actions provoking a file selection dialog, such as importing bookmarks, uploading files, and saving links, a message appears instead. The user is assumed to have clicked Cancel on the file selection dialog.</string>
      <string id="AllowSyncXHRInPageDismissal">Allows a page to perform synchronous XHR requests during page dismissal.</string>
      <string id="AllowSyncXHRInPageDismissal_Explain">This policy allows an admin to specify that a page may send synchronous XHR requests during page dismissal.

When the policy is set to enabled, pages are allowed to send synchronous XHR requests during page dismissal.

When the policy is set to disabled or not set, pages are not allowed to send synchronous XHR requests during page dismissal.

This policy will be removed in Chrome 93.

See https://www.chromestatus.com/feature/4664843055398912 .</string>
      <string id="AllowedDomainsForApps">Define domains allowed to access Google Workspace</string>
      <string id="AllowedDomainsForApps_Explain">Setting the policy turns on Chrome's restricted sign-in feature in Google Workspace and prevents users from changing this setting. Users can only access Google tools using accounts from the specified domains (to allow gmail or googlemail accounts, add consumer_accounts to the list of domains). This setting prevents users from signing in and adding a Secondary Account on a managed device that requires Google authentication, if that account doesn't belong to one of the explicitly allowed domains.

Leaving this setting empty or unset means users can access Google Workspace with any account.

Users cannot change or override this setting.

Note: This policy causes the X-GoogApps-Allowed-Domains header to be appended to all HTTP and HTTPS requests to all google.com domains, as described in https://support.google.com/a/answer/1668854.

Example value: managedchrome.com,example.com</string>
      <string id="AlternateErrorPagesEnabled">Enable alternate error pages</string>
      <string id="AlternateErrorPagesEnabled_Explain">Setting the policy to True means Brave uses alternate error pages built into (such as "page not found"). Setting the policy to False means Brave never uses alternate error pages.

If you set the policy, users can't change it. If not set, the policy is on, but users can change this setting.</string>
      <string id="AlwaysOpenPdfExternally">Always Open PDF files externally</string>
      <string id="AlwaysOpenPdfExternally_Explain">Setting the policy to Enabled turns the internal PDF viewer off in Brave, treats PDF files as a download, and lets users open PDFs with the default application.

Setting the policy to Disabled means that unless users turns off the PDF plugin, it will open PDF files.

If you set the policy, users can't change it in Brave. If not set, users can choose whether to open PDF externally or not.</string>
      <string id="AmbientAuthenticationInPrivateModesEnabled">Enable Ambient Authentication for profile types.</string>
      <string id="AmbientAuthenticationInPrivateModesEnabled_Explain">Configuring this policy will allow/disallow ambient authentication for Incognito and Guest profiles in Brave.

Ambient Authentication is http authentication with default credentials if explicit credentials are not provided via NTLM/Kerberos/Negotiate challenge/response schemes.

Setting the RegularOnly (value 0), allows ambient authentication for Regular sessions only. Incognito and Guest sessions wouldn't be allowed to ambiently authenticate.

Setting the IncognitoAndRegular (value 1), allows ambient authentication for Incognito and Regular sessions. Guest sessions wouldn't be allowed to ambiently authenticate.

Setting the GuestAndRegular (value 2), allows ambient authentication for Guest and Regular sessions. Incognito sessions wouldn't be allowed to ambiently authenticate.

Setting the  All (value 3), allows ambient authentication for all sessions.

Note that, ambient authentication is always allowed on regular profiles.

In Brave version 81 and later, if the policy is left not set, ambient authentication will be enabled in regular sessions only.</string>
      <string id="AmbientAuthenticationInPrivateModesEnabled_RegularOnly">Enable ambient authentication in regular sessions only.</string>
      <string id="AmbientAuthenticationInPrivateModesEnabled_IncognitoAndRegular">Enable ambient authentication in incognito and regular sessions.</string>
      <string id="AmbientAuthenticationInPrivateModesEnabled_GuestAndRegular">Enable ambient authentication in guest and regular sessions.</string>
      <string id="AmbientAuthenticationInPrivateModesEnabled_All">Enable ambient authentication in regular, incognito and guest sessions.</string>
      <string id="ApplicationLocaleValue">Application locale</string>
      <string id="ApplicationLocaleValue_Explain">Setting the policy specifies the locale Brave uses.

Turning it off or leaving it unset means the locale will be the first valid locale from:
1) The user specified locale (if configured).
2) The system locale.
3) The fallback locale (en-US).

Example value: en</string>
      <string id="AudioCaptureAllowed">Allow or deny audio capture</string>
      <string id="AudioCaptureAllowed_Explain">Setting the policy to Enabled or leaving it unset means that, with the exception of URLs set in the AudioCaptureAllowedUrls list, users get prompted for audio capture access.

Setting the policy to Disabled turns off prompts, and audio capture is only available to URLs set in the AudioCaptureAllowedUrls list.

Note: The policy affects all audio input (not just the built-in microphone).</string>
      <string id="AudioCaptureAllowedUrls">URLs that will be granted access to audio capture devices without prompt</string>
      <string id="AudioCaptureAllowedUrls_Explain">Setting the policy means you specify the URL list whose patterns get matched to the security origin of the requesting URL. A match grants access to audio capture devices without prompt

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

Example value:

https://www.example.com/
https://[*.]example.edu/</string>
      <string id="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</string>
      <string id="AudioProcessHighPriorityEnabled">Allow the audio process to run with priority above normal on Windows</string>
      <string id="AudioProcessHighPriorityEnabled_Explain">This policy controls the priority of the audio process on Windows.
If this policy is enabled, the audio process will run with above normal priority.
If this policy is disabled, the audio process will run with normal priority.
If this policy is not set, the default configuration for the audio process will be used.
This policy is intended as a temporary measure to give enterprises the ability to
run audio with higher priority to address certain performance issues with audio capture.
This policy will be removed in the future.</string>
      <string id="AudioSandboxEnabled">Allow the audio sandbox to run</string>
      <string id="AudioSandboxEnabled_Explain">This policy controls the audio process sandbox.
If this policy is enabled, the audio process will run sandboxed.
If this policy is disabled, the audio process will run unsandboxed and the WebRTC audio-processing module will run in the renderer process.
This leaves users open to security risks related to running the audio subsystem unsandboxed.
If this policy is not set, the default configuration for the audio sandbox will be used, which may differ per platform.
This policy is intended to give enterprises flexibility to disable the audio sandbox if they use security software setups that interfere with the sandbox.</string>
      <string id="AutoLaunchProtocolsFromOrigins">Define a list of protocols that can launch an external application from listed origins without prompting the user</string>
      <string id="AutoLaunchProtocolsFromOrigins_Explain">Allows you to set a list of protocols, and for each protocol an associated list of allowed origin patterns, that can launch an external application without prompting the user. The trailing separator should not be included when listing the protocol, so list "skype" instead of "skype:" or "skype://".

If this policy is set, a protocol will only be permitted to launch an external application without prompting by policy if the protocol is listed, and the origin of the site trying to launch the protocol matches one of the origin patterns in that protocol's allowed_origins list. If either condition is false the external protocol launch prompt will not be omitted by policy.

If this policy is not set, no protocols can launch without a prompt by default. Users may opt out of prompts on a per-protocol/per-site basis unless the ExternalProtocolDialogShowAlwaysOpenCheckbox policy is set to Disabled. This policy has no impact on per-protocol/per-site prompt exemptions set by users.

The origin matching patterns use a similar format to those for the 'URLBlocklist' policy, which are documented at http://www.chromium.org/administrators/url-blocklist-filter-format.

However, origin matching patterns for this policy cannot contain "/path" or "@query" elements. Any pattern that does contain a "/path" or "@query" element will be ignored.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=AutoLaunchProtocolsFromOrigins for more information about schema and formatting.


Example value:

[
  {
    "protocol": "spotify",
    "allowed_origins": [
      "example.com",
      "http://www.example.com:8080"
    ]
  },
  {
    "protocol": "teams",
    "allowed_origins": [
      "https://example.com",
      "https://.mail.example.com"
    ]
  },
  {
    "protocol": "outlook",
    "allowed_origins": [
      "*"
    ]
  }
]</string>
      <string id="AutoOpenAllowedForURLs">URLs where AutoOpenFileTypes can apply</string>
      <string id="AutoOpenAllowedForURLs_Explain">List of URLs specifying which urls AutoOpenFileTypes will apply to. This policy has no impact on automatically open values set by users.

If this policy is set, files will only automatically open by policy if the url is part of this set and the file type is listed in AutoOpenFileTypes. If either condition is false the download won't automatically open by policy.

If this policy isn't set, all downloads where the file type is in AutoOpenFileTypes will automatically open.

A URL pattern has to be formatted according to https://www.chromium.org/administrators/url-blocklist-filter-format.

Example value:

example.com
https://ssl.server.com
hosting.com/good_path
https://server:8080/path
.exact.hostname.com</string>
      <string id="AutoOpenAllowedForURLsDesc">URLs where AutoOpenFileTypes can apply</string>
      <string id="AutoOpenFileTypes">List of file types that should be automatically opened on download</string>
      <string id="AutoOpenFileTypes_Explain">List of file types that should be automatically opened on download. The leading separator should not be included when listing the file type, so list "txt" instead of ".txt".

Files with types that should be automatically opened will still be subject to the enabled safe browsing checks and won't be opened if they fail those checks.

If this policy isn't set, only file types that a user has already specified to automatically be opened will do so when downloaded.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value:

exe
txt</string>
      <string id="AutoOpenFileTypesDesc">List of file types that should be automatically opened on download</string>
      <string id="AutofillAddressEnabled">Enable AutoFill for addresses</string>
      <string id="AutofillAddressEnabled_Explain">Setting the policy to True or leaving it unset gives users control of Autofill for addresses in the UI.

Setting the policy to False means Autofill never suggests or fills address information, nor does it save additional address information that users submit while browsing the web.</string>
      <string id="AutofillCreditCardEnabled">Enable AutoFill for credit cards</string>
      <string id="AutofillCreditCardEnabled_Explain">Setting the policy to True or leaving it unset means users can control autofill suggestions for credit cards in the UI.

Setting the policy to False means autofill never suggests or fills credit card information, nor will it save additional credit card information that users might submit while browsing the web.</string>
      <string id="AutoplayAllowed">Allow media autoplay</string>
      <string id="AutoplayAllowed_Explain">Setting the policy to True lets Brave autoplay media. Setting the policy to False stops Brave from autoplaying media.

 By default, Brave doesn't autoplay media. But, for certain URL patterns, you can use the AutoplayAllowlist policy to change this setting.

If this policy changes while Brave is running, it only applies to newly opened tabs.</string>
      <string id="AutoplayAllowlist">Allow media autoplay on a allowlist of URL patterns</string>
      <string id="AutoplayAllowlist_Explain">Setting the policy lets videos play automatically (without user consent) with audio content in Brave. If AutoplayAllowed policy is set to True, then this policy has no effect. If AutoplayAllowed is set to False, then any URL patterns set in this policy can still play. If this policy changes while Brave is running, it only applies to newly opened tabs.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="AutoplayAllowlistDesc">Allow media autoplay on a allowlist of URL patterns</string>
      <string id="BackgroundModeEnabled">Continue running background apps when Brave is closed</string>
      <string id="BackgroundModeEnabled_Explain">Setting the policy to Enabled turns background mode on. In background mode, a Brave process is started on OS sign-in and keeps running when the last browser window is closed, allowing background apps and the browsing session to remain active. The background process displays an icon in the system tray and can always be closed from there.

Setting the policy to Disabled turns background mode off.

If you set the policy, users can't change it in the browser settings. If unset, background mode is off at first, but users can change it.</string>
      <string id="BlockThirdPartyCookies">Block third party cookies</string>
      <string id="BlockThirdPartyCookies_Explain">Setting the policy to Enabled prevents webpage elements that aren't from the domain that's in the browser's address bar from setting cookies. Setting the policy to Disabled lets those elements set cookies and prevents users from changing this setting.

Leaving it unset turns third-party cookies on, but users can change this setting.</string>
      <string id="BookmarkBarEnabled">Enable Bookmark Bar</string>
      <string id="BookmarkBarEnabled_Explain">Setting the policy to True displays a bookmark bar in Brave. Setting the policy to False means users never see the bookmark bar.

If you set the policy, users can't change it. If not set, users decide whether to use this function.</string>
      <string id="BrowserAddPersonEnabled">Enable add person in user manager</string>
      <string id="BrowserAddPersonEnabled_Explain">If this policy is set to true or not configured, Brave will allow Add Person from the user manager.

If this policy is set to false, Brave will not allow creation of new profiles from the user manager.</string>
      <string id="BrowserGuestModeEnabled">Enable guest mode in browser</string>
      <string id="BrowserGuestModeEnabled_Explain">If this policy is set to true or not configured, Brave will enable guest logins. Guest logins are Brave profiles where all windows are in incognito mode.

If this policy is set to false, Brave will not allow guest profiles to be started.</string>
      <string id="BrowserGuestModeEnforced">Enforce browser guest mode</string>
      <string id="BrowserGuestModeEnforced_Explain">Setting the policy to Enabled means Brave enforces guest sessions and prevents profile sign-ins. Guest sign-ins are Brave profiles where windows are in Incognito mode.

Setting the policy to Disabled, leaving it unset, or disabling browser Guest mode (through BrowserGuestModeEnabled) allows the use of new and existing profiles.</string>
      <string id="BrowserLabsEnabled">Browser experiments icon in toolbar</string>
      <string id="BrowserLabsEnabled_Explain">Setting the policy to Enabled or leaving the policy unset means that users can access browser experimental features through an icon in the toolbar

Setting the policy to Disabled removes the browser experimental features icon from the toolbar.

chrome://flags and any other means of turning off and on browser features will still behave as expected regardless of whether this policy is Enabled or Disabled.</string>
      <string id="BrowserLegacyExtensionPointsBlocked">Block Browser Legacy Extension Points</string>
      <string id="BrowserLegacyExtensionPointsBlocked_Explain">Setting the policy to Enabled or leaving it unset will enable ProcessExtensionPointDisablePolicy to block legacy extension points in the Browser process.

Setting the policy to Disabled has a detrimental effect on Brave's security and stability as unknown and potentially hostile code can load inside Brave's browser process. Only turn off the policy if there are compatibility issues with third-party software that must run inside Brave's browser process.

Note: Read more about Process mitigation policies ( https://chromium.googlesource.com/chromium/src/+/HEAD/docs/design/sandbox.md#Process-mitigation-policies ).</string>
      <string id="BrowserNetworkTimeQueriesEnabled">Allow queries to a Google time service</string>
      <string id="BrowserNetworkTimeQueriesEnabled_Explain">Setting the policy to Enabled or leaving it unset means Brave send occasional queries to a Google server to retrieve an accurate timestamp.

Setting the policy to Disabled stops Brave from sending these queries.</string>
      <string id="BrowserSignin">Browser sign in settings</string>
      <string id="BrowserSignin_Explain">This policy controls the sign-in behavior of the browser. It allows you to specify if the user can sign in to Brave with their account and use account related services like Brave Sync.

If the policy is set to "Disable browser sign-in" then the user cannot sign in to the browser and use account-based services. In this case browser-level features like Brave Sync cannot be used and will be unavailable. On iOS, if the user was signed in and the policy is set to "Disabled" they will be signed out immediately. On other platforms, they will be signed out the next time they run Brave. On all platforms, their local profile data like bookmarks, passwords etc. will be preserved and still usable. The user will still be able to sign into and use Google web services like Gmail.

If the policy is set to "Enable browser sign-in," then the user is allowed to sign in to the browser. On all platforms except iOS, the user is automatically signed in to the browser when signed in to Google web services like Gmail. Being signed in to the browser means the user's account information will be kept by the browser. However, it does not mean that Brave Sync will be turned on by default; the user must separately opt-in to use this feature. Enabling this policy will prevent the user from turning off the setting that allows browser sign-in. To control the availability of Brave Sync, use the SyncDisabled policy.

If the policy is set to "Force browser sign-in" the user is presented with an account selection dialog and has to choose and sign in to an account to use the browser. This ensures that for managed accounts the policies associated with the account are applied and enforced. The default value of BrowserGuestModeEnabled will be set to disabled. Note that existing unsigned profiles will be locked and inaccessible after enabling this policy. For more information, see help center article: https://support.google.com/chrome/a/answer/7572556 . This option is not supported on Linux, Android or iOS. It will fall back to "Enable browser sign-in" if used.

If this policy is not set then the user can decide if they want to enable browser sign-in in the Brave settings and use it as they see fit.</string>
      <string id="BrowserSignin_Disable">Disable browser sign-in</string>
      <string id="BrowserSignin_Enable">Enable browser sign-in</string>
      <string id="BrowserSignin_Force">Force users to sign-in to use the browser</string>
      <string id="BrowserThemeColor">Configure the color of the browser's theme</string>
      <string id="BrowserThemeColor_Explain">This policy allows admins to configure the color of Brave's theme. The input string should be a valid hex color string matching the format "#RRGGBB".

Setting the policy to a valid hex color causes a theme based on that color to be automatically generated and applied to the browser. Users won't be able to change the theme set by the policy.

Leaving the policy unset lets users change their browser's theme as preferred.

Example value: #FFFFFF</string>
      <string id="BrowsingDataLifetime">Browsing Data Lifetime Settings</string>
      <string id="BrowsingDataLifetime_Explain">Configures browsing data lifetime settings for Brave. This policy allows admins to configure (per data-type) when data is deleted by the browser. This is useful for customers that work with sensitive customer data. The policy will only take effect if SyncDisabled is set to true.

The available data types are 'browsing_history', 'download_history', 'cookies_and_other_site_data', 'cached_images_and_files', 'password_signin', 'autofill', 'site_settings' and 'hosted_app_data'.

The browser will automatically remove data of selected types that is older than 'time_to_live_in_hours'. The minimum value that can be set is 1 hour.

The deletion of expired data will happen 15 seconds after the browser starts then every hour while the browser is running.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=BrowsingDataLifetime for more information about schema and formatting.


Example value:

[
  {
    "time_to_live_in_hours": 24,
    "data_types": [
      "browsing_history"
    ]
  },
  {
    "time_to_live_in_hours": 12,
    "data_types": [
      "password_signin",
      "autofill"
    ]
  }
]</string>
      <string id="BuiltInDnsClientEnabled">Use built-in DNS client</string>
      <string id="BuiltInDnsClientEnabled_Explain">This policy controls which software stack is used to communicate with the DNS server: the Operating System DNS client, or Brave's built-in DNS client. This policy does not affect which DNS servers are used: if, for example, the operating system is configured to use an enterprise DNS server, that same server would be used by the built-in DNS client. It also does not control if DNS-over-HTTPS is used; Brave will always use the built-in resolver for DNS-over-HTTPS requests. Please see the DnsOverHttpsMode policy for information on controlling DNS-over-HTTPS.

If this policy is set to Enabled, the built-in DNS client will be used, if available.

If this policy is set to Disabled, the built-in DNS client will only be used when DNS-over-HTTPS is in use.

If this policy is left unset, the built-in DNS client will be enabled by default on macOS, Android (when neither Private DNS nor VPN are enabled) and Brave OS.</string>
      <string id="CECPQ2Enabled">CECPQ2 post-quantum key-agreement enabled for TLS</string>
      <string id="CECPQ2Enabled_Explain">If this policy is not configured, or is set to enabled, then Brave will follow the default rollout process for CECPQ2, a post-quantum key-agreement algorithm in TLS.

CECPQ2 results in larger TLS messages which, in very rare cases, can trigger bugs in some networking hardware. This policy can be set to False to disable CECPQ2 while networking issues are resolved.

This policy is a temporary measure and will be removed in future versions of Brave.</string>
      <string id="CORSNonWildcardRequestHeadersSupport">CORS non-wildcard request headers support</string>
      <string id="CORSNonWildcardRequestHeadersSupport_Explain">Configures support of CORS non-wildcard request headers.

Brave version 97 introduces support for CORS non-wildcard request headers. When scripts make a cross-origin network request via fetch() and XMLHttpRequest with a script-added Authorization header, the header must be explicitly allowed by the Access-Control-Allow-Headers header in the CORS preflight response. "Explicitly" here means that the wild card symbol "*" doesn't cover the Authorization header. See https://www.chromest atus.com/feature/5768642492891136 for more detail.

If this policy is not set, or set to True, Brave will support the CORS non-wildcard request headers and behave as described above.

When this policy is set to False, chrome will allow the wildcard symbol ("*") in the Access-Control-Allow-Headers header in the CORS preflight response to cover the Authorization header.

This Enterprise policy is temporary; it's intended to be removed after Brave version 103.</string>
      <string id="CertificateTransparencyEnforcementDisabledForCas">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</string>
      <string id="CertificateTransparencyEnforcementDisabledForCas_Explain">Setting the policy turns off enforcement of Certificate Transparency disclosure requirements for a list of subjectPublicKeyInfo hashes. Enterprise hosts can keep using certificates that otherwise wouldn't be trusted (because they weren't properly publicly disclosed). To turn off enforcement, the hash must meet one of these conditions:

* It's of the server certificate's subjectPublicKeyInfo.

* It's of a subjectPublicKeyInfo that appears in a Certificate Authority (CA) certificate in the certificate chain. That CA certificate is constrained through the X.509v3 nameConstraints extension, one or more directoryName nameConstraints are present in the permittedSubtrees, and the directoryName has an organizationName attribute.

* It's of a subjectPublicKeyInfo that appears in a CA certificate in the certificate chain, the CA certificate has one or more organizationName attributes in the certificate Subject, and the server's certificate has the same number of organizationName attributes, in the same order, and with byte-for-byte identical values.

Specify a subjectPublicKeyInfo hash by linking the hash algorithm name, a slash, and the Base64 encoding of that hash algorithm applied to the DER-encoded subjectPublicKeyInfo of the specified certificate. Base64 encoding format matches that of an SPKI Fingerprint. The only recognized hash algorithm is sha256; others are ignored.

Leaving the policy unset means that if certificates requiring disclosure through Certificate Transparency aren't disclosed, then Brave doesn't trust those certificates.

Example value:

sha256/AAAAAAAAAAAAAAAAAAAAAA==
sha256//////////////////////w==</string>
      <string id="CertificateTransparencyEnforcementDisabledForCasDesc">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</string>
      <string id="CertificateTransparencyEnforcementDisabledForLegacyCas">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</string>
      <string id="CertificateTransparencyEnforcementDisabledForLegacyCas_Explain">Setting the policy turns off enforcement of Certificate Transparency disclosure requirements for a list of Legacy Certificate Authorities (CA) for certificate chains with a specified subjectPublicKeyInfo hash. Enterprise hosts can keep using certificates that otherwise wouldn't be trusted (because they weren't properly publicly disclosed). To turn off enforcement, the subjectPublicKeyInfo hash must appear in a CA certificate recognized as a Legacy CA. A Legacy CA is publicly trusted by one or more operating systems supported by Brave, but not Android Open Source Project or Brave OS.

Specify a subjectPublicKeyInfo hash by linking the hash algorithm name, a slash and the Base64 encoding of that hash algorithm applied to the DER-encoded subjectPublicKeyInfo of the specified certificate. Base64 encoding format matches that of an SPKI Fingerprint. The only recognized hash algorithm is sha256; others are ignored.

Leaving the policy unset means that if certificates requiring disclosure through Certificate Transparency aren't disclosed, then Brave doesn't trust those certificates.

Example value:

sha256/AAAAAAAAAAAAAAAAAAAAAA==
sha256//////////////////////w==</string>
      <string id="CertificateTransparencyEnforcementDisabledForLegacyCasDesc">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</string>
      <string id="CertificateTransparencyEnforcementDisabledForUrls">Disable Certificate Transparency enforcement for a list of URLs</string>
      <string id="CertificateTransparencyEnforcementDisabledForUrls_Explain">Setting the policy turns off Certificate Transparency disclosure requirements for the hostnames in the specified URLs. While making it harder to detect misissued certificates, hosts can keep using certificates that otherwise wouldn't be trusted (because they weren't properly publicly disclosed).

Leaving the policy unset means that if certificates requiring disclosure through Certificate Transparency aren't disclosed, then Brave doesn't trust those certificates.

A URL pattern follows this format ( https://www.chromium.org/administrators/url-blocklist-filter-format ). However, because the validity of certificates for a given hostname is independent of the scheme, port, or path, Brave only considers the hostname portion of the URL. Wildcard hosts aren't supported.

Example value:

example.com
.example.com</string>
      <string id="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</string>
      <string id="ChromeCleanupEnabled">Enable Chrome Cleanup on Windows</string>
      <string id="ChromeCleanupEnabled_Explain">Setting the policy to Enabled or leaving it unset means Chrome Cleanup periodically scans the system for unwanted software and should any be found, will ask the user if they wish to remove it. Manually triggering Chrome Cleanup from chrome://settings is allowed.

Setting the policy to Disabled means Chrome Cleanup won't periodically scan and manual triggering is disabled.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management.</string>
      <string id="ChromeCleanupReportingEnabled">Control how Chrome Cleanup reports data to Google</string>
      <string id="ChromeCleanupReportingEnabled_Explain">Setting the policy to Enabled means if Chrome Cleanup detects unwanted software, it may, in line with policy set by SafeBrowsingExtendedReportingEnabled, report about the scan to Google. Chrome Cleanup asks users if they want the cleanup. It sends results to Google.

Setting the policy to Disabled means if Chrome Cleanup detects unwanted software, it won't report about the scan to Google, regardless of the value of SafeBrowsingExtendedReportingEnabled. Chrome Cleanup asks users if they want the cleanup. The results aren't reported to Google.

Leaving the policy unset means Chrome Cleanup may, in line with policy set by SafeBrowsingExtendedReportingEnabled, report about scans for detecting unwanted software to Google. Chrome Cleanup asks users if they want the cleanup and to share the results with Google to help with future unwanted software detection. These results have file metadata, automatically installed extensions, and registry keys, as described by the Chrome Privacy Whitepaper.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management.</string>
      <string id="ChromeVariations">Determine the availability of variations</string>
      <string id="ChromeVariations_Explain">Configuring this policy allows to specify which variations are allowed to be applied in Brave.

Variations provide a means for offering modifications to Brave without shipping a new version of the browser by selectively enabling or disabling already existing features. See https://support.google.com/chrome/a?p=Manage_the_Chrome_variations_framework for more information.

Setting the VariationsEnabled (value 0), or leaving the policy not set allows all variations to be applied to the browser.

Setting the CriticalFixesOnly (value 1), allows only variations considered critical security or stability fixes to be applied to Brave.

Setting the VariationsDisabled (value 2), prevent all variations from being applied to the browser. Please note that this mode can potentially prevent the Brave developers from providing critical security fixes in a timely manner and is thus not recommended.</string>
      <string id="ChromeVariations_VariationsEnabled">Enable all variations</string>
      <string id="ChromeVariations_CriticalFixesOnly">Enable variations concerning critical fixes only</string>
      <string id="ChromeVariations_VariationsDisabled">Disable all variations</string>
      <string id="ClearBrowsingDataOnExitList">Clear Browsing Data on Exit</string>
      <string id="ClearBrowsingDataOnExitList_Explain">Configures a list of browsing data types that should be deleted when the user closes all browser windows. The available data types are browsing history (browsing_history), download history (download_history), cookies (cookies_and_other_site_data), cache(cached_images_and_files), autofill (autofill), passwords (password_signin), site settings (site_settings) and hosted apps data (hosted_app_data). This policy does not take precedence over AllowDeletingBrowserHistory.

This policy requires the SyncDisabled policy to be set to true, otherwise it will be ignored. If this policy is set at platform level, Sync should be disabled at platform level. If this policy is set at user level, Sync should be disabled for that user in order for this policy to take effect.

If Brave does not exit cleanly (for example, if the browser or the OS crashes), the browsing data will be cleared the next time the profile is loaded.

Example value:

browsing_history
download_history
cookies_and_other_site_data
cached_images_and_files
password_signin
autofill
site_settings
hosted_app_data</string>
      <string id="ClearBrowsingDataOnExitListDesc">Clear Browsing Data on Exit</string>
      <string id="ClickToCallEnabled">Enable the Click to Call Feature</string>
      <string id="ClickToCallEnabled_Explain">Enable the Click to Call feature which allows users to send phone numbers from Chrome Desktops to an Android device when the user is Signed-in. For more information, see help center article: https://support.google.com/chrome/answer/9430554?hl=en.

If this policy is set to enabled, the capability of sending phone numbers to Android devices will be enabled for the Chrome user.

If this policy is set to disabled, the capability of sending phone numbers to Android devices will be disabled for the Chrome user.

If you set this policy, users cannot change or override it.

If this policy is left unset, the Click to Call feature is enabled by default.</string>
      <string id="CloudManagementEnrollmentMandatory">Enable mandatory cloud management enrollment</string>
      <string id="CloudManagementEnrollmentMandatory_Explain">Setting the policy to Enabled mandates Chrome Browser Cloud Management enrollment and blocks Brave launch process if failed.

Setting the policy to Disabled or leaving it unset renders Chrome Browser Cloud Management optional and doesn't block Brave launch process if failed.

Machine scope cloud policy enrollment on desktop uses this policy. See https://support.google.com/chrome/a/answer/9301891?ref_topic=9301744 for details.</string>
      <string id="CloudManagementEnrollmentToken">The enrollment token of cloud policy on desktop</string>
      <string id="CloudManagementEnrollmentToken_Explain">Setting the policy means Brave tries to register itself with Chrome Browser Cloud Management. The value of this policy is an enrollment token you can retrieve from the Google Admin console.

See https://support.google.com/chrome/a/answer/9301891?ref_topic=9301744 for details.

Example value: 37185d02-e055-11e7-80c1-9a214cf093ae</string>
      <string id="CloudPolicyOverridesPlatformPolicy">Brave cloud policy overrides Platform policy.</string>
      <string id="CloudPolicyOverridesPlatformPolicy_Explain">Setting the policy to Enabled means cloud policy takes precedence if it conflicts with platform policy.

Setting the policy to Disabled or leaving it unset means platform policy takes precedence if it conflicts with cloud policy.

This mandatory policy affects machine scope cloud policies.</string>
      <string id="CloudUserPolicyMerge">Enables merging of user cloud policies into machine-level policies</string>
      <string id="CloudUserPolicyMerge_Explain">Setting the policy to Enabled allows policies associated with a Google Workspace account to be merged into machine-level policies.

Only policies originating from secure users can be merged. A secure user is affiliated with the organization that manages their browser using Chrome Browser Cloud Management. All other user-level policies will always be ignored.

Policies that need to be merged also need to be set in either PolicyListMultipleSourceMergeList or PolicyDictionaryMultipleSourceMergeList. This policy will be ignored if neither of the two aforementioned policies is configured.

Leaving the policy unset or setting it to Disabled prevents user-level cloud policies from being merged with policies from any other sources.</string>
      <string id="CloudUserPolicyOverridesCloudMachinePolicy">Allow user cloud policies to override Chrome Browser Cloud Management policies.</string>
      <string id="CloudUserPolicyOverridesCloudMachinePolicy_Explain">Setting the policy to Enabled allows policies associated with a Google Workspace account to take precedence if they conflict with Chrome Browser Cloud Management policies.

Only policies originating from secure users can be merged. A secure user is affiliated with the organization that manages their browser using Chrome Browser Cloud Management. All other user-level policies will have default precedence.

The policy can be combined with CloudPolicyOverridesPlatformPolicy. If both policies are enabled, user cloud policies will also take precedence over conflicting platform policies.

Leaving the policy unset or setting it to disabled causes user-level cloud policies to have default priority.</string>
      <string id="CommandLineFlagSecurityWarningsEnabled">Enable security warnings for command-line flags</string>
      <string id="CommandLineFlagSecurityWarningsEnabled_Explain">Setting the policy to Enabled or leaving it unset means security warnings appear when potentially dangerous command-line flags are used to launch Chrome.

Setting the policy to Disabled prevents security warnings from appearing when Chrome is launched with potentially dangerous command-line flags.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.</string>
      <string id="ComponentUpdatesEnabled">Enable component updates in Brave</string>
      <string id="ComponentUpdatesEnabled_Explain">Enables component updates for all components in Brave when not set or set to enabled.

If set to disabled, updates to components are disabled. However, some components are exempt from this policy: updates to any component that does not contain executable code, or does not significantly alter the behavior of the browser, or is critical for its security will not be disabled.
Examples of such components include the certificate revocation lists and Safe Browsing data.
See https://developers.google.com/safe-browsing for more info on Safe Browsing.
Please note that setting this policy to disabled can potentially prevent the Brave developers from providing critical security fixes in a timely manner and is thus not recommended.</string>
      <string id="CrossOriginWebAssemblyModuleSharingEnabled">Specifies whether WebAssembly modules can be sent cross-origin</string>
      <string id="CrossOriginWebAssemblyModuleSharingEnabled_Explain">
Specifies whether WebAssembly modules can be sent to another window or worker cross-origin. Cross-origin WebAssembly module sharing will be deprecated as part of the efforts to deprecate document.domain, see https://github.com/mikewest/deprecating-document-domain. This policy allows to re-enable cross-origin WebAssembly module sharing to offer a longer transition period in the deprecation process.

When set to True, sites can send WebAssembly modules also cross-origin without restrictions.

When set to False or not set, sites can only send WebAssembly modules to windows and workers in the same origin.</string>
      <string id="DNSInterceptionChecksEnabled">DNS interception checks enabled</string>
      <string id="DNSInterceptionChecksEnabled_Explain">This policy configures a local switch that can be used to disable DNS interception checks. The checks attempt to discover whether the browser is behind a proxy that redirects unknown host names.

This detection may not be necessary in an enterprise environment where the network configuration is known, since it causes some amount of DNS and HTTP traffic on start-up and each DNS configuration change.

When this policy is not set, or is enabled, the DNS interception checks are performed. When explicitly disabled, they're not.</string>
      <string id="DefaultBrowserSettingEnabled">Set Brave as Default Browser</string>
      <string id="DefaultBrowserSettingEnabled_Explain">Setting the policy to True has Brave always check whether it's the default browser on startup and, if possible, automatically register itself. Setting the policy to False stops Brave from ever checking if it's the default and turns user controls off for this option.

Leaving the policy unset means Brave lets users control whether it's the default and, if not, whether user notifications should appear.

Note: For Microsoft®Windows® administrators, turning this setting on only works for machines running Windows 7. For later versions, you must deploy a "default application associations" file that makes Brave the handler for the https and http protocols (and, optionally, the ftp protocol and other file formats). See Chrome Help ( https://support.google.com/chrome?p=make_chrome_default_win ).</string>
      <string id="DefaultDownloadDirectory">Set default download directory</string>
      <string id="DefaultDownloadDirectory_Explain">Setting the policy changes the default directory that Chrome downloads files to, but users can change the directory.

Leaving the policy unset means Chrome uses its platform-specific default directory.

Note: See a list of variables you can use ( https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables ).

Example value: /home/${user_name}/Downloads</string>
      <string id="DefaultSearchProviderContextMenuAccessAllowed">Allow default search provider context menu search access</string>
      <string id="DefaultSearchProviderContextMenuAccessAllowed_Explain">Enables the use of a default search provider on the context menu.

If you set this policy to disabled the search context menu item that relies on your default search provider will not be available.

If this policy is set to enabled or not set, the context menu item for your default search provider will be available.

The policy value is only appled when the DefaultSearchProviderEnabled policy is enabled, and is not applicable otherwise.</string>
      <string id="DesktopSharingHubEnabled">Enable desktop sharing in the omnibox and 3-dot menu</string>
      <string id="DesktopSharingHubEnabled_Explain">Setting the policy to True or leaving it unset lets users share or save the current webpage using actions provided by the desktop sharing hub. The sharing hub is accessed through either an omnibox icon or the 3-dot menu.

Setting the policy to False removes the sharing icon from the omnibox and the entry from the 3-dot menu.</string>
      <string id="DeveloperToolsAvailability">Control where Developer Tools can be used</string>
      <string id="DeveloperToolsAvailability_Explain">Setting the policy to 0 (the default) means you can access the developer tools and the JavaScript console, but not in the context of extensions installed by enterprise policy. Setting the policy to 1 means you can access the developer tools and the JavaScript console in all contexts, including that of extensions installed by enterprise policy. Setting the policy to 2 means you can't acess developer tools, and you can't inspect website elements.

This setting also turns off keyboard shortcuts and menu or context menu entries to open developer tools or the JavaScript console.</string>
      <string id="DeveloperToolsAvailability_DeveloperToolsDisallowedForForceInstalledExtensions">Disallow usage of the Developer Tools on extensions installed by enterprise policy, allow usage of the Developer Tools in other contexts</string>
      <string id="DeveloperToolsAvailability_DeveloperToolsAllowed">Allow usage of the Developer Tools</string>
      <string id="DeveloperToolsAvailability_DeveloperToolsDisallowed">Disallow usage of the Developer Tools</string>
      <string id="Disable3DAPIs">Disable support for 3D graphics APIs</string>
      <string id="Disable3DAPIs_Explain">Setting the policy to True (or setting HardwareAccelerationModeEnabled to False) prevents webpages from accessing the WebGL API, and plugins can't use the Pepper 3D API.

Setting the policy to False or leaving it unset lets webpages use the WebGL API and plugins use the Pepper 3D API, but the browser's default settings might still require command line arguments to use these APIs.</string>
      <string id="DisableSafeBrowsingProceedAnyway">Disable proceeding from the Safe Browsing warning page</string>
      <string id="DisableSafeBrowsingProceedAnyway_Explain">Setting the policy to Enabled prevents users from proceeding past the warning page the Safe Browsing service shows to the malicious site. This policy only prevents users from proceeding on Safe Browsing warnings such as malware and phishing, not for SSL certificate-related issues such as invalid or expired certificates.

Setting the policy to Disabled or leaving it unset means users can choose to proceed to the flagged site after the warning appears.

See more about Safe Browsing ( https://developers.google.com/safe-browsing ).</string>
      <string id="DisableScreenshots">Disable taking screenshots</string>
      <string id="DisableScreenshots_Explain">Setting the policy to True disallows screenshots taken with keyboard shortcuts or extension APIs. Setting the policy to False allows screenshots.</string>
      <string id="DiskCacheDir">Set disk cache directory</string>
      <string id="DiskCacheDir_Explain">Setting the policy has Brave use the directory you provide for storing cached files on the disk—whether or not users specify the --disk-cache-dir flag.

If not set, Brave uses the default cache directory, but users can change that setting with the --disk-cache-dir command line flag.

Brave manages the contents of a volume's root directory. So to avoid data loss or other errors, do not set this policy to the root directory or any directory used for other purposes. See the variables you can use ( https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables ).

Example value: ${user_home}/Chrome_cache</string>
      <string id="DiskCacheSize">Set disk cache size in bytes</string>
      <string id="DiskCacheSize_Explain">Setting the policy to None has Brave use the default cache size for storing cached files on the disk. Users can't change it.

If you set the policy, Brave uses the cache size you provide—whether or not users specify the --disk-cache-size flag. (Values below a few megabytes are rounded up.)

If not set, Brave uses the default size. Users can change that setting using the --disk-cache-size flag.

Note: The value specified in this policy is used as a hint to various cache subsystems in the browser. Therefore the actual total disk consumption of all caches will be higher but within the same order of magnitude as the value specified.</string>
      <string id="DisplayCapturePermissionsPolicyEnabled">Specifies whether the display-capture permissions-policy is checked or skipped.</string>
      <string id="DisplayCapturePermissionsPolicyEnabled_Explain">
The display-capture permissions-policy gates access to getDisplayMedia(), as per this spec: https://www.w3.org/TR/screen-capture/#feature-policy-integration. However, if this policy is Disabled, this requirement is not enforced, and getDisplayMedia() is allowed from contexts that would otherwise be forbidden. This Enterprise policy is temporary; it's intended to be removed after Brave version 100. It is intended to unblock Enterprise users whose application is non-spec compliant, but needs time to be fixed.

When enabled or not set, sites can only call getDisplayMedia() from contexts which are allowlisted by the display-capture permissions-policy.

When disabled, sites can call getDisplayMedia() even from contexts which are not allowlisted by the display-capture permissions policy. Note that other restrictions may still apply.</string>
      <string id="DnsOverHttpsMode">Controls the mode of DNS-over-HTTPS</string>
      <string id="DnsOverHttpsMode_Explain">Controls the mode of the DNS-over-HTTPS resolver. Please note that this policy will only set the default mode for each query. The mode may be overridden for special types of queries such as requests to resolve a DNS-over-HTTPS server hostname.

The "off" mode will disable DNS-over-HTTPS.

The "automatic" mode will send DNS-over-HTTPS queries first if a DNS-over-HTTPS server is available and may fallback to sending insecure queries on error.

The "secure" mode will only send DNS-over-HTTPS queries and will fail to resolve on error.

On Android Pie and above, if DNS-over-TLS is active, Brave will not send insecure DNS requests.

If this policy is unset the browser may send DNS-over-HTTPS requests to a resolver associated with the user's configured system resolver.

Example value: off</string>
      <string id="DnsOverHttpsMode_off">Disable DNS-over-HTTPS</string>
      <string id="DnsOverHttpsMode_automatic">Enable DNS-over-HTTPS with insecure fallback</string>
      <string id="DnsOverHttpsMode_secure">Enable DNS-over-HTTPS without insecure fallback</string>
      <string id="DnsOverHttpsTemplates">Specify URI template of desired DNS-over-HTTPS resolver</string>
      <string id="DnsOverHttpsTemplates_Explain">The URI template of the desired DNS-over-HTTPS resolver. To specify multiple DNS-over-HTTPS resolvers, separate the corresponding URI templates with spaces.

If the DnsOverHttpsMode is set to "secure" then this policy must be set and not empty.

If the DnsOverHttpsMode is set to "automatic" and this policy is set then the URI templates specified will be used; if this policy is unset then hardcoded mappings will be used to attempt to upgrade the user's current DNS resolver to a DoH resolver operated by the same provider.

If the URI template contains a dns variable, requests to the resolver will use GET; otherwise requests will use POST.

Incorrectly formatted templates will be ignored.

Example value: https://dns.example.net/dns-query{?dns}</string>
      <string id="DownloadDirectory">Set download directory</string>
      <string id="DownloadDirectory_Explain">Setting the policy sets up the directory Chrome uses for downloading files. It uses the provided directory, whether or not users specify one or turned on the flag to be prompted for download location every time.

Leaving the policy unset means Chrome uses the default download directory, and users can change it.

Note: See a list of variables you can use ( https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables ).

Example value: /home/${user_name}/Downloads</string>
      <string id="DownloadRestrictions">Allow download restrictions</string>
      <string id="DownloadRestrictions_Explain">Setting the policy means users can't bypass download security decisions.

There are many types of download warnings within Chrome, which roughly break down into these categories (learn more about Safe Browsing verdicts https://support.google.com/chrome/?p=ib_download_blocked):

* Malicious, as flagged by the Safe Browsing server
* Uncommon or unwanted, as flagged by the Safe Browsing server
* A dangerous file type (e.g. all SWF downloads and many EXE downloads)

Setting the policy blocks different subsets of these, depending on it's value:

0: No special restrictions. Default.

1: Blocks malicious files flagged by the Safe Browsing server AND Blocks all dangerous file types. Only recommended for OUs/browsers/users that have a high tolerance for False Positives.

2: Blocks malicious files flagged by the Safe Browsing server AND Blocks uncommon or unwanted files flagged by the Safe Browsing server AND Blocks all dangerous file types. Only recommended for OUs/browsers/users that have a high tolerance for False Positives.

3: Blocks all downloads. Not recommended, except for special use cases.

4: Blocks malicious files flagged by the Safe Browsing server, does not block dangerous file types. Recommended.

Note: These restrictions apply to downloads triggered from webpage content, as well as the Download link... menu option. They don't apply to the download of the currently displayed page or to saving as PDF from the printing options. Read more about Safe Browsing ( https://developers.google.com/safe-browsing ).</string>
      <string id="DownloadRestrictions_DefaultDownloadSecurity">No special restrictions. Default.</string>
      <string id="DownloadRestrictions_BlockDangerousDownloads">Block malicious downloads and dangerous file types.</string>
      <string id="DownloadRestrictions_BlockPotentiallyDangerousDownloads">Block malicious downloads, uncommon or unwanted downloads and dangerous file types.</string>
      <string id="DownloadRestrictions_BlockAllDownloads">Block all downloads.</string>
      <string id="DownloadRestrictions_BlockMaliciousDownloads">Block malicious downloads. Recommended.</string>
      <string id="EditBookmarksEnabled">Enable or disable bookmark editing</string>
      <string id="EditBookmarksEnabled_Explain">Setting the policy to True or leaving it unset lets users add, remove, or modify bookmarks.

Setting the policy to False means users can't add, remove, or modify bookmarks. They can still use existing bookmarks.</string>
      <string id="EnableExperimentalPolicies">Enables experimental policies</string>
      <string id="EnableExperimentalPolicies_Explain">Allows Brave to load experimental policies.

WARNING: Experimental policies are unsupported and subject to change or be removed without notice in future version of the browser!

An experimental policy may not be finished or still have known or unknown defects. It may be changed or even removed without any notification. By enabling experimental policies, you could lose browser data or compromise your security or privacy.

If a policy is not in the list and it's not officially released, its value will be ignored on Beta and Stable channel.

If a policy is in the list and it's not officially released, its value will be applied.

This policy has no effect on already released policies.

Example value:

ExtensionInstallAllowlist
ExtensionInstallBlocklist</string>
      <string id="EnableExperimentalPoliciesDesc">Enables experimental policies</string>
      <string id="EnableOnlineRevocationChecks">Enable online OCSP/CRL checks</string>
      <string id="EnableOnlineRevocationChecks_Explain">Setting the policy to True means online OCSP/CRL checks are performed.

Setting the policy to False or leaving it unset means Brave won't perform online revocation checks in Brave 19 and later.

Note: OCSP/CRL checks provide no effective security benefit.</string>
      <string id="EnterpriseHardwarePlatformAPIEnabled">Enables managed extensions to use the Enterprise Hardware Platform API</string>
      <string id="EnterpriseHardwarePlatformAPIEnabled_Explain">Setting the policy to True lets extensions installed by enterprise policy use the Enterprise Hardware Platform API.

Setting the policy to False or leaving it unset prevents extensions from using this API.

Note: This policy also applies to component extensions, such as the Hangout Services extension.</string>
      <string id="ExplicitlyAllowedNetworkPorts">Explicitly allowed network ports</string>
      <string id="ExplicitlyAllowedNetworkPorts_Explain">There is a list of restricted ports built into Brave. Connections to these ports will fail. This setting permits bypassing that list. The value is a comma-separated list of zero or more ports that outgoing connections will be permitted on.

Ports are restricted to prevent Brave being used as a vector to exploit various network vulnerabilities. Setting this policy may expose your network to attacks. This policy is intended as a temporary workaround for errors with code "ERR_UNSAFE_PORT" while migrating a service running on a blocked port to a standard port (ie. port 80 or 443).

Malicious websites can easily detect that this policy is set, and for what ports, and use that information to target attacks.

Each port here is labelled with a date that it can be unblocked until. After that date the port will be restricted regardless of this setting.

Leaving the value empty or unset means that all restricted ports will be blocked. If there is a mixture of valid and invalid values, the valid ones will be applied.

This policy overrides the "--explicitly-allowed-ports" command-line option.

Example value:

10080</string>
      <string id="ExplicitlyAllowedNetworkPortsDesc">Explicitly allowed network ports</string>
      <string id="ExternalProtocolDialogShowAlwaysOpenCheckbox">Show an "Always open" checkbox in external protocol dialog.</string>
      <string id="ExternalProtocolDialogShowAlwaysOpenCheckbox_Explain">This policy controls whether or not the "Always open" checkbox is shown on external protocol launch confirmation prompts.

     If this policy is set to True or not set, when an external protocol confirmation is shown, the user can select "Always allow" to skip all future confirmation prompts for the protocol on this site.

     If this policy is set to False, the "Always allow" checkbox is not displayed and the user will be prompted each time an external protocol is invoked.</string>
      <string id="FetchKeepaliveDurationSecondsOnShutdown">Fetch keepalive duration on Shutdown</string>
      <string id="FetchKeepaliveDurationSecondsOnShutdown_Explain">Controls the duration (in seconds) allowed for keepalive requests on browser shutdown.

When specified, browser shutdown can be blocked up to the specified seconds,
to process keepalive (https://fetch.spec.whatwg.org/#request-keepalive-flag) requests.

The default value (0) means this feature is disabled.</string>
      <string id="ForceEphemeralProfiles">Ephemeral profile</string>
      <string id="ForceEphemeralProfiles_Explain">If set to enabled this policy forces the profile to be switched to ephemeral mode. If this policy is specified as an OS policy (e.g. GPO on Windows) it will apply to every profile on the system; if the policy is set as a Cloud policy it will apply only to a profile signed in with a managed account.

In this mode the profile data is persisted on disk only for the length of the user session. Features like browser history, extensions and their data, web data like cookies and web databases are not preserved after the browser is closed. However this does not prevent the user from downloading any data to disk manually, save pages or print them.

If the user has enabled sync all this data is preserved in their sync profile just like with regular profiles. Incognito mode is also available if not explicitly disabled by policy.

If the policy is set to disabled or left not set signing in leads to regular profiles.</string>
      <string id="ForceGoogleSafeSearch">Force Google SafeSearch</string>
      <string id="ForceGoogleSafeSearch_Explain">Setting the policy to Enabled means SafeSearch in Google Search is always active, and users can't change this setting.

Setting the policy to Disabled or leaving it unset means SafeSearch in Google Search is not enforced.</string>
      <string id="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</string>
      <string id="ForceYouTubeRestrict_Explain">Setting the policy enforces a minimum Restricted mode on YouTube and prevents users from picking a less restricted mode. If you set it to:

* Strict, Strict Restricted mode on YouTube is always active.

* Moderate, the user may only pick Moderate Restricted mode and Strict Restricted mode on YouTube, but can't turn off Restricted mode.

* Off or if no value is set, Restricted mode on YouTube isn't enforced by Chrome. External policies such as YouTube policies might still enforce Restricted mode.</string>
      <string id="ForceYouTubeRestrict_Off">Do not enforce Restricted Mode on YouTube</string>
      <string id="ForceYouTubeRestrict_Moderate">Enforce at least Moderate Restricted Mode on YouTube</string>
      <string id="ForceYouTubeRestrict_Strict">Enforce Strict Restricted Mode for YouTube</string>
      <string id="ForcedLanguages">Configure the content and order of preferred languages</string>
      <string id="ForcedLanguages_Explain">This policy allows admins to configure the order of the preferred languages in Brave's settings.

The order of the list will appear in the same order under the "Order languages based on your preference" section in chrome://settings/languages. Users won't be able to remove or reorder languages set by the policy, but will be able to add languages underneath those set by the policy. Users will also have full control over the browser's UI language and translation/spell check settings, unless enforced by other policies.

Leaving the policy unset lets users manipulate the entire list of preferred languages.

Example value:

en-US</string>
      <string id="ForcedLanguagesDesc">Configure the content and order of preferred languages</string>
      <string id="FullscreenAllowed">Allow fullscreen mode</string>
      <string id="FullscreenAllowed_Explain">Setting the policy to True or leaving it unset means that, with appropriate permissions, users, apps, and extensions can enter Fullscreen mode (in which only web content appears).

Setting the policy to False means users, apps, and extensions can't enter Fullscreen mode.</string>
      <string id="GloballyScopeHTTPAuthCacheEnabled">Enable globally scoped HTTP auth cache</string>
      <string id="GloballyScopeHTTPAuthCacheEnabled_Explain">This policy configures a single global per profile cache with HTTP server authentication credentials.

If this policy is unset or disabled, the browser will use the default behavior of cross-site auth, which as of version 80, will be to scope HTTP server authentication credentials by top-level site, so if two sites use resources from the same authenticating domain, credentials will need to be provided independently in the context of both sites. Cached proxy credentials will be reused across sites.

If the policy is enabled, HTTP auth credentials entered in the context of one site will automatically be used in the context of another.

Enabling this policy leaves sites open to some types of cross-site attacks, and allows users to be tracked across sites even without cookies by adding entries to the HTTP auth cache using credentials embedded in URLs.

This policy is intended to give enterprises depending on the legacy behavior a chance to update their login procedures, and will be removed in the future.</string>
      <string id="HSTSPolicyBypassList">List of names that will bypass the HSTS policy check</string>
      <string id="HSTSPolicyBypassList_Explain">Setting the policy specifies a list of hostnames that bypass preloaded HSTS upgrades from http to https.

Only single-label hostnames are allowed in this policy, and this policy only applies to "static" HSTS-preloaded entries (for instance, "app", "new", "search", "play"). This policy does not prevent HSTS upgrades for servers that have "dynamically" requested HSTS upgrades using a Strict-Transport-Security response header.

Supplied hostnames must be canonicalized: Any IDNs must be converted to their A-label format, and all ASCII letters must be lowercase. This policy only applies to the specific single-label hostnames specified, not to subdomains of those names.

Example value:

meet</string>
      <string id="HSTSPolicyBypassListDesc">List of names that will bypass the HSTS policy check</string>
      <string id="HardwareAccelerationModeEnabled">Use hardware acceleration when available</string>
      <string id="HardwareAccelerationModeEnabled_Explain">Setting the policy to Enabled or leaving it unset turns on hardware acceleration, if available.

Setting the policy to Disabled turns off hardware acceleration.</string>
      <string id="HeadlessMode">Control use of the Headless Mode</string>
      <string id="HeadlessMode_Explain">Setting this policy to Enabled or leaving the policy unset allows use of the headless mode. Setting this policy to Disabled denies use of the headless mode.</string>
      <string id="HeadlessMode_Enabled">Allow use of the Headless Mode</string>
      <string id="HeadlessMode_Disabled">Do not allow use of the Headless Mode</string>
      <string id="HideWebStoreIcon">Hide the web store from the New Tab Page and app launcher</string>
      <string id="HideWebStoreIcon_Explain">Hide the Chrome Web Store app and footer link from the New Tab Page and Brave OS app launcher.

When this policy is set to true, the icons are hidden.

When this policy is set to false or is not configured, the icons are visible.</string>
      <string id="HistoryClustersVisible">Show history clusters on the Chrome history page</string>
      <string id="HistoryClustersVisible_Explain">This policy controls the visibility of history clusters on the Chrome history page.

If the policy is set to Enabled, history clusters will be visible at chrome://history/journeys.

If the policy is set to Disabled, history clusters will not be visible at chrome://history/journeys.

If the policy is left unset, history clusters will be visible at chrome://history/journeys by default and users can change the visibility of history clusters.
</string>
      <string id="HttpsOnlyMode">Allow HTTPS-Only Mode to be enabled</string>
      <string id="HttpsOnlyMode_Explain">This policy controls whether users can enable HTTPS-Only Mode in Settings. HTTPS-Only Mode upgrades all navigations to HTTPS.
If this setting is not set or set to allowed, users will be allowed to enable HTTPS-Only Mode.
If this setting is set to disallowed, users will not be allowed to enable HTTPS-Only Mode.
Force enabling HTTPS-Only Mode is not currently supported.

Example value: disallowed</string>
      <string id="HttpsOnlyMode_allowed">Allow users to enable HTTPS-Only Mode</string>
      <string id="HttpsOnlyMode_disallowed">Do not allow users to enable HTTPS-Only Mode</string>
      <string id="HttpsOnlyMode_force_enabled">Force enable HTTPS-Only Mode (not supported yet)</string>
      <string id="ImportAutofillFormData">Import autofill form data from default browser on first run</string>
      <string id="ImportAutofillFormData_Explain">Setting the policy to Enabled imports autofill form data from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means no autofill form data is imported on first run.

Users can trigger an import dialog and the autofill form data checkbox will be checked or unchecked to match this policy's value.</string>
      <string id="ImportBookmarks">Import bookmarks from default browser on first run</string>
      <string id="ImportBookmarks_Explain">Setting the policy to Enabled imports bookmarks from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means no bookmarks are imported on first run.

Users can trigger an import dialog and the bookmarks checkbox will be checked or unchecked to match this policy's value.</string>
      <string id="ImportHistory">Import browsing history from default browser on first run</string>
      <string id="ImportHistory_Explain">Setting the policy to Enabled imports browsing history from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means no browsing history is imported on first run.

Users can trigger an import dialog and the browsing history checkbox will be checked or unchecked to match this policy's value.</string>
      <string id="ImportHomepage">Import of homepage from default browser on first run</string>
      <string id="ImportHomepage_Explain">Setting the policy to Enabled imports the homepage from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means the homepage isn't imported on first run.

Users can trigger an import dialog and the homepage checkbox will be checked or unchecked to match this policy's value.</string>
      <string id="ImportSavedPasswords">Import saved passwords from default browser on first run</string>
      <string id="ImportSavedPasswords_Explain">Setting the policy to Enabled imports saved passwords from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means no saved passwords are imported on first run.

Users can trigger an import dialog and the saved passwords checkbox will be checked or unchecked to match this policy's value.</string>
      <string id="ImportSearchEngine">Import search engines from default browser on first run</string>
      <string id="ImportSearchEngine_Explain">Setting the policy to Enabled imports the default search engine from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means the default search engine isn't imported on first run.

Users can trigger an import dialog and the default search engine checkbox will be checked or unchecked to match this policy's value.</string>
      <string id="IncognitoModeAvailability">Incognito mode availability</string>
      <string id="IncognitoModeAvailability_Explain">Specifies whether the user may open pages in Incognito mode in Brave.

If 'Enabled' is selected or the policy is left unset, pages may be opened in Incognito mode.

If 'Disabled' is selected, pages may not be opened in Incognito mode.

If 'Forced' is selected, pages may be opened ONLY in Incognito mode. Note that 'Forced' does not work for Android-on-Chrome

Note: On iOS, if the policy is changed during a session, it will only take effect on relaunch.</string>
      <string id="IncognitoModeAvailability_Enabled">Incognito mode available</string>
      <string id="IncognitoModeAvailability_Disabled">Incognito mode disabled</string>
      <string id="IncognitoModeAvailability_Forced">Incognito mode forced</string>
      <string id="InsecureFormsWarningsEnabled">Enable warnings for insecure forms</string>
      <string id="InsecureFormsWarningsEnabled_Explain">This policy controls the treatment for insecure forms (forms that submit over HTTP) embedded in secure (HTTPS) sites in the browser.
If the policy is enabled or unset, a full page warning will be shown when an insecure form is submitted. Additionally, a warning bubble will be shown next to the form fields when they are focused, and autofill will be disabled for those forms.
If the policy is disabled, warnings will not be shown for insecure forms, and autofill will work normally.</string>
      <string id="InsecurePrivateNetworkRequestsAllowed">Specifies whether to allow insecure websites to make requests to more-private network endpoints</string>
      <string id="InsecurePrivateNetworkRequestsAllowed_Explain">Controls whether insecure websites are allowed to make requests to more-private network endpoints.

This policy relates to the Private Network Access specification. See https://wicg.github.io/private-network-access/ for more details.

A network endpoint is more private than another if:
1) Its IP address is localhost and the other is not.
2) Its IP address is private and the other is public.
In the future, depending on spec evolution, this policy might apply to all cross-origin requests directed at private IPs or localhost.

A website is deemed secure if it meets the definition of a secure context in https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts. Otherwise, it will be treated as an insecure context.

When this policy is either not set or set to false, the default behavior for requests from insecure contexts to more-private network endpoints will depend on the user's personal configuration for the BlockInsecurePrivateNetworkRequests feature, which may be set by a field trial or on the command line.

When this policy is set to true, insecure websites are allowed to make requests to any network endpoint, subject to other cross-origin checks.</string>
      <string id="InsecurePrivateNetworkRequestsAllowedForUrls">Allow the listed sites to make requests to more-private network endpoints from insecure contexts.</string>
      <string id="InsecurePrivateNetworkRequestsAllowedForUrls_Explain">List of URL patterns. Private network requests initiated from insecure websites served by matching origins are allowed.

If unset, this policy behaves as if set to the empty list.

For origins not covered by the patterns specified here, the global default value will be used either from the InsecurePrivateNetworkRequestsAllowed policy, if it is set, or the user's personal configuration otherwise.

Note that this policy only affects insecure origins, so secure origins (e.g. https://example.com) included in this list will be ignored.

For detailed information on valid URL patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

Example value:

http://www.example.com:8080
[*.]example.edu</string>
      <string id="InsecurePrivateNetworkRequestsAllowedForUrlsDesc">Allow the listed sites to make requests to more-private network endpoints from insecure contexts.</string>
      <string id="IntensiveWakeUpThrottlingEnabled">Control the IntensiveWakeUpThrottling feature.</string>
      <string id="IntensiveWakeUpThrottlingEnabled_Explain">When enabled the IntensiveWakeUpThrottling feature causes Javascript timers in background tabs to be aggressively throttled and coalesced, running no more than once per minute after a page has been backgrounded for 5 minutes or more.

This is a web standards compliant feature, but it may break functionality
on some websites by causing certain actions to be delayed by up to a
minute. However, it results in significant CPU and battery savings when
enabled. See https://bit.ly/30b1XR4 for more details.

If this policy is set to enabled then the feature will be force enabled, and
users will not be able to override this.

If this policy is set to disabled then the feature will be force disabled, and
users will not be able to override this.

If this policy is left unset then the feature will be controlled by its
own internal logic, which can be manually configured by users.

Note that the policy is applied per renderer process, with the most recent
value of the policy setting in force when a renderer process starts. A full
restart is required to ensure that all loaded tabs receive a consistent
policy setting. It is harmless for processes to be running with different
values of this policy.
</string>
      <string id="IntranetRedirectBehavior">Intranet Redirection Behavior</string>
      <string id="IntranetRedirectBehavior_Explain">This policy configures behavior for intranet redirection via DNS interception checks. The checks attempt to discover whether the browser is behind a proxy that redirects unknown host names.

If this policy is not set, the browser will use the default behavior of DNS interception checks and intranet redirect suggestions. In M88, they are enabled by default but will be disabled by default in the future release.

DNSInterceptionChecksEnabled is a related policy that may also disable DNS interception checks; this policy is a more flexible version which may separately control intranet redirection infobars and may be expanded in the future.
If either DNSInterceptionChecksEnabled or this policy requests to disable interception checks, the checks will be disabled.</string>
      <string id="IntranetRedirectBehavior_Default">Use default browser behavior.</string>
      <string id="IntranetRedirectBehavior_DisableInterceptionChecksDisableInfobar">Disable DNS interception checks and did-you-mean "http://intranetsite/" infobars.</string>
      <string id="IntranetRedirectBehavior_DisableInterceptionChecksEnableInfobar">Disable DNS interception checks; allow did-you-mean "http://intranetsite/" infobars.</string>
      <string id="IntranetRedirectBehavior_EnableInterceptionChecksEnableInfobar">Allow DNS interception checks and did-you-mean "http://intranetsite/" infobars.</string>
      <string id="IsolateOrigins">Enable Site Isolation for specified origins</string>
      <string id="IsolateOrigins_Explain">Setting the policy means each of the named origins in a comma-separated list runs in a dedicated process. Each named origin's process will only be allowed to contain documents from that origin and its subdomains. For example, specifying https://a1.example.com/ allows https://a2.a1.example.com/ in the same process, but not https://example.com or https://b.example.com.

Since Brave 77, you can also specify a range of origins to isolate using a wildcard. For example, specifying https://[*.]corp.example.com will give every origin underneath https://corp.example.com its own dedicated process, including https://corp.example.com itself, https://a1.corp.example.com, and https://a2.a1.corp.example.com.

Note that all sites (i.e., scheme plus eTLD+1, such as https://example.com) are already isolated by default on Desktop platforms, as noted in the SitePerProcess policy. This IsolateOrigins policy is useful to isolate specific origins at a finer granularity (e.g., https://a.example.com).

Also note that origins isolated by this policy will be unable to script other origins in the same site, which is otherwise possible if two same-site documents modify their document.domain values to match. Administrators should confirm this uncommon behavior is not used on an origin before isolating it.

Setting the policy to off or leaving it unset lets users change this setting.

Note: For Android, use the IsolateOriginsAndroid policy instead.

Example value: https://a.example.com/,https://othersite.org/,https://[*.]corp.example.com</string>
      <string id="LensRegionSearchEnabled">Allow Google Lens region search menu item to be shown in context menu if supported.</string>
      <string id="LensRegionSearchEnabled_Explain">Leaving the policy unset or setting it to Enabled allows users to view and use the Google Lens region search menu item in the context menu. Setting the policy to Disabled means users will not see the Google Lens region search menu item in the context menu when Google Lens region search is supported.</string>
      <string id="LockIconInAddressBarEnabled">Enable lock icon in the omnibox for secure connections</string>
      <string id="LockIconInAddressBarEnabled_Explain">This policy controls the treatment for lock icon in the omnibox.
From Chrome M93, there is a new omnibox icon for secure connections.
If the policy is Enabled, Chrome will use the existing lock icon for secure connections.
If the policy is Disabled or not set, Chrome will use the default icon for secure connections.</string>
      <string id="LookalikeWarningAllowlistDomains">Suppress lookalike domain warnings on domains</string>
      <string id="LookalikeWarningAllowlistDomains_Explain">This policy prevents the display of lookalike URL warnings on the sites listed. These warnings are typically shown on sites that Brave believes might be trying to spoof another site the user is familiar with.

If the policy is enabled and set to one or more domains, no lookalike warnings pages will be shown when the user visits pages on that domain.

If the policy is not set, or set to an empty list, warnings may appear on any site the user visits.

A hostname can be allowed with a complete host match, or any domain match. For example, a URL like "https://foo.example.com/bar" may have warnings suppressed if this list includes either "foo.example.com" or "example.com".

Example value:

foo.example.com
example.org</string>
      <string id="LookalikeWarningAllowlistDomainsDesc">Suppress lookalike domain warnings on domains</string>
      <string id="ManagedAccountsSigninRestriction">Add restrictions on managed accounts</string>
      <string id="ManagedAccountsSigninRestriction_Explain">
  This policy requires SigninInterceptionEnabled to be set to True to take effect.

  If this policy is set to 'primary_account' at the machine level, all managed accounts will be forced to be primary.
  If this policy is set to 'primary_account' on an account, that account will always be a primary account, but may have secondary accounts in its profile.

  If this policy is set to 'primary_account_strict' at the machine level, all managed accounts will be forced to be primary.
  If this policy is set to 'primary_account_strict' on an account, that account will always be a primary account and will not have any secondary accounts in its profile.

  If this policy is set to 'none' or not set, managed accounts have no restrictions. This may result in a managed account being a secondary account, which disables its ability to receive policies set on the account by the admin.


Example value: primary_account</string>
      <string id="ManagedAccountsSigninRestriction_PrimaryAccount">A Managed account must be a primary account</string>
      <string id="ManagedAccountsSigninRestriction_PrimaryAccountStrict">A Managed account must be a primary account and have no secondary accounts</string>
      <string id="ManagedAccountsSigninRestriction_None">No restrictions on managed accounts</string>
      <string id="ManagedBookmarks">Managed Bookmarks</string>
      <string id="ManagedBookmarks_Explain">Setting the policy sets up a list of bookmarks where each one is a dictionary with the keys "name" and "url". These keys hold the bookmark's name and target. Admins can set up a subfolder by defining a bookmark without a "url" key, but with an additional "children" key. This key also has a list of bookmarks, some of which can also be folders. Chrome amends incomplete URLs as if they were submitted through the address bar. For example, "google.com" becomes "https://google.com/".

Users can't change the folders the bookmarks are placed in (though they can hide it from the bookmark bar). The default folder name for managed bookmarks is "Managed bookmarks" but it can be changed by adding a new sub-dictionary to the policy with a single key named "toplevel_name" with the desired folder name as its value. Managed bookmarks are not synced to the user account and extensions can't modify them.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ManagedBookmarks for more information about schema and formatting.


Example value:

[
  {
    "toplevel_name": "My managed bookmarks folder"
  },
  {
    "name": "Google",
    "url": "google.com"
  },
  {
    "name": "Youtube",
    "url": "youtube.com"
  },
  {
    "name": "Chrome links",
    "children": [
      {
        "name": "Chromium",
        "url": "chromium.org"
      },
      {
        "name": "Chromium Developers",
        "url": "dev.chromium.org"
      }
    ]
  }
]</string>
      <string id="ManagedConfigurationPerOrigin">Sets managed configuration values to websites to specific origins</string>
      <string id="ManagedConfigurationPerOrigin_Explain">Setting the policy defines the return value of Managed Configuration API for given origin.

 Managed configuration API is a key-value configuration that can be accessed via navigator.managed.getManagedConfiguration() javascript call. This API is only available to origins which correspond to force-installed web applications via WebAppInstallForceList.

See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ManagedConfigurationPerOrigin for more information about schema and formatting.


Example value:

[
  {
    "origin": "https://www.google.com",
    "managed_configuration_url": "https://gstatic.google.com/configuration.json",
    "managed_configuration_hash": "asd891jedasd12ue9h"
  },
  {
    "origin": "https://www.example.com",
    "managed_configuration_url": "https://gstatic.google.com/configuration2.json",
    "managed_configuration_hash": "djio12easd89u12aws"
  }
]</string>
      <string id="MaxConnectionsPerProxy">Maximal number of concurrent connections to the proxy server</string>
      <string id="MaxConnectionsPerProxy_Explain">Setting the policy specifies the maximal number of simultaneous connections to the proxy server. Some proxy servers can't handle a high number of concurrent connections per client, which is solved by setting this policy to a lower value. The value should be lower than 100 and higher than 6. Some web apps are known to consume many connections with hanging GETs, so setting a value below 32 may lead to browser networking hangs if there are too many web apps with hanging connections open. Lower below the default at your own risk.

Leaving the policy unset means a default of 32 is used.</string>
      <string id="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation</string>
      <string id="MaxInvalidationFetchDelay_Explain">Setting the policy specifies the maximum delay in milliseconds between receiving a policy invalidation and fetching the new policy from the device management service. Valid values range from 1,000 (1 second) to 300,000 (5 minutes). Values outside this range will be clamped to the respective boundary.

Leaving the policy unset means Brave uses the default value of 10 seconds.</string>
      <string id="MediaRecommendationsEnabled">Enable Media Recommendations</string>
      <string id="MediaRecommendationsEnabled_Explain">By default the browser will show media recommendations that are personalized to the user. Setting this policy to Disabled will result in these recommendations being hidden from the user. Setting this policy to Enabled or leaving it unset will result in the media recommendations being shown to the user.</string>
      <string id="MediaRouterCastAllowAllIPs">Allow Google Cast to connect to Cast devices on all IP addresses.</string>
      <string id="MediaRouterCastAllowAllIPs_Explain">Unless EnableMediaRouter is set to Disabled, setting MediaRouterCastAllowAllIPs to Enabled connects Google Cast to Cast devices on all IP addresses, not just RFC1918/RFC4193 private addresses.

Setting the policy to Disabled connects Google Cast to Cast devices only on RFC1918/RFC4193.

Leaving the policy unset connects Google Cast to Cast devices only on RFC1918/RFC4193, unless the CastAllowAllIPs feature is turned on.</string>
      <string id="MetricsReportingEnabled">Enable reporting of usage and crash-related data</string>
      <string id="MetricsReportingEnabled_Explain">When this policy is enabled, anonymous reporting of usage and crash-related data about Chrome to Google is enabled by default. Users will still be able to change this setting in the Chrome settings.

When this policy is disabled, anonymous reporting is disabled and no usage or crash data is sent to Google. Users won't be able to change this setting.

When this policy isn't set, users can choose the anonymous reporting behavior at installation or first run, and can later change the setting in the Chrome settings.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain or Windows 10 Pro or Enterprise instances that are enrolled for device management, and macOS instances that are managed via MDM or joined to a domain via MCX.

(For Chrome OS, see DeviceMetricsReportingEnabled.)</string>
      <string id="NTPCardsVisible">Show cards on the New Tab Page</string>
      <string id="NTPCardsVisible_Explain">This policy controls the visibility of cards on the New Tab Page. Cards surface entry points to launch common user journeys based on the user's browsing behavior.

If the policy is set to Enabled, the New Tab Page will show cards if content is available.

If the policy is set to Disabled, the New Tab Page won't show cards.

If the policy is not set, the user can control the card visibility. The default is visible.
</string>
      <string id="NTPCustomBackgroundEnabled">Allow users to customize the background on the New Tab page</string>
      <string id="NTPCustomBackgroundEnabled_Explain">If the policy is set to false, the New Tab page won't allow users to customize the background. Any existing custom background will be permanently removed even if the policy is set to true later.

If the policy is set to true or unset, users can customize the background on the New Tab page.</string>
      <string id="NetworkPredictionOptions">Enable network prediction</string>
      <string id="NetworkPredictionOptions_Explain">This policy controls network prediction in Brave. It controls DNS prefetching, TCP, and SSL preconnection and prerendering of webpages.

If you set the policy, users can't change it. Leaving it unset turns on network prediction, but the user can change it.</string>
      <string id="NetworkPredictionOptions_NetworkPredictionAlways">Predict network actions on any network connection</string>
      <string id="NetworkPredictionOptions_NetworkPredictionWifiOnly">Predict network actions on any network that is not cellular.
(Deprecated in 50, removed in 52. After 52, if value 1 is set, it will be treated as 0 - predict network actions on any network connection.)</string>
      <string id="NetworkPredictionOptions_NetworkPredictionNever">Do not predict network actions on any network connection</string>
      <string id="NetworkServiceSandboxEnabled">Enable the network service sandbox</string>
      <string id="NetworkServiceSandboxEnabled_Explain">This policy controls whether or not the network service process runs sandboxed.
If this policy is enabled, the network service process will run sandboxed.
If this policy is disabled, the network service process will run unsandboxed. This leaves users open to additional security risks related to running the network service unsandboxed.
If this policy is not set, the default configuration for the network sandbox will be used. This may vary depending on Brave release, currently running field trials, and platform.
This policy is intended to give enterprises flexibility to disable the network sandbox if they use third party software that interferes with the network service sandbox.</string>
      <string id="OverrideSecurityRestrictionsOnInsecureOrigin">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string>
      <string id="OverrideSecurityRestrictionsOnInsecureOrigin_Explain">Setting the policy specifies a list of origins (URLs) or hostname patterns (such as *.example.com) for which security restrictions on insecure origins won't apply. Organizations can specify origins for legacy applications that can't deploy TLS or set up a staging server for internal web development, so developers can test out features requiring secure contexts without having to deploy TLS on the staging server. This policy also prevents the origin from being labeled "Not Secure" in the address bar.

Setting a list of URLs in this policy amounts to setting the command-line flag --unsafely-treat-insecure-origin-as-secure to a comma-separated list of the same URLs. The policy overrides the command-line flag and UnsafelyTreatInsecureOriginAsSecure, if present.

For more information on secure contexts, see Secure Contexts ( https://www.w3.org/TR/secure-contexts ).

Example value:

http://testserver.example.com/
*.example.org</string>
      <string id="OverrideSecurityRestrictionsOnInsecureOriginDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string>
      <string id="PaymentMethodQueryEnabled">Allow websites to query for available payment methods.</string>
      <string id="PaymentMethodQueryEnabled_Explain">Allows you to set whether websites are allowed to check if the user has payment methods saved.

If this policy is set to disabled, websites that use PaymentRequest.canMakePayment or PaymentRequest.hasEnrolledInstrument API will be informed that no payment methods are available.

If the setting is enabled or not set then websites are allowed to check if the user has payment methods saved.</string>
      <string id="PolicyAtomicGroupsEnabled">Enables the concept of policy atomic groups</string>
      <string id="PolicyAtomicGroupsEnabled_Explain">Setting the policy to Enabled means policies coming from an atomic group that don't share the source with the highest priority from that group get ignored.

Setting the policy to Disabled means no policy is ignored because of its source. Policies are ignored only if there's a conflict, and the policy doesn't have the highest priority.

If this policy is set from a cloud source, it can't target a specific user.</string>
      <string id="PolicyDictionaryMultipleSourceMergeList">Allow merging dictionary policies from different sources</string>
      <string id="PolicyDictionaryMultipleSourceMergeList_Explain">Setting the policy allows merging of selected policies when they come from different sources, with the same scopes and level. This merging is in the first level keys of the dictionary from each source. The key coming from the highest priority source takes precedence.

If a policy is in the list and there's conflict between sources with:

* The same scopes and level: The values merge into a new policy dictionary.

* Different scopes or level: The policy with the highest priority applies.

If a policy isn't in the list and there's conflict between sources, scopes, or level, the policy with the highest priority applies.

Example value:

ExtensionSettings</string>
      <string id="PolicyDictionaryMultipleSourceMergeListDesc">Allow merging dictionary policies from different sources</string>
      <string id="PolicyListMultipleSourceMergeList">Allow merging list policies from different sources</string>
      <string id="PolicyListMultipleSourceMergeList_Explain">Setting the policy allows merging of selected policies when they come from different sources, with the same scopes and level.

If a policy is in the list and there's conflict between sources with:

* The same scopes and level: The values merge into a new policy list.

* Different scopes or level: The policy with the highest priority applies.

If a policy isn't in the list and there's conflict between sources, scopes, or level, the policy with the highest priority applies.

Example value:

ExtensionInstallAllowlist
ExtensionInstallBlocklist</string>
      <string id="PolicyListMultipleSourceMergeListDesc">Allow merging list policies from different sources</string>
      <string id="PolicyRefreshRate">Refresh rate for user policy</string>
      <string id="PolicyRefreshRate_Explain">Setting the policy specifies the period in milliseconds at which the device management service is queried for user policy information. Valid values range from 1,800,000 (30 minutes) to 86,400,000 (1 day). Values outside this range will be clamped to the respective boundary.

Leaving the policy unset uses the default value of 3 hours.

Note: Policy notifications force a refresh when the policy changes, making frequent refreshes unnecessary. So, if the platform supports these notifications, the refresh delay is 24 hours (ignoring defaults and the value of this policy).</string>
      <string id="ProfilePickerOnStartupAvailability">Profile picker availability on startup</string>
      <string id="ProfilePickerOnStartupAvailability_Explain">Specifies whether the profile picker is enabled, disabled or forced at the browser startup.

By default the profile picker is not shown if the browser starts in guest or incognito mode, a profile directory and/or urls are specified by command line, an app is explicitly requested to open, the browser was launched by a native notification, there is only one profile available or the policy ForceBrowserSignin is set to true.

If 'Enabled' (0) is selected or the policy is left unset, the profile picker will be shown at startup by default, but users will be able to enable/disable it.

If 'Disabled' (1) is selected, the profile picker will never be shown, and users will not be able to change the setting.

If 'Forced' (2) is selected, the profile picker cannot be suppressed by the user. The profile picker will be shown even if there is only one profile available.</string>
      <string id="ProfilePickerOnStartupAvailability_Enabled">Profile picker available at startup</string>
      <string id="ProfilePickerOnStartupAvailability_Disabled">Profile picker disabled at startup</string>
      <string id="ProfilePickerOnStartupAvailability_Forced">Profile picker forced at startup</string>
      <string id="PromotionalTabsEnabled">Enable showing full-tab promotional content</string>
      <string id="PromotionalTabsEnabled_Explain">Setting the policy to True or leaving it unset lets Brave show users product information as full-tab content.

Setting the policy to False prevents Brave from showing product information as full-tab content.

Setting the policy controls the presentation of the welcome pages that help users sign in to Brave, set Brave as users' default browser, or otherwise inform them of product features.</string>
      <string id="PromptForDownloadLocation">Ask where to save each file before downloading</string>
      <string id="PromptForDownloadLocation_Explain">Setting the policy to Enabled means users are asked where to save each file before downloading. Setting the policy to Disabled has downloads start immediately, and users aren't asked where to save the file.

Leaving the policy unset lets users change this setting.</string>
      <string id="ProxySettings">Proxy settings</string>
      <string id="ProxySettings_Explain">Setting the policy configures the proxy settings for Chrome and ARC-apps, which ignore all proxy-related options specified from the command line.

 Leaving the policy unset lets users choose their proxy settings.

 Setting the ProxySettings policy accepts the following fields:
   * ProxyMode, which lets you specify the proxy server Chrome uses and prevents users from changing proxy settings
   * ProxyPacUrl, a URL to a proxy .pac file
   * ProxyPacMandatory, which prevents the network stack from falling back to direct connections with invalid or unavailable PAC script
   * ProxyServer, a URL of the proxy server
   * ProxyBypassList, a list of hosts for which the proxy will be bypassed

 The ProxyServerMode field is deprecated in favor of the ProxyMode field.

  For ProxyMode, if you choose the value:
    * direct, a proxy is never used and all other fields are ignored.
    * system, the systems's proxy is used and all other fields are ignored.
    * auto_detect, all other fields are ignored.
    * fixed_servers, the ProxyServer and ProxyBypassList fields are used.
    * pac_script, the ProxyPacUrl, ProxyPacMandatory and ProxyBypassList fields are used.

Note: For more detailed examples, visit The Chromium Projects ( https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett ).
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ProxySettings for more information about schema and formatting.


Example value:

{
  "ProxyMode": "fixed_servers",
  "ProxyServer": "123.123.123.123:8080",
  "ProxyBypassList": "https://www.example1.com,https://www.example2.com,https://internalsite/"
}</string>
      <string id="QuicAllowed">Allow QUIC protocol</string>
      <string id="QuicAllowed_Explain">Setting the policy to Enabled or leaving it unset allows the use of QUIC protocol in Brave.

Setting the policy to Disabled disallows the use of QUIC protocol.</string>
      <string id="RelaunchNotification">Notify a user that a browser relaunch or device restart is recommended or required</string>
      <string id="RelaunchNotification_Explain">Notify users that Brave must be relaunched or Brave OS must be restarted to apply a pending update.

This policy setting enables notifications to inform the user that a browser relaunch or device restart is recommended or required. If not set, Brave indicates to the user that a relaunch is needed via subtle changes to its menu, while Brave OS indicates such via a notification in the system tray. If set to 'Recommended', a recurring warning will be shown to the user that a relaunch is recommended. The user can dismiss this warning to defer the relaunch. If set to 'Required', a recurring warning will be shown to the user indicating that a browser relaunch will be forced once the notification period passes. The default period is seven days for Brave and four days for Brave OS, and may be configured via the RelaunchNotificationPeriod policy setting.

The user's session is restored following the relaunch/restart.</string>
      <string id="RelaunchNotification_Recommended">Show a recurring prompt to the user indicating that a relaunch is recommended</string>
      <string id="RelaunchNotification_Required">Show a recurring prompt to the user indicating that a relaunch is required</string>
      <string id="RelaunchNotificationPeriod">Set the time period for update notifications</string>
      <string id="RelaunchNotificationPeriod_Explain">Allows you to set the time period, in milliseconds, over which users are notified that Brave must be relaunched or that a Brave OS device must be restarted to apply a pending update.

Over this time period, the user will be repeatedly informed of the need for an update. For Brave OS devices, a restart notification appears in the system tray according to the RelaunchHeadsUpPeriod policy. For Brave browsers, the app menu changes to indicate that a relaunch is needed once one third of the notification period passes. This notification changes color once two thirds of the notification period passes, and again once the full notification period has passed. The additional notifications enabled by the RelaunchNotification policy follow this same schedule.

If not set, the default period of 604800000 milliseconds (one week) is used.</string>
      <string id="RelaunchWindow">Set the time interval for relaunch</string>
      <string id="RelaunchWindow_Explain">Specify a target time window for the end of the relaunch notification period.

Users are notified of the need for a browser relaunch or device restart based on the RelaunchNotification and RelaunchNotificationPeriod policy settings. Browsers and devices are forcibly restarted at the end of the notification period when the RelaunchNotification policy is set to 'Required'. This RelaunchWindow policy can be used to defer the end of the notification period so that it falls within a specific time window.

If this policy is not set, the default target time window for Brave OS is between 2 AM and 4 AM. The default target time window for Brave is the whole day (i.e., the end of the notification period is never deferred).

Note: Though the policy can accept multiple items in entries, all but the first item are ignored.
Warning: Setting this policy may delay application of software updates.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=RelaunchWindow for more information about schema and formatting.


Example value:

{
  "entries": [
    {
      "start": {
        "hour": 2,
        "minute": 15
      },
      "duration_mins": 240
    }
  ]
}</string>
      <string id="RemoteDebuggingAllowed">Allow remote debugging</string>
      <string id="RemoteDebuggingAllowed_Explain">Controls whether users may use remote debugging.

If this policy is set to Enabled or not set, users may use remote debugging by specifying --remote-debugging-port and --remote-debugging-pipe command line switches.

If this policy is set to Disabled, users are not allowed to use remote debugging.</string>
      <string id="RendererCodeIntegrityEnabled">Enable Renderer Code Integrity</string>
      <string id="RendererCodeIntegrityEnabled_Explain">Setting the policy to Enabled or leaving it unset turns Renderer Code Integrity on.

Setting the policy to Disabled has a detrimental effect on Brave's security and stability as unknown and potentially hostile code can load inside Brave's renderer processes. Only turn off the policy if there are compatibility issues with third-party software that must run inside Brave's renderer processes.

Note: Read more about Process mitigation policies ( https://chromium.googlesource.com/chromium/src/+/HEAD/docs/design/sandbox.md#Process-mitigation-policies ).</string>
      <string id="RequireOnlineRevocationChecksForLocalAnchors">Require online OCSP/CRL checks for local trust anchors</string>
      <string id="RequireOnlineRevocationChecksForLocalAnchors_Explain">Setting the policy to True means Brave always performs revocation checking for successfully validated server certificates signed by locally installed CA certificates. If Brave can't get revocation status information, Brave treats these certificates as revoked (hard-fail).

Setting the policy to False or leaving it unset means Brave uses existing online revocation-checking settings.</string>
      <string id="RestrictSigninToPattern">Restrict which Google accounts are allowed to be set as browser primary accounts in Brave</string>
      <string id="RestrictSigninToPattern_Explain">Contains a regular expression which is used to determine which Google accounts can be set as browser primary accounts in Brave (i.e. the account that is chosen during the Sync opt-in flow).

An appropriate error is displayed if a user tries to set a browser primary account with a username that does not match this pattern.

If this policy is left not set or blank, then the user can set any Google account as a browser primary account in Brave.

Example value: .*@example\.com</string>
      <string id="RoamingProfileLocation">Set the roaming profile directory</string>
      <string id="RoamingProfileLocation_Explain">Configures the directory that Brave will use for storing the roaming copy of the profiles.

If you set this policy, Brave will use the provided directory to store the roaming copy of the profiles if the RoamingProfileSupportEnabled policy has been enabled. If the RoamingProfileSupportEnabled policy is disabled or left unset the value stored in this policy is not used.

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

On non-Windows platforms, this policy must be set for roaming profiles to work.

On Windows, if this policy is left unset, the default roaming profile path will be used.

Example value: ${roaming_app_data}\chrome-profile</string>
      <string id="RoamingProfileSupportEnabled">Enable the creation of roaming copies for Brave profile data</string>
      <string id="RoamingProfileSupportEnabled_Explain">If you enable this setting, the settings stored in Brave profiles like bookmarks, autofill data, passwords, etc. will also be written to a file stored in the Roaming user profile folder or a location specified by the Administrator through the RoamingProfileLocation policy. Enabling this policy disables cloud sync.

If this policy is disabled or left not set only the regular local profiles will be used.</string>
      <string id="SSLErrorOverrideAllowed">Allow proceeding from the SSL warning page</string>
      <string id="SSLErrorOverrideAllowed_Explain">Setting the policy to Enabled or leaving it unset lets users click through warning pages Brave shows when users navigate to sites that have SSL errors.

Setting the policy to Disabled prevent users from clicking through any warning pages.</string>
      <string id="SSLErrorOverrideAllowedForOrigins">Allow proceeding from the SSL warning page on specific origins</string>
      <string id="SSLErrorOverrideAllowedForOrigins_Explain">If SSLErrorOverrideAllowed is Disabled, setting the policy lets you set a list of origin patterns that specify the sites where a user can click through warning pages Brave shows when users navigate to sites that have SSL errors. Users will not be able to click through SSL warning pages on origins that are not on this list.

If SSLErrorOverrideAllowed is Enabled or unset, this policy does nothing.

Leaving the policy unset means SSLErrorOverrideAllowed applies for all sites.

For detailed information on valid input patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy. This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string>
      <string id="SSLErrorOverrideAllowedForOriginsDesc">Allow proceeding from the SSL warning page on specific origins</string>
      <string id="SSLVersionMin">Minimum SSL version enabled</string>
      <string id="SSLVersionMin_Explain">Setting the policy to a valid value means Brave won't use SSL/TLS versions less than the specified version. Unrecognized values are ignored.

If this policy is not set, then Brave will show an error for TLS 1.0 and TLS 1.1, but the user will be able to bypass it.

If this policy is set to "tls1.2", the user will not be able to bypass this error.

Support for setting this policy to "tls1" or "tls1.1" was removed in version 91. Suppressing the TLS 1.0/1.1 warning is no longer supported.

Example value: tls1.2</string>
      <string id="SSLVersionMin_TLSv1">TLS 1.0</string>
      <string id="SSLVersionMin_TLSv1_1">TLS 1.1</string>
      <string id="SSLVersionMin_TLSv1_2">TLS 1.2</string>
      <string id="SafeBrowsingForTrustedSourcesEnabled">Enable Safe Browsing for trusted sources</string>
      <string id="SafeBrowsingForTrustedSourcesEnabled_Explain">Setting the policy to Enabled or leaving it unset means downloaded files are sent to be analyzed by Safe Browsing, even when it's from a trusted source.

Setting the policy to Disabled means downloaded files won't be sent to be analyzed by Safe Browsing when it's from a trusted source.

These restrictions apply to downloads triggered from webpage content, as well as the Download link menu option. These restrictions don't apply to the save or download of the currently displayed page or to saving as PDF from the printing options.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.</string>
      <string id="SafeSitesFilterBehavior">Control SafeSites adult content filtering.</string>
      <string id="SafeSitesFilterBehavior_Explain">Setting the policy controls the SafeSites URL filter, which uses the Google Safe Search API to classify URLs as pornographic or not.

When this policy is set to:

* Do not filter sites for adult content, or not set, sites aren't filtered

* Filter top level sites for adult content, pornographic sites are filtered</string>
      <string id="SafeSitesFilterBehavior_SafeSitesFilterDisabled">Do not filter sites for adult content</string>
      <string id="SafeSitesFilterBehavior_SafeSitesFilterEnabled">Filter top level sites (but not embedded iframes) for adult content</string>
      <string id="SandboxExternalProtocolBlocked">Allow Chrome to block navigations toward external protocols in sandboxed iframes</string>
      <string id="SandboxExternalProtocolBlocked_Explain">Chrome will block navigations toward external protocols inside
sandboxed iframe. See https://chromestatus.com/features/5680742077038592.

When True, this lets Chrome blocks those navigations.

When False, this prevents Chrome from blocking those navigations.

This defaults to True: security feature enabled.

This can be used by administrators who need more time to update their internal website affected by this new restriction. This Enterprise policy is temporary; it's intended to be removed after Brave version 104.
</string>
      <string id="SavingBrowserHistoryDisabled">Disable saving browser history</string>
      <string id="SavingBrowserHistoryDisabled_Explain">Setting the policy to Enabled means browsing history is not saved, tab syncing is off and users can't change this setting.

Setting the policy to Disabled or leaving it unset saves browsing history.</string>
      <string id="ScrollToTextFragmentEnabled">Enable scrolling to text specified in URL fragments</string>
      <string id="ScrollToTextFragmentEnabled_Explain">This feature allows for hyperlinks and address bar URL navigations to target specific text within a web page, which will be scrolled to once the loading of the web page is complete.

If you enable or don't configure this policy, web page scrolling to specific text fragments via URL will be enabled.

If you disable this policy, web page scrolling to specific text fragments via URL will be disabled.</string>
      <string id="SearchSuggestEnabled">Enable search suggestions</string>
      <string id="SearchSuggestEnabled_Explain">Setting the policy to True turns on search suggestions in Brave's address bar. Setting the policy to False turns off these search suggestions.

If you set the policy, users can't change it. If not set, search suggestions are on at first, but users can turn them off any time.</string>
      <string id="SecurityKeyPermitAttestation">URLs/domains automatically permitted direct Security Key attestation</string>
      <string id="SecurityKeyPermitAttestation_Explain">Setting the policy specifies URLs and domains for which no prompt appears when attestation certificates from Security Keys are requested. A signal is also sent to the Security Key indicating that individual attestation may be used. Without this, when sites request attestation of Security Keys, users are prompted in Brave version 65 and later.

URLs will only match as U2F appIDs. Domains only match as webauthn RP IDs. So to cover both U2F and webauthn APIs, list the appID URL and domain for a given site.

Example value:

https://example.com</string>
      <string id="SecurityKeyPermitAttestationDesc">URLs/domains automatically permitted direct Security Key attestation</string>
      <string id="SharedArrayBufferUnrestrictedAccessAllowed">Specifies whether SharedArrayBuffers can be used in a non cross-origin-isolated context</string>
      <string id="SharedArrayBufferUnrestrictedAccessAllowed_Explain">
Specifies whether SharedArrayBuffers can be used in a non cross-origin-isolated context. Brave will require cross-origin isolation when using SharedArrayBuffers from Brave 91 onward (2021-05-25) for Web Compatibility reasons. Additional details can be found on: https://developer.chrome.com/blog/enabling-shared-array-buffer/.

When set to Enabled, sites can use SharedArrayBuffer with no restrictions.

When set to Disabled or not set, sites can only use SharedArrayBuffers when cross-origin isolated.</string>
      <string id="SharedClipboardEnabled">Enable the Shared Clipboard Feature</string>
      <string id="SharedClipboardEnabled_Explain">Enable the Shared Clipboard feature which allows users to send text between Chrome Desktops and an Android device when Sync is enabled and the user is Signed-in.

If this policy is set to true, the capability of sending text, cross device, for chrome user is enabled.

If this policy is set to false, the capability of sending text, cross device, for chrome user is disabled.

If you set this policy, users cannot change or override it.

If this policy is left unset, the shared clipboard feature is enabled by default.

It is up to the admins to set policies in all platforms they care about. It's recommended to set this policy to one value in all platforms.</string>
      <string id="ShowAppsShortcutInBookmarkBar">Show the apps shortcut in the bookmark bar</string>
      <string id="ShowAppsShortcutInBookmarkBar_Explain">Setting the policy to True displays the apps shortcut. Setting the policy to False means this shortcut never appears.

If you set the policy, users can't change it. If not set, users decide to show or hide the apps shortcut from the bookmark bar context menu.</string>
      <string id="ShowFullUrlsInAddressBar">Show Full URLs</string>
      <string id="ShowFullUrlsInAddressBar_Explain">This feature enables display of the full URL in the address bar.
If this policy is set to True, then the full URL will be shown in the address bar, including schemes and subdomains.
If this policy is set to False, then the default URL display will apply.
If this policy is left unset, then the default URL display will apply and the user will be able to toggle between default and full URL display with a context menu option.
</string>
      <string id="SignedHTTPExchangeEnabled">Enable Signed HTTP Exchange (SXG) support</string>
      <string id="SignedHTTPExchangeEnabled_Explain">Setting the policy to True or leaving it unset means Brave will accept web contents served as Signed HTTP Exchanges.

Setting the policy to False prevents Signed HTTP Exchanges from loading.</string>
      <string id="SigninInterceptionEnabled">Enable signin interception</string>
      <string id="SigninInterceptionEnabled_Explain">This settings enables or disables signin interception.

When this policy not set or is set to True, the signin interception dialog triggers when a Google account is added on the web, and the user may benefit from moving this account to another (new or existing) profile.

When this is set to False, the signin interception dialog does not trigger.</string>
      <string id="SitePerProcess">Require Site Isolation for every site</string>
      <string id="SitePerProcess_Explain">Since Brave 67, site isolation has been enabled by default on all Desktop platforms, causing every site to run in its own process. A site is a scheme plus eTLD+1 (e.g., https://example.com). Setting this policy to Enabled does not change that behavior; it only prevents users from opting out (for example, using Disable site isolation in chrome://flags). Since Brave 76, setting the policy to Disabled or leaving it unset doesn't turn off site isolation, but instead allows users to opt out.

IsolateOrigins might also be useful for isolating specific origins at a finer granularity than site (e.g., https://a.example.com).

On Brave OS version 76 and earlier, set the DeviceLoginScreenSitePerProcess device policy to the same value. (If the values don't match, a delay can occur when entering a user session.)

Note: For Android, use the SitePerProcessAndroid policy instead.</string>
      <string id="SpellCheckServiceEnabled">Enable or disable spell checking web service</string>
      <string id="SpellCheckServiceEnabled_Explain">Setting the policy to Enabled puts a Google web service in use to help resolve spelling errors. This policy only controls the use of the online service. Setting the policy to Disabled means this service is never used.

Leaving the policy unset lets users choose whether to use the spellcheck service.

The spell check can always use a downloaded dictionary locally unless the feature is disabled by SpellcheckEnabled in which case this policy will have no effect.</string>
      <string id="SpellcheckEnabled">Enable spellcheck</string>
      <string id="SpellcheckEnabled_Explain">Setting the policy to Enabled turns spellcheck on, and users can't turn it off. On Microsoft® Windows®, Brave OS and Linux®, spellcheck languages can be switched on or off individually, so users can still turn spellcheck off by switching off every spellcheck language. To avoid that, use the SpellcheckLanguage to force-enable specific spellcheck languages.

Setting the policy to Disabled turns off spellcheck from all sources, and users can't turn it on. The SpellCheckServiceEnabled, SpellcheckLanguage and SpellcheckLanguageBlocklist policies have no effect when this policy is set to False.

Leaving the policy unset lets users turn spellcheck on or off in the language settings.</string>
      <string id="SpellcheckLanguage">Force enable spellcheck languages</string>
      <string id="SpellcheckLanguage_Explain">Force-enables spellcheck languages. Unrecognized languages in the list will be ignored.

If you enable this policy, spellcheck will be enabled for the languages specified, in addition to the languages for which the user has enabled spellcheck.

If you do not set this policy, or disable it, there will be no change to the user's spellcheck preferences.

If the SpellcheckEnabled policy is set to false, this policy will have no effect.

If a language is included in both this policy and the SpellcheckLanguageBlocklist policy, this policy is prioritized and the spellcheck language is enabled.

The currently supported languages are: af, bg, ca, cs, da, de, el, en-AU, en-CA, en-GB, en-US, es, es-419, es-AR, es-ES, es-MX, es-US, et, fa, fo, fr, he, hi, hr, hu, id, it, ko, lt, lv, nb, nl, pl, pt-BR, pt-PT, ro, ru, sh, sk, sl, sq, sr, sv, ta, tg, tr, uk, vi.

Example value:

fr
es</string>
      <string id="SpellcheckLanguageDesc">Force enable spellcheck languages</string>
      <string id="SpellcheckLanguageBlocklist">Force disable spellcheck languages</string>
      <string id="SpellcheckLanguageBlocklist_Explain">Force-disables spellcheck languages. Unrecognized languages in that list will be ignored.

If you enable this policy, spellcheck will be disabled for the languages specified. The user can still enable or disable spellcheck for languages not in the list.

If you do not set this policy, or disable it, there will be no change to the user's spellcheck preferences.

If the SpellcheckEnabled policy is set to false, this policy will have no effect.

If a language is included in both this policy and the SpellcheckLanguage policy, the latter is prioritized and the spellcheck language will be enabled.

The currently supported languages are: af, bg, ca, cs, da, de, el, en-AU, en-CA, en-GB, en-US, es, es-419, es-AR, es-ES, es-MX, es-US, et, fa, fo, fr, he, hi, hr, hu, id, it, ko, lt, lv, nb, nl, pl, pt-BR, pt-PT, ro, ru, sh, sk, sl, sq, sr, sv, ta, tg, tr, uk, vi.

Example value:

fr
es</string>
      <string id="SpellcheckLanguageBlocklistDesc">Force disable spellcheck languages</string>
      <string id="SuppressDifferentOriginSubframeDialogs">Suppress JavaScript Dialogs triggered from different origin subframes</string>
      <string id="SuppressDifferentOriginSubframeDialogs_Explain">As described in https://www.chromestatus.com/feature/5148698084376576 , JavaScript modal dialogs, triggered by window.alert, window.confirm, and window.prompt, will be blocked in Brave if triggered from a subframe whose origin is different from the main frame origin.
This policy allows overriding that change.
If the policy is set to enabled or unset, JavaScript dialogs triggered from a different origin subframe will be blocked.
If the policy is set to disabled, JavaScript dialogs triggered from a different origin subframe will not be blocked.

This policy will be removed in Brave version 95.</string>
      <string id="SuppressUnsupportedOSWarning">Suppress the unsupported OS warning</string>
      <string id="SuppressUnsupportedOSWarning_Explain">Setting the policy to Enabled suppresses the warning that appears when Brave is running on an unsupported computer or operating system.

Setting the policy to Disabled or leaving it unset means the warnings appear on unsupported systems.</string>
      <string id="SyncDisabled">Disable synchronization of data with Google</string>
      <string id="SyncDisabled_Explain">Setting the policy to Enabled turns off data synchronization in Brave using Google-hosted synchronization services.
To fully turn off Chrome Sync services, we recommend that you turn off the service in the Google Admin console.

If the policy is set to Disabled or not set, users are allowed to choose whether to use Chrome Sync.

Note: Do not turn on this policy when RoamingProfileSupportEnabled is Enabled, because that feature shares the same client-side functionality. The Google-hosted synchronization is off completely in this case.</string>
      <string id="SyncTypesListDisabled">List of types that should be excluded from synchronization</string>
      <string id="SyncTypesListDisabled_Explain">If this policy is set all specified data types will be excluded from synchronization both for Chrome Sync as well as for roaming profile synchronization. This can be beneficial to reduce the size of the roaming profile or limit the type of data uploaded to the Chrome Sync Servers.

The current data types for this policy are: "bookmarks", "readingList", "preferences", "passwords", "autofill", "themes", "typedUrls", "extensions", "apps", "tabs", "wifiConfigurations". Those names are case sensitive!

Example value:

bookmarks</string>
      <string id="SyncTypesListDisabledDesc">List of types that should be excluded from synchronization</string>
      <string id="TargetBlankImpliesNoOpener">Do not set window.opener for links targeting _blank</string>
      <string id="TargetBlankImpliesNoOpener_Explain">Setting the policy to Disabled allows popups targeting _blank to access (via JavaScript) the page that requested to open the popup.

Setting the policy to Enabled or leaving it unset causes the window.opener property to be set to null unless the anchor specifies rel="opener".

This policy will be removed in Brave version 95.

See https://chromestatus.com/feature/6140064063029248.</string>
      <string id="TaskManagerEndProcessEnabled">Enable ending processes in Task Manager</string>
      <string id="TaskManagerEndProcessEnabled_Explain">Setting the policy to Disabled prevents users from ending processes in the Task Manager.

Setting the policy to Enabled or leaving it unset lets users end processes in the Task Manager.</string>
      <string id="ThirdPartyBlockingEnabled">Enable third party software injection blocking</string>
      <string id="ThirdPartyBlockingEnabled_Explain">Setting the policy to Enabled or leaving it unset prevents third-party software from injecting executable code into Brave's processes.

Setting the policy to Disabled allows this software to inject such code into Brave's processes.</string>
      <string id="TotalMemoryLimitMb">Set limit on megabytes of memory a single Chrome instance can use.</string>
      <string id="TotalMemoryLimitMb_Explain">Configures the amount of memory that a single Brave instance can use before tabs start being discarded (I.E. the memory used by the tab will be freed and the tab will have to be reloaded when switched to) to save memory.

If the policy is set, browser will begin to discard tabs to save memory once the limitation is exceeded. However, there is no guarantee that the browser is always running under the limit. Any value under 1024 will be rounded up to 1024.

If this policy is not set, the browser will only begin attempts to save memory once it has detected that the amount of physical memory on its machine is low.</string>
      <string id="TranslateEnabled">Enable Translate</string>
      <string id="TranslateEnabled_Explain">Setting the policy to True provides translation functionality when it's appropriate for users by showing an integrated translate toolbar in Brave and a translate option on the right-click context menu. Setting the policy to False shuts off all built-in translate features.

If you set the policy, users can't change this function. Leaving it unset lets them change the setting.</string>
      <string id="U2fSecurityKeyApiEnabled">Allow using the deprecated U2F Security Key API</string>
      <string id="U2fSecurityKeyApiEnabled_Explain">If set to Enabled, the deprecated U2F Security Key API can be used and the deprecation reminder prompt shown for U2F API requests is suppressed.

If the policy is set to Disabled or left unset, the default behavior will apply.

The U2F Security Key API is deprecated and it will be disabled by default in Chrome 98.

This is a temporary opt-out mechanism. The U2F API will be removed from Chrome in Chrome 104, at which point this policy will cease to be supported.

For more information about the deprecation of the U2F Security Key API, please refer to https://groups.google.com/a/chromium.org/g/blink-dev/c/xHC3AtU_65A.</string>
      <string id="URLAllowlist">Allow access to a list of URLs</string>
      <string id="URLAllowlist_Explain">Setting the policy provides access to the listed URLs, as exceptions to URLBlocklist. See that policy's description for the format of entries of this list. For example, setting URLBlocklist to * will block all requests, and you can use this policy to allow access to a limited list of URLs. Use it to open exceptions to certain schemes, subdomains of other domains, ports, or specific paths, using the format specified at ( https://www.chromium.org/administrators/url-blocklist-filter-format ). The most specific filter determines if a URL is blocked or allowed. The URLAllowlist policy takes precedence over URLBlocklist. This policy is limited to 1,000 entries.

This policy also allows enabling the automatic invocation by the browser of external application registered as protocol handlers for the listed protocols like "tel:" or "ssh:".

Leaving the policy unset allows no exceptions to URLBlocklist.

From Brave version 92, this policy is also supported in the headless mode.

On Microsoft® Windows®, this functionality is only available on instances that are joined to a Microsoft® Active Directory® domain, running on Windows 10 Pro, or enrolled in Chrome Browser Cloud Management. On macOS, this functionality is only available on instances that are managed via MDM, or joined to a domain via MCX.

Example value:

example.com
https://ssl.server.com
hosting.com/good_path
https://server:8080/path
.exact.hostname.com</string>
      <string id="URLAllowlistDesc">Allow access to a list of URLs</string>
      <string id="URLBlocklist">Block access to a list of URLs</string>
      <string id="URLBlocklist_Explain">Setting the policy prevents webpages with prohibited URLs from loading. It provides a list of URL patterns that specify forbidden URLs. Leaving the policy unset means no URLs are prohibited in the browser. Format the URL pattern according to this format ( https://www.chromium.org/administrators/url-blocklist-filter-format ). Up to 1,000 exceptions can be defined in URLAllowlist.

From Brave version 73, you can block javascript://* URLs. However, it affects only JavaScript entered in the address bar (or, for example, bookmarklets). In-page JavaScript URLs with dynamically loaded data aren't subject to this policy. For example, if you block example.com/abc, then example.com can still load example.com/abc using XMLHTTPRequest.

From Brave version 92, this policy is also supported in the headless mode.

Note: Blocking internal chrome://* URLs can lead to unexpected errors.

Example value:

example.com
https://ssl.server.com
hosting.com/bad_path
https://server:8080/path
.exact.hostname.com
file://*
custom_scheme:*
*</string>
      <string id="URLBlocklistDesc">Block access to a list of URLs</string>
      <string id="UrlKeyedAnonymizedDataCollectionEnabled">Enable URL-keyed anonymized data collection</string>
      <string id="UrlKeyedAnonymizedDataCollectionEnabled_Explain">Setting the policy to Enabled means URL-keyed anonymized data collection, which sends URLs of pages the user visits to Google to make searches and browsing better, is always active.

Setting the policy to Disabled results in no URL-keyed anonymized data collection.

If you set the policy, users can't change. If not set, then URL-keyed anonymized data collection at first, but users can change it.</string>
      <string id="UserDataDir">Set user data directory</string>
      <string id="UserDataDir_Explain">Configures the directory that Brave will use for storing user data.

If you set this policy, Brave will use the provided directory regardless whether the user has specified the '--user-data-dir' flag or not. To avoid data loss or other unexpected errors this policy should not be set to a directory used for other purposes, because Brave manages its contents.

See https://support.google.com/chrome/a?p=Supported_directory_variables for a list of variables that can be used.

If this policy is left not set the default profile path will be used and the user will be able to override it with the '--user-data-dir' command line flag.

Example value: ${users}/${user_name}/Chrome</string>
      <string id="UserDataSnapshotRetentionLimit">Limits the number of user data snapshots retained for use in case of emergency rollback.</string>
      <string id="UserDataSnapshotRetentionLimit_Explain">Following each major version update, Chrome will create a snapshot of certain portions of the user's browsing data for use in case of a later emergency version rollback. If an emergency rollback is performed to a version for which a user has a corresponding snapshot, the data in the snapshot is restored. This allows users to retain such settings as bookmarks and autofill data.

If this policy is not set, the default value of 3 is used

If the policy is set, old snapshots are deleted as needed to respect the limit. If the policy is set to 0, no snapshots will be taken</string>
      <string id="UserFeedbackAllowed">Allow user feedback</string>
      <string id="UserFeedbackAllowed_Explain">Setting the policy to Enabled or leaving it unset lets users send feedback to Google through Menu &gt; Help &gt; Report an Issue or key combination.

Setting the policy to Disabled means users can't send feedback to Google.</string>
      <string id="VideoCaptureAllowed">Allow or deny video capture</string>
      <string id="VideoCaptureAllowed_Explain">Setting the policy to Enabled or leaving it unset means that, with the exception of URLs set in the VideoCaptureAllowedUrls list, users get prompted for video capture access.

Setting the policy to Disabled turns off prompts, and video capture is only available to URLs set in the VideoCaptureAllowedUrls list.

Note: The policy affects all video input (not just the built-in camera).</string>
      <string id="VideoCaptureAllowedUrls">URLs that will be granted access to video capture devices without prompt</string>
      <string id="VideoCaptureAllowedUrls_Explain">Setting the policy means you specify the URL list whose patterns get matched to the security origin of the requesting URL. A match grants access to video capture devices without prompt

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

Example value:

https://www.example.com/
https://[*.]example.edu/</string>
      <string id="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</string>
      <string id="WPADQuickCheckEnabled">Enable WPAD optimization</string>
      <string id="WPADQuickCheckEnabled_Explain">Setting the policy to Enabled or leaving it unset turns on WPAD (Web Proxy Auto-Discovery) optimization in Brave.

Setting the policy to Disabled turns off WPAD optimization, causing Brave to wait longer for DNS-based WPAD servers.

Whether or not this policy is set, users can't change the WPAD optimization setting.</string>
      <string id="WebAppInstallForceList">Configure list of force-installed Web Apps</string>
      <string id="WebAppInstallForceList_Explain">Setting the policy specifies a list of web apps that install silently, without user interaction, and which users can't uninstall or turn off.

Each list item of the policy is an object with a mandatory member:
url (the URL of the web app to install)

and 5 optional members:
- default_launch_container
(for how the web app opens—a new tab is the default)

- create_desktop_shortcut
(True if you want to create Linux and
Microsoft® Windows® desktop shortcuts).

- fallback_app_name
(Starting with Brave version 90,
allows you to override the app name if it is not a
Progressive Web App (PWA), or the app name that is temporarily
installed if it is a PWA but authentication is required before the
installation can be completed. If both
custom_name and
fallback_app_name are provided,
the latter will be ignored.)

- custom_name
(Starting with Brave
version 96, allows you to permanently override the app name for all web
apps and PWAs. Currently only supported on
Brave OS.)

- custom_icon
(Starting with Brave
version 96, allows you to override the app icon of installed apps. The
icons have to be square, maximal 1 MB in size, and in one of the following
formats: jpeg, png, gif, webp, ico. The hash value has to be the SHA256
hash of the icon file. Currently only supported on
Brave OS.)

See PinnedLauncherApps for pinning apps to the Brave OS shelf.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebAppInstallForceList for more information about schema and formatting.


Example value:

[
  {
    "url": "https://www.google.com/maps",
    "default_launch_container": "window",
    "create_desktop_shortcut": true
  },
  {
    "url": "https://docs.google.com",
    "default_launch_container": "tab"
  },
  {
    "url": "https://docs.google.com/editor",
    "default_launch_container": "window",
    "fallback_app_name": "Editor"
  },
  {
    "url": "https://docs.google.com/sheets",
    "default_launch_container": "window",
    "custom_name": "Spreadsheets"
  },
  {
    "url": "https://weather.example.com",
    "custom_icon": {
      "url": "https://mydomain.example.com/sunny_icon.png",
      "hash": "c28f469c450e9ab2b86ea47038d2b324c6ad3b1e9a4bd8960da13214afd0ca38"
    }
  }
]</string>
      <string id="WebRtcAllowLegacyTLSProtocols">Allow legacy TLS/DTLS downgrade in WebRTC</string>
      <string id="WebRtcAllowLegacyTLSProtocols_Explain">If enabled, WebRTC peer connections can downgrade to obsolete
versions of the TLS/DTLS (DTLS 1.0, TLS 1.0 and TLS 1.1) protocols.
When this policy is disabled or not set, these TLS/DTLS versions are
disabled.

This policy is temporary and will be removed in a future version
of Brave.</string>
      <string id="WebRtcEventLogCollectionAllowed">Allow collection of WebRTC event logs from Google services</string>
      <string id="WebRtcEventLogCollectionAllowed_Explain">Setting the policy to Enabled means Brave can collect WebRTC event logs from Google services such as Hangouts Meet and upload them to Google. These logs have diagnostic information for debugging issues with audio or video meetings in Brave, such as the time and size of RTP packets, feedback about congestion on the network, and metadata about time and quality of audio and video frames. These logs have no audio or video content from the meeting. To make debugging easier, Google might associate these logs, by means of a session ID, with other logs collected by the Google service itself.

Setting the policy to Disabled results in no collection or uploading of such logs.

Leaving the policy unset on versions up to and including M76 means Brave defaults to not being able to collect and upload these logs. Starting at M77, Brave defaults to being able to collect and upload these logs from most profiles affected by cloud-based, user-level enterprise policies. From M77 up to and including M80, Brave can also collect and upload these logs by default from profiles affected by Brave on-premise management.</string>
      <string id="WebRtcIPHandling">The IP handling policy of WebRTC</string>
      <string id="WebRtcIPHandling_Explain">This policy allows restricting which IP addresses and interfaces WebRTC uses when attempting to find the best available connection. See RFC 8828 section 5.2 (https://tools.ietf.org/html/rfc8828.html#section-5.2). When unset, defaults to using all available interfaces.

Example value: default</string>
      <string id="WebRtcIPHandling_default">WebRTC will use all available interfaces when searching for the best path.</string>
      <string id="WebRtcIPHandling_default_public_and_private_interfaces">WebRTC will only use the interface connecting to the public Internet, but may connect using private IP addresses.</string>
      <string id="WebRtcIPHandling_default_public_interface_only">WebRTC will only use the interface connecting to the public Internet, and will not connect using private IP addresses.</string>
      <string id="WebRtcIPHandling_disable_non_proxied_udp">WebRTC will use TCP on the public-facing interface, and will only use UDP if supported by a configured proxy.</string>
      <string id="WebRtcLocalIpsAllowedUrls">URLs for which local IPs are exposed in WebRTC ICE candidates</string>
      <string id="WebRtcLocalIpsAllowedUrls_Explain">Patterns in this list will be matched against the security origin of the requesting URL.
If a match is found or chrome://flags/#enable-webrtc-hide-local-ips-with-mdns is Disabled, the local IP addresses are shown in WebRTC ICE candidates.
Otherwise, local IP addresses are concealed with mDNS hostnames.
Please note that this policy weakens the protection of local IPs if needed by administrators.

Example value:

https://www.example.com
*example.com*</string>
      <string id="WebRtcLocalIpsAllowedUrlsDesc">URLs for which local IPs are exposed in WebRTC ICE candidates</string>
      <string id="WebRtcUdpPortRange">Restrict the range of local UDP ports used by WebRTC</string>
      <string id="WebRtcUdpPortRange_Explain">If the policy is set, the UDP port range used by WebRTC is restricted to the specified port interval (endpoints included).

If the policy is not set, or if it is set to the empty string or an invalid port range, WebRTC is allowed to use any available local UDP port.

Example value: 10000-11999</string>
      <string id="WebSQLInThirdPartyContextEnabled">Force WebSQL in third-party contexts to be re-enabled.</string>
      <string id="WebSQLInThirdPartyContextEnabled_Explain">WebSQL in third-party contexts (e.g., cross-site iframes) is off by default as of M97 and will be fully removed in M101.
If this policy is set to false or unset, WebSQL in third party contexts will remain off.
If this policy is set to true, WebSQL in third-party contexts will be re-enabled.</string>
      <string id="WindowOcclusionEnabled">Enable Window Occlusion</string>
      <string id="WindowOcclusionEnabled_Explain">Enables window occlusion in Brave.

If you enable this setting, to reduce CPU and power consumption Brave will detect when a window is covered by other windows, and will suspend work painting pixels.

If you disable this setting Brave will not detect when a window is covered by other windows.

If this policy is left not set, occlusion detection will be enabled.</string>
      <string id="Brave_group">Brave Specific Policies</string>
      <string id="TorDisabled">Disable TOR</string>
      <string id="TorDisabled_Explain">If the policy is enabled, TOR will be disabled and the menu option will be removed after a browser restart. If the policy is not set, or if it is set to default, TOR appears in the menu and is allowed for use.</string>
      <string id="IPFSEnabled">Enable IPFS</string>
      <string id="IPFSEnabled_Explain">If the policy is disabled, IPFS will be disabled. If the policy is not set or if it is set to default, IPFS will be enabled.</string>
    </stringTable>
    <presentationTable>
      <presentation id="ScreenCaptureAllowed" />
      <presentation id="ScreenCaptureAllowedByOrigins">
        <listBox refId="ScreenCaptureAllowedByOriginsDesc">Allow Desktop, Window, and Tab capture by these origins</listBox>
      </presentation>
      <presentation id="WindowCaptureAllowedByOrigins">
        <listBox refId="WindowCaptureAllowedByOriginsDesc">Allow Window and Tab capture by these origins</listBox>
      </presentation>
      <presentation id="TabCaptureAllowedByOrigins">
        <listBox refId="TabCaptureAllowedByOriginsDesc">Allow Tab capture by these origins</listBox>
      </presentation>
      <presentation id="SameOriginTabCaptureAllowedByOrigins">
        <listBox refId="SameOriginTabCaptureAllowedByOriginsDesc">Allow Same Origin Tab capture by these origins</listBox>
      </presentation>
      <presentation id="DefaultCookiesSetting">
        <dropdownList refId="DefaultCookiesSetting">Default cookies setting</dropdownList>
      </presentation>
      <presentation id="DefaultFileSystemReadGuardSetting">
        <dropdownList refId="DefaultFileSystemReadGuardSetting">Control use of the File System API for reading</dropdownList>
      </presentation>
      <presentation id="DefaultFileSystemWriteGuardSetting">
        <dropdownList refId="DefaultFileSystemWriteGuardSetting">Control use of the File System API for writing</dropdownList>
      </presentation>
      <presentation id="DefaultImagesSetting">
        <dropdownList refId="DefaultImagesSetting">Default images setting</dropdownList>
      </presentation>
      <presentation id="DefaultInsecureContentSetting">
        <dropdownList refId="DefaultInsecureContentSetting">Control use of insecure content exceptions</dropdownList>
      </presentation>
      <presentation id="DefaultJavaScriptSetting">
        <dropdownList refId="DefaultJavaScriptSetting">Default JavaScript setting</dropdownList>
      </presentation>
      <presentation id="DefaultJavaScriptJitSetting">
        <dropdownList refId="DefaultJavaScriptJitSetting">Control use of JavaScript JIT</dropdownList>
      </presentation>
      <presentation id="DefaultPopupsSetting">
        <dropdownList refId="DefaultPopupsSetting">Default popups setting</dropdownList>
      </presentation>
      <presentation id="DefaultNotificationsSetting">
        <dropdownList refId="DefaultNotificationsSetting">Default notification setting</dropdownList>
      </presentation>
      <presentation id="DefaultGeolocationSetting">
        <dropdownList refId="DefaultGeolocationSetting">Default geolocation setting</dropdownList>
      </presentation>
      <presentation id="DefaultSensorsSetting">
        <dropdownList refId="DefaultSensorsSetting">Default sensors setting</dropdownList>
      </presentation>
      <presentation id="DefaultWebBluetoothGuardSetting">
        <dropdownList refId="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</dropdownList>
      </presentation>
      <presentation id="DefaultWebUsbGuardSetting">
        <dropdownList refId="DefaultWebUsbGuardSetting">Control use of the WebUSB API</dropdownList>
      </presentation>
      <presentation id="DefaultSerialGuardSetting">
        <dropdownList refId="DefaultSerialGuardSetting">Control use of the Serial API</dropdownList>
      </presentation>
      <presentation id="AutoSelectCertificateForUrls">
        <listBox refId="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</listBox>
      </presentation>
      <presentation id="CookiesAllowedForUrls">
        <listBox refId="CookiesAllowedForUrlsDesc">Allow cookies on these sites</listBox>
      </presentation>
      <presentation id="CookiesBlockedForUrls">
        <listBox refId="CookiesBlockedForUrlsDesc">Block cookies on these sites</listBox>
      </presentation>
      <presentation id="CookiesSessionOnlyForUrls">
        <listBox refId="CookiesSessionOnlyForUrlsDesc">Limit cookies from matching URLs to the current session</listBox>
      </presentation>
      <presentation id="FileSystemReadAskForUrls">
        <listBox refId="FileSystemReadAskForUrlsDesc">Allow read access via the File System API on these sites</listBox>
      </presentation>
      <presentation id="FileSystemReadBlockedForUrls">
        <listBox refId="FileSystemReadBlockedForUrlsDesc">Block read access via the File System API on these sites</listBox>
      </presentation>
      <presentation id="FileSystemWriteAskForUrls">
        <listBox refId="FileSystemWriteAskForUrlsDesc">Allow write access to files and directories on these sites</listBox>
      </presentation>
      <presentation id="FileSystemWriteBlockedForUrls">
        <listBox refId="FileSystemWriteBlockedForUrlsDesc">Block write access to files and directories on these sites</listBox>
      </presentation>
      <presentation id="ImagesAllowedForUrls">
        <listBox refId="ImagesAllowedForUrlsDesc">Allow images on these sites</listBox>
      </presentation>
      <presentation id="ImagesBlockedForUrls">
        <listBox refId="ImagesBlockedForUrlsDesc">Block images on these sites</listBox>
      </presentation>
      <presentation id="InsecureContentAllowedForUrls">
        <listBox refId="InsecureContentAllowedForUrlsDesc">Allow insecure content on these sites</listBox>
      </presentation>
      <presentation id="InsecureContentBlockedForUrls">
        <listBox refId="InsecureContentBlockedForUrlsDesc">Block insecure content on these sites</listBox>
      </presentation>
      <presentation id="JavaScriptAllowedForUrls">
        <listBox refId="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</listBox>
      </presentation>
      <presentation id="JavaScriptBlockedForUrls">
        <listBox refId="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</listBox>
      </presentation>
      <presentation id="JavaScriptJitAllowedForSites">
        <listBox refId="JavaScriptJitAllowedForSitesDesc">Allow JavaScript to use JIT on these sites</listBox>
      </presentation>
      <presentation id="JavaScriptJitBlockedForSites">
        <listBox refId="JavaScriptJitBlockedForSitesDesc">Block JavaScript from using JIT on these sites</listBox>
      </presentation>
      <presentation id="LegacySameSiteCookieBehaviorEnabledForDomainList">
        <listBox refId="LegacySameSiteCookieBehaviorEnabledForDomainListDesc">Revert to legacy SameSite behavior for cookies on these sites</listBox>
      </presentation>
      <presentation id="PopupsAllowedForUrls">
        <listBox refId="PopupsAllowedForUrlsDesc">Allow popups on these sites</listBox>
      </presentation>
      <presentation id="RegisteredProtocolHandlers">
        <textBox refId="RegisteredProtocolHandlers">
          <label>Register protocol handlers</label>
        </textBox>
      </presentation>
      <presentation id="PopupsBlockedForUrls">
        <listBox refId="PopupsBlockedForUrlsDesc">Block popups on these sites</listBox>
      </presentation>
      <presentation id="NotificationsAllowedForUrls">
        <listBox refId="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</listBox>
      </presentation>
      <presentation id="NotificationsBlockedForUrls">
        <listBox refId="NotificationsBlockedForUrlsDesc">Block notifications on these sites</listBox>
      </presentation>
      <presentation id="SensorsAllowedForUrls">
        <listBox refId="SensorsAllowedForUrlsDesc">Allow access to sensors on these sites</listBox>
      </presentation>
      <presentation id="SensorsBlockedForUrls">
        <listBox refId="SensorsBlockedForUrlsDesc">Block access to sensors on these sites</listBox>
      </presentation>
      <presentation id="WebUsbAllowDevicesForUrls">
        <textBox refId="WebUsbAllowDevicesForUrls">
          <label>Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.</label>
        </textBox>
      </presentation>
      <presentation id="WebUsbAskForUrls">
        <listBox refId="WebUsbAskForUrlsDesc">Allow WebUSB on these sites</listBox>
      </presentation>
      <presentation id="WebUsbBlockedForUrls">
        <listBox refId="WebUsbBlockedForUrlsDesc">Block WebUSB on these sites</listBox>
      </presentation>
      <presentation id="SerialAskForUrls">
        <listBox refId="SerialAskForUrlsDesc">Allow the Serial API on these sites</listBox>
      </presentation>
      <presentation id="SerialBlockedForUrls">
        <listBox refId="SerialBlockedForUrlsDesc">Block the Serial API on these sites</listBox>
      </presentation>
      <presentation id="SerialAllowAllPortsForUrls">
        <listBox refId="SerialAllowAllPortsForUrlsDesc">Automatically grant permission to sites to connect all serial ports.</listBox>
      </presentation>
      <presentation id="SerialAllowUsbDevicesForUrls">
        <textBox refId="SerialAllowUsbDevicesForUrls">
          <label>Automatically grant permission to sites to connect to USB serial devices.</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderEnabled" />
      <presentation id="DefaultSearchProviderName">
        <textBox refId="DefaultSearchProviderName">
          <label>Default search provider name</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderKeyword">
        <textBox refId="DefaultSearchProviderKeyword">
          <label>Default search provider keyword</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderSearchURL">
        <textBox refId="DefaultSearchProviderSearchURL">
          <label>Default search provider search URL</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderSuggestURL">
        <textBox refId="DefaultSearchProviderSuggestURL">
          <label>Default search provider suggest URL</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderIconURL">
        <textBox refId="DefaultSearchProviderIconURL">
          <label>Default search provider icon</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderEncodings">
        <listBox refId="DefaultSearchProviderEncodingsDesc">Default search provider encodings</listBox>
      </presentation>
      <presentation id="DefaultSearchProviderAlternateURLs">
        <listBox refId="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</listBox>
      </presentation>
      <presentation id="DefaultSearchProviderImageURL">
        <textBox refId="DefaultSearchProviderImageURL">
          <label>Parameter providing search-by-image feature for the default search provider</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderNewTabURL">
        <textBox refId="DefaultSearchProviderNewTabURL">
          <label>Default search provider new tab page URL</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderSearchURLPostParams">
        <textBox refId="DefaultSearchProviderSearchURLPostParams">
          <label>Parameters for search URL which uses POST</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderSuggestURLPostParams">
        <textBox refId="DefaultSearchProviderSuggestURLPostParams">
          <label>Parameters for suggest URL which uses POST</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderImageURLPostParams">
        <textBox refId="DefaultSearchProviderImageURLPostParams">
          <label>Parameters for image URL which uses POST</label>
        </textBox>
      </presentation>
      <presentation id="RemoteAccessHostClientDomain">
        <textBox refId="RemoteAccessHostClientDomain">
          <label>Configure the required domain name for remote access clients</label>
        </textBox>
      </presentation>
      <presentation id="RemoteAccessHostDomain">
        <textBox refId="RemoteAccessHostDomain">
          <label>Configure the required domain name for remote access hosts</label>
        </textBox>
      </presentation>
      <presentation id="ProxyMode">
        <dropdownList refId="ProxyMode">Choose how to specify proxy server settings</dropdownList>
      </presentation>
      <presentation id="ProxyServerMode">
        <dropdownList refId="ProxyServerMode">Choose how to specify proxy server settings</dropdownList>
      </presentation>
      <presentation id="ProxyServer">
        <textBox refId="ProxyServer">
          <label>Address or URL of proxy server</label>
        </textBox>
      </presentation>
      <presentation id="ProxyPacUrl">
        <textBox refId="ProxyPacUrl">
          <label>URL to a proxy .pac file</label>
        </textBox>
      </presentation>
      <presentation id="ProxyBypassList">
        <textBox refId="ProxyBypassList">
          <label>Comma-separated list of proxy bypass rules</label>
        </textBox>
      </presentation>
      <presentation id="AuthServerWhitelist">
        <textBox refId="AuthServerWhitelist">
          <label>Authentication server whitelist</label>
        </textBox>
      </presentation>
      <presentation id="AuthNegotiateDelegateWhitelist">
        <textBox refId="AuthNegotiateDelegateWhitelist">
          <label>Kerberos delegation server whitelist</label>
        </textBox>
      </presentation>
      <presentation id="ExtensionInstallBlacklist">
        <listBox refId="ExtensionInstallBlacklistDesc">Extension IDs the user should be prevented from installing (or * for all)</listBox>
      </presentation>
      <presentation id="ExtensionInstallWhitelist">
        <listBox refId="ExtensionInstallWhitelistDesc">Extension IDs to exempt from the blacklist</listBox>
      </presentation>
      <presentation id="DefaultMediaStreamSetting">
        <dropdownList refId="DefaultMediaStreamSetting">Default mediastream setting</dropdownList>
      </presentation>
      <presentation id="NativeMessagingBlacklist">
        <listBox refId="NativeMessagingBlacklistDesc">Names of the forbidden native messaging hosts (or * for all)</listBox>
      </presentation>
      <presentation id="NativeMessagingWhitelist">
        <listBox refId="NativeMessagingWhitelistDesc">Names of the native messaging hosts to exempt from the blocklist</listBox>
      </presentation>
      <presentation id="SafeBrowsingEnabled" />
      <presentation id="SafeBrowsingWhitelistDomains">
        <listBox refId="SafeBrowsingWhitelistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</listBox>
      </presentation>
      <presentation id="NativeWindowOcclusionEnabled" />
      <presentation id="DisabledSchemes">
        <listBox refId="DisabledSchemesDesc">List of disabled protocol schemes</listBox>
      </presentation>
      <presentation id="JavascriptEnabled" />
      <presentation id="IncognitoEnabled" />
      <presentation id="ForceSafeSearch" />
      <presentation id="ForceYouTubeSafetyMode" />
      <presentation id="AutoFillEnabled" />
      <presentation id="SigninAllowed" />
      <presentation id="DeveloperToolsDisabled" />
      <presentation id="URLBlacklist">
        <listBox refId="URLBlacklistDesc">Block access to a list of URLs</listBox>
      </presentation>
      <presentation id="URLWhitelist">
        <listBox refId="URLWhitelistDesc">Allow access to a list of URLs</listBox>
      </presentation>
      <presentation id="ForceBrowserSignin" />
      <presentation id="UnsafelyTreatInsecureOriginAsSecure">
        <listBox refId="UnsafelyTreatInsecureOriginAsSecureDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</listBox>
      </presentation>
      <presentation id="SpellcheckLanguageBlacklist">
        <listBox refId="SpellcheckLanguageBlacklistDesc">Force disable spellcheck languages</listBox>
      </presentation>
      <presentation id="AutoplayWhitelist">
        <listBox refId="AutoplayWhitelistDesc">Allow media autoplay on a whitelist of URL patterns</listBox>
      </presentation>
      <presentation id="StricterMixedContentTreatmentEnabled" />
      <presentation id="ExtensionInstallAllowlist">
        <listBox refId="ExtensionInstallAllowlistDesc">Extension IDs to exempt from the blocklist</listBox>
      </presentation>
      <presentation id="ExtensionInstallBlocklist">
        <listBox refId="ExtensionInstallBlocklistDesc">Extension IDs the user should be prevented from installing (or * for all)</listBox>
      </presentation>
      <presentation id="ExtensionInstallForcelist">
        <listBox refId="ExtensionInstallForcelistDesc">Extension/App IDs and update URLs to be silently installed</listBox>
      </presentation>
      <presentation id="ExtensionInstallSources">
        <listBox refId="ExtensionInstallSourcesDesc">URL patterns to allow extension, app, and user script installs from</listBox>
      </presentation>
      <presentation id="ExtensionAllowedTypes">
        <listBox refId="ExtensionAllowedTypesDesc">Types of extensions/apps that are allowed to be installed</listBox>
      </presentation>
      <presentation id="ExtensionSettings">
        <textBox refId="ExtensionSettings">
          <label>Extension management settings</label>
        </textBox>
      </presentation>
      <presentation id="BlockExternalExtensions" />
      <presentation id="EnableMediaRouter" />
      <presentation id="ShowCastIconInToolbar" />
      <presentation id="AuthSchemes">
        <textBox refId="AuthSchemes">
          <label>Supported authentication schemes</label>
        </textBox>
      </presentation>
      <presentation id="DisableAuthNegotiateCnameLookup" />
      <presentation id="EnableAuthNegotiatePort" />
      <presentation id="BasicAuthOverHttpEnabled" />
      <presentation id="AuthServerAllowlist">
        <textBox refId="AuthServerAllowlist">
          <label>Authentication server allowlist</label>
        </textBox>
      </presentation>
      <presentation id="AuthNegotiateDelegateAllowlist">
        <textBox refId="AuthNegotiateDelegateAllowlist">
          <label>Kerberos delegation server allowlist</label>
        </textBox>
      </presentation>
      <presentation id="AllowCrossOriginAuthPrompt" />
      <presentation id="AlternativeBrowserPath">
        <textBox refId="AlternativeBrowserPath">
          <label>Alternative browser to launch for configured websites.</label>
        </textBox>
      </presentation>
      <presentation id="AlternativeBrowserParameters">
        <listBox refId="AlternativeBrowserParametersDesc">Command-line parameters for the alternative browser.</listBox>
      </presentation>
      <presentation id="BrowserSwitcherChromePath">
        <textBox refId="BrowserSwitcherChromePath">
          <label>Path to Chrome for switching from the alternative browser.</label>
        </textBox>
      </presentation>
      <presentation id="BrowserSwitcherChromeParameters">
        <listBox refId="BrowserSwitcherChromeParametersDesc">Command-line parameters for switching from the alternative browser.</listBox>
      </presentation>
      <presentation id="BrowserSwitcherDelay">
        <decimalTextBox refId="BrowserSwitcherDelay">Delay before launching alternative browser (milliseconds):</decimalTextBox>
      </presentation>
      <presentation id="BrowserSwitcherEnabled" />
      <presentation id="BrowserSwitcherExternalSitelistUrl">
        <textBox refId="BrowserSwitcherExternalSitelistUrl">
          <label>URL of an XML file that contains URLs to load in an alternative browser.</label>
        </textBox>
      </presentation>
      <presentation id="BrowserSwitcherExternalGreylistUrl">
        <textBox refId="BrowserSwitcherExternalGreylistUrl">
          <label>URL of an XML file that contains URLs that should never trigger a browser switch.</label>
        </textBox>
      </presentation>
      <presentation id="BrowserSwitcherKeepLastChromeTab" />
      <presentation id="BrowserSwitcherParsingMode">
        <dropdownList refId="BrowserSwitcherParsingMode">Sitelist parsing mode</dropdownList>
      </presentation>
      <presentation id="BrowserSwitcherUrlList">
        <listBox refId="BrowserSwitcherUrlListDesc">Websites to open in alternative browser</listBox>
      </presentation>
      <presentation id="BrowserSwitcherUrlGreylist">
        <listBox refId="BrowserSwitcherUrlGreylistDesc">Websites that should never trigger a browser switch.</listBox>
      </presentation>
      <presentation id="BrowserSwitcherUseIeSitelist" />
      <presentation id="NativeMessagingBlocklist">
        <listBox refId="NativeMessagingBlocklistDesc">Names of the forbidden native messaging hosts (or * for all)</listBox>
      </presentation>
      <presentation id="NativeMessagingAllowlist">
        <listBox refId="NativeMessagingAllowlistDesc">Names of the native messaging hosts to exempt from the blocklist</listBox>
      </presentation>
      <presentation id="NativeMessagingUserLevelHosts" />
      <presentation id="PromptOnMultipleMatchingCertificates" />
      <presentation id="PasswordManagerEnabled" />
      <presentation id="PasswordLeakDetectionEnabled" />
      <presentation id="PrintingEnabled" />
      <presentation id="CloudPrintProxyEnabled" />
      <presentation id="PrintingAllowedBackgroundGraphicsModes">
        <dropdownList refId="PrintingAllowedBackgroundGraphicsModes">Restrict background graphics printing mode</dropdownList>
      </presentation>
      <presentation id="PrintingBackgroundGraphicsDefault">
        <dropdownList refId="PrintingBackgroundGraphicsDefault">Default background graphics printing mode</dropdownList>
      </presentation>
      <presentation id="PrintingPaperSizeDefault">
        <textBox refId="PrintingPaperSizeDefault">
          <label>Default printing page size</label>
        </textBox>
      </presentation>
      <presentation id="CloudPrintSubmitEnabled" />
      <presentation id="DisablePrintPreview" />
      <presentation id="PrintHeaderFooter" />
      <presentation id="DefaultPrinterSelection">
        <textBox refId="DefaultPrinterSelection">
          <label>Default printer selection rules</label>
        </textBox>
      </presentation>
      <presentation id="PrintPreviewUseSystemDefaultPrinter" />
      <presentation id="PrinterTypeDenyList">
        <listBox refId="PrinterTypeDenyListDesc">Disable printer types on the deny list</listBox>
      </presentation>
      <presentation id="PrintRasterizationMode">
        <dropdownList refId="PrintRasterizationMode">Print Rasterization Mode</dropdownList>
      </presentation>
      <presentation id="PrintPdfAsImageAvailability" />
      <presentation id="PrintRasterizePdfDpi">
        <decimalTextBox refId="PrintRasterizePdfDpi">Print Rasterize PDF DPI:</decimalTextBox>
      </presentation>
      <presentation id="PrintPostScriptMode">
        <dropdownList refId="PrintPostScriptMode">Print PostScript Mode</dropdownList>
      </presentation>
      <presentation id="PrintPdfAsImageDefault" />
      <presentation id="RemoteAccessHostClientDomainList">
        <listBox refId="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</listBox>
      </presentation>
      <presentation id="RemoteAccessHostFirewallTraversal" />
      <presentation id="RemoteAccessHostDomainList">
        <listBox refId="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</listBox>
      </presentation>
      <presentation id="RemoteAccessHostRequireCurtain" />
      <presentation id="RemoteAccessHostAllowClientPairing" />
      <presentation id="RemoteAccessHostAllowRelayedConnection" />
      <presentation id="RemoteAccessHostUdpPortRange">
        <textBox refId="RemoteAccessHostUdpPortRange">
          <label>Restrict the UDP port range used by the remote access host</label>
        </textBox>
      </presentation>
      <presentation id="RemoteAccessHostAllowUiAccessForRemoteAssistance" />
      <presentation id="RemoteAccessHostAllowFileTransfer" />
      <presentation id="RemoteAccessHostAllowRemoteAccessConnections" />
      <presentation id="RemoteAccessHostMaximumSessionDurationMinutes">
        <decimalTextBox refId="RemoteAccessHostMaximumSessionDurationMinutes">Maximum session duration allowed for remote access connections:</decimalTextBox>
      </presentation>
      <presentation id="RemoteAccessHostClipboardSizeBytes">
        <decimalTextBox refId="RemoteAccessHostClipboardSizeBytes">The maximum size, in bytes, that can be transferred between client and host via clipboard synchronization:</decimalTextBox>
      </presentation>
      <presentation id="RemoteAccessHostAllowRemoteSupportConnections" />
      <presentation id="RemoteAccessClientFirewallTraversal" />
      <presentation id="RemoteAccessHostRequireTwoFactor" />
      <presentation id="RemoteAccessHostTalkGadgetPrefix">
        <textBox refId="RemoteAccessHostTalkGadgetPrefix">
          <label>Configure the TalkGadget prefix for remote access hosts</label>
        </textBox>
      </presentation>
      <presentation id="RemoteAccessHostDebugOverridePolicies">
        <textBox refId="RemoteAccessHostDebugOverridePolicies">
          <label>Policy overrides for Debug builds of the remote access host</label>
        </textBox>
      </presentation>
      <presentation id="PasswordManagerAllowShowPasswords" />
      <presentation id="ExtensionAllowInsecureUpdates" />
      <presentation id="DefaultSearchProviderInstantURL">
        <textBox refId="DefaultSearchProviderInstantURL">
          <label>Default search provider instant URL</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderSearchTermsReplacementKey">
        <textBox refId="DefaultSearchProviderSearchTermsReplacementKey">
          <label>Parameter controlling search term placement for the default search provider</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderInstantURLPostParams">
        <textBox refId="DefaultSearchProviderInstantURLPostParams">
          <label>Parameters for instant URL which uses POST</label>
        </textBox>
      </presentation>
      <presentation id="DefaultFileHandlingGuardSetting">
        <dropdownList refId="DefaultFileHandlingGuardSetting">Control use of the File Handling API</dropdownList>
      </presentation>
      <presentation id="DefaultPluginsSetting">
        <dropdownList refId="DefaultPluginsSetting">Default Flash setting</dropdownList>
      </presentation>
      <presentation id="DefaultKeygenSetting">
        <dropdownList refId="DefaultKeygenSetting">Default key generation setting</dropdownList>
      </presentation>
      <presentation id="FileHandlingAllowedForUrls">
        <listBox refId="FileHandlingAllowedForUrlsDesc">Allow the File Handling API on these web apps</listBox>
      </presentation>
      <presentation id="FileHandlingBlockedForUrls">
        <listBox refId="FileHandlingBlockedForUrlsDesc">Block the File Handling API on these web apps</listBox>
      </presentation>
      <presentation id="KeygenAllowedForUrls">
        <listBox refId="KeygenAllowedForUrlsDesc">Allow key generation on these sites</listBox>
      </presentation>
      <presentation id="KeygenBlockedForUrls">
        <listBox refId="KeygenBlockedForUrlsDesc">Block key generation on these sites</listBox>
      </presentation>
      <presentation id="LegacySameSiteCookieBehaviorEnabled">
        <dropdownList refId="LegacySameSiteCookieBehaviorEnabled">Default legacy SameSite cookie behavior setting</dropdownList>
      </presentation>
      <presentation id="PluginsAllowedForUrls">
        <listBox refId="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</listBox>
      </presentation>
      <presentation id="PluginsBlockedForUrls">
        <listBox refId="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</listBox>
      </presentation>
      <presentation id="ChromeFrameRendererSettings">
        <dropdownList refId="ChromeFrameRendererSettings">Default HTML renderer for Brave Frame</dropdownList>
      </presentation>
      <presentation id="RenderInChromeFrameList">
        <listBox refId="RenderInChromeFrameListDesc">Always render the following URL patterns in Brave Frame</listBox>
      </presentation>
      <presentation id="RenderInHostList">
        <listBox refId="RenderInHostListDesc">Always render the following URL patterns in the host browser</listBox>
      </presentation>
      <presentation id="AdditionalLaunchParameters">
        <textBox refId="AdditionalLaunchParameters">
          <label>Additional command line parameters for Brave</label>
        </textBox>
      </presentation>
      <presentation id="SkipMetadataCheck" />
      <presentation id="ChromeFrameContentTypes">
        <listBox refId="ChromeFrameContentTypesDesc">Allow Brave Frame to handle the listed content types</listBox>
      </presentation>
      <presentation id="SupervisedUserCreationEnabled" />
      <presentation id="CloudPrintWarningsSuppressed" />
      <presentation id="DnsPrefetchingEnabled" />
      <presentation id="DisableSpdy" />
      <presentation id="Http09OnNonDefaultPortsEnabled" />
      <presentation id="ForceLegacyDefaultReferrerPolicy" />
      <presentation id="AppCacheForceEnabled" />
      <presentation id="DisabledPlugins">
        <listBox refId="DisabledPluginsDesc">List of disabled plugins</listBox>
      </presentation>
      <presentation id="EnabledPlugins">
        <listBox refId="EnabledPluginsDesc">List of enabled plugins</listBox>
      </presentation>
      <presentation id="DisabledPluginsExceptions">
        <listBox refId="DisabledPluginsExceptionsDesc">List of exceptions to the list of disabled plugins</listBox>
      </presentation>
      <presentation id="DisablePluginFinder" />
      <presentation id="EnableDeprecatedWebBasedSignin" />
      <presentation id="MediaCacheSize">
        <decimalTextBox refId="MediaCacheSize">Set media disk cache size:</decimalTextBox>
      </presentation>
      <presentation id="ClearSiteDataOnExit" />
      <presentation id="InstantEnabled" />
      <presentation id="AllowOutdatedPlugins" />
      <presentation id="AlwaysAuthorizePlugins" />
      <presentation id="RunAllFlashInAllowMode" />
      <presentation id="GCFUserDataDir">
        <textBox refId="GCFUserDataDir">
          <label>Set user data directory</label>
        </textBox>
      </presentation>
      <presentation id="HideWebStorePromo" />
      <presentation id="EnterpriseWebStoreURL">
        <textBox refId="EnterpriseWebStoreURL">
          <label>Enterprise web store URL (deprecated)</label>
        </textBox>
      </presentation>
      <presentation id="EnterpriseWebStoreName">
        <textBox refId="EnterpriseWebStoreName">
          <label>Enterprise web store name (deprecated)</label>
        </textBox>
      </presentation>
      <presentation id="DisableSSLRecordSplitting" />
      <presentation id="EnableSha1ForLocalAnchors" />
      <presentation id="EnableCommonNameFallbackForLocalAnchors" />
      <presentation id="EnableSymantecLegacyInfrastructure" />
      <presentation id="SafeBrowsingExtendedReportingOptInAllowed" />
      <presentation id="SuppressChromeFrameTurndownPrompt" />
      <presentation id="EnableDeprecatedWebPlatformFeatures">
        <listBox refId="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</listBox>
      </presentation>
      <presentation id="SSLVersionFallbackMin">
        <dropdownList refId="SSLVersionFallbackMin">Minimum TLS version to fallback to</dropdownList>
      </presentation>
      <presentation id="SSLVersionMax">
        <dropdownList refId="SSLVersionMax">Maximum SSL version enabled</dropdownList>
      </presentation>
      <presentation id="RC4Enabled" />
      <presentation id="DHEEnabled" />
      <presentation id="WelcomePageOnOSUpgradeEnabled" />
      <presentation id="PacHttpsUrlStrippingEnabled" />
      <presentation id="WebDriverOverridesIncompatiblePolicies" />
      <presentation id="MachineLevelUserCloudPolicyEnrollmentToken">
        <textBox refId="MachineLevelUserCloudPolicyEnrollmentToken">
          <label>The enrollment token of cloud policy on desktop</label>
        </textBox>
      </presentation>
      <presentation id="TabUnderAllowed" />
      <presentation id="TabFreezingEnabled" />
      <presentation id="ForceNetworkInProcess" />
      <presentation id="AllowPopupsDuringPageUnload" />
      <presentation id="TLS13HardeningForLocalAnchorsEnabled" />
      <presentation id="CorsMitigationList">
        <listBox refId="CorsMitigationListDesc">Enable CORS check mitigations in the new CORS implementation</listBox>
      </presentation>
      <presentation id="CorsLegacyModeEnabled" />
      <presentation id="WebComponentsV0Enabled" />
      <presentation id="UseLegacyFormControls" />
      <presentation id="LocalDiscoveryEnabled" />
      <presentation id="AdvancedProtectionDeepScanningEnabled" />
      <presentation id="UserAgentClientHintsEnabled" />
      <presentation id="EnableDeprecatedPrivetPrinting" />
      <presentation id="TripleDESEnabled" />
      <presentation id="SafeBrowsingExtendedReportingEnabled" />
      <presentation id="SafeBrowsingProtectionLevel">
        <dropdownList refId="SafeBrowsingProtectionLevel">Safe Browsing Protection Level</dropdownList>
      </presentation>
      <presentation id="SafeBrowsingAllowlistDomains">
        <listBox refId="SafeBrowsingAllowlistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</listBox>
      </presentation>
      <presentation id="PasswordProtectionWarningTrigger">
        <dropdownList refId="PasswordProtectionWarningTrigger">Password protection warning trigger</dropdownList>
      </presentation>
      <presentation id="PasswordProtectionLoginURLs">
        <listBox refId="PasswordProtectionLoginURLsDesc">Configure the list of enterprise login URLs where password protection service should capture salted hashes of passwords.</listBox>
      </presentation>
      <presentation id="PasswordProtectionChangePasswordURL">
        <textBox refId="PasswordProtectionChangePasswordURL">
          <label>Configure the change password URL.</label>
        </textBox>
      </presentation>
      <presentation id="ShowHomeButton" />
      <presentation id="HomepageLocation">
        <textBox refId="HomepageLocation">
          <label>Home page URL</label>
        </textBox>
      </presentation>
      <presentation id="HomepageIsNewTabPage" />
      <presentation id="NewTabPageLocation">
        <textBox refId="NewTabPageLocation">
          <label>New Tab page URL</label>
        </textBox>
      </presentation>
      <presentation id="RestoreOnStartup">
        <dropdownList refId="RestoreOnStartup">Action on startup</dropdownList>
      </presentation>
      <presentation id="RestoreOnStartupURLs">
        <listBox refId="RestoreOnStartupURLsDesc">URLs to open on startup</listBox>
      </presentation>
      <presentation id="AbusiveExperienceInterventionEnforce" />
      <presentation id="AccessibilityImageLabelsEnabled" />
      <presentation id="AdditionalDnsQueryTypesEnabled" />
      <presentation id="AdsSettingForIntrusiveAdsSites">
        <dropdownList refId="AdsSettingForIntrusiveAdsSites">Ads setting for sites with intrusive ads</dropdownList>
      </presentation>
      <presentation id="AdvancedProtectionAllowed" />
      <presentation id="AllowDeletingBrowserHistory" />
      <presentation id="AllowDinosaurEasterEgg" />
      <presentation id="AllowFileSelectionDialogs" />
      <presentation id="AllowSyncXHRInPageDismissal" />
      <presentation id="AllowedDomainsForApps">
        <textBox refId="AllowedDomainsForApps">
          <label>Define domains allowed to access Google Workspace</label>
        </textBox>
      </presentation>
      <presentation id="AlternateErrorPagesEnabled" />
      <presentation id="AlwaysOpenPdfExternally" />
      <presentation id="AmbientAuthenticationInPrivateModesEnabled">
        <dropdownList refId="AmbientAuthenticationInPrivateModesEnabled">Enable Ambient Authentication for profile types.</dropdownList>
      </presentation>
      <presentation id="ApplicationLocaleValue">
        <textBox refId="ApplicationLocaleValue">
          <label>Application locale</label>
        </textBox>
      </presentation>
      <presentation id="AudioCaptureAllowed" />
      <presentation id="AudioCaptureAllowedUrls">
        <listBox refId="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</listBox>
      </presentation>
      <presentation id="AudioProcessHighPriorityEnabled" />
      <presentation id="AudioSandboxEnabled" />
      <presentation id="AutoLaunchProtocolsFromOrigins">
        <textBox refId="AutoLaunchProtocolsFromOrigins">
          <label>Define a list of protocols that can launch an external application from listed origins without prompting the user</label>
        </textBox>
      </presentation>
      <presentation id="AutoOpenAllowedForURLs">
        <listBox refId="AutoOpenAllowedForURLsDesc">URLs where AutoOpenFileTypes can apply</listBox>
      </presentation>
      <presentation id="AutoOpenFileTypes">
        <listBox refId="AutoOpenFileTypesDesc">List of file types that should be automatically opened on download</listBox>
      </presentation>
      <presentation id="AutofillAddressEnabled" />
      <presentation id="AutofillCreditCardEnabled" />
      <presentation id="AutoplayAllowed" />
      <presentation id="AutoplayAllowlist">
        <listBox refId="AutoplayAllowlistDesc">Allow media autoplay on a allowlist of URL patterns</listBox>
      </presentation>
      <presentation id="BackgroundModeEnabled" />
      <presentation id="BlockThirdPartyCookies" />
      <presentation id="BookmarkBarEnabled" />
      <presentation id="BrowserAddPersonEnabled" />
      <presentation id="BrowserGuestModeEnabled" />
      <presentation id="BrowserGuestModeEnforced" />
      <presentation id="BrowserLabsEnabled" />
      <presentation id="BrowserLegacyExtensionPointsBlocked" />
      <presentation id="BrowserNetworkTimeQueriesEnabled" />
      <presentation id="BrowserSignin">
        <dropdownList refId="BrowserSignin">Browser sign in settings</dropdownList>
      </presentation>
      <presentation id="BrowserThemeColor">
        <textBox refId="BrowserThemeColor">
          <label>Configure the color of the browser's theme</label>
        </textBox>
      </presentation>
      <presentation id="BrowsingDataLifetime">
        <textBox refId="BrowsingDataLifetime">
          <label>Browsing Data Lifetime Settings</label>
        </textBox>
      </presentation>
      <presentation id="BuiltInDnsClientEnabled" />
      <presentation id="CECPQ2Enabled" />
      <presentation id="CORSNonWildcardRequestHeadersSupport" />
      <presentation id="CertificateTransparencyEnforcementDisabledForCas">
        <listBox refId="CertificateTransparencyEnforcementDisabledForCasDesc">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</listBox>
      </presentation>
      <presentation id="CertificateTransparencyEnforcementDisabledForLegacyCas">
        <listBox refId="CertificateTransparencyEnforcementDisabledForLegacyCasDesc">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</listBox>
      </presentation>
      <presentation id="CertificateTransparencyEnforcementDisabledForUrls">
        <listBox refId="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</listBox>
      </presentation>
      <presentation id="ChromeCleanupEnabled" />
      <presentation id="ChromeCleanupReportingEnabled" />
      <presentation id="ChromeVariations">
        <dropdownList refId="ChromeVariations">Determine the availability of variations</dropdownList>
      </presentation>
      <presentation id="ClearBrowsingDataOnExitList">
        <listBox refId="ClearBrowsingDataOnExitListDesc">Clear Browsing Data on Exit</listBox>
      </presentation>
      <presentation id="ClickToCallEnabled" />
      <presentation id="CloudManagementEnrollmentMandatory" />
      <presentation id="CloudManagementEnrollmentToken">
        <textBox refId="CloudManagementEnrollmentToken">
          <label>The enrollment token of cloud policy on desktop</label>
        </textBox>
      </presentation>
      <presentation id="CloudPolicyOverridesPlatformPolicy" />
      <presentation id="CloudUserPolicyMerge" />
      <presentation id="CloudUserPolicyOverridesCloudMachinePolicy" />
      <presentation id="CommandLineFlagSecurityWarningsEnabled" />
      <presentation id="ComponentUpdatesEnabled" />
      <presentation id="CrossOriginWebAssemblyModuleSharingEnabled" />
      <presentation id="DNSInterceptionChecksEnabled" />
      <presentation id="DefaultBrowserSettingEnabled" />
      <presentation id="DefaultDownloadDirectory">
        <textBox refId="DefaultDownloadDirectory">
          <label>Set default download directory</label>
        </textBox>
      </presentation>
      <presentation id="DefaultSearchProviderContextMenuAccessAllowed" />
      <presentation id="DesktopSharingHubEnabled" />
      <presentation id="DeveloperToolsAvailability">
        <dropdownList refId="DeveloperToolsAvailability">Control where Developer Tools can be used</dropdownList>
      </presentation>
      <presentation id="Disable3DAPIs" />
      <presentation id="DisableSafeBrowsingProceedAnyway" />
      <presentation id="DisableScreenshots" />
      <presentation id="DiskCacheDir">
        <textBox refId="DiskCacheDir">
          <label>Set disk cache directory</label>
        </textBox>
      </presentation>
      <presentation id="DiskCacheSize">
        <decimalTextBox refId="DiskCacheSize">Set disk cache size:</decimalTextBox>
      </presentation>
      <presentation id="DisplayCapturePermissionsPolicyEnabled" />
      <presentation id="DnsOverHttpsMode">
        <dropdownList refId="DnsOverHttpsMode">Controls the mode of DNS-over-HTTPS</dropdownList>
      </presentation>
      <presentation id="DnsOverHttpsTemplates">
        <textBox refId="DnsOverHttpsTemplates">
          <label>Specify URI template of desired DNS-over-HTTPS resolver</label>
        </textBox>
      </presentation>
      <presentation id="DownloadDirectory">
        <textBox refId="DownloadDirectory">
          <label>Set download directory</label>
        </textBox>
      </presentation>
      <presentation id="DownloadRestrictions">
        <dropdownList refId="DownloadRestrictions">Download restrictions</dropdownList>
      </presentation>
      <presentation id="EditBookmarksEnabled" />
      <presentation id="EnableExperimentalPolicies">
        <listBox refId="EnableExperimentalPoliciesDesc">Enables experimental policies</listBox>
      </presentation>
      <presentation id="EnableOnlineRevocationChecks" />
      <presentation id="EnterpriseHardwarePlatformAPIEnabled" />
      <presentation id="ExplicitlyAllowedNetworkPorts">
        <listBox refId="ExplicitlyAllowedNetworkPortsDesc">Explicitly allowed network ports</listBox>
      </presentation>
      <presentation id="ExternalProtocolDialogShowAlwaysOpenCheckbox" />
      <presentation id="FetchKeepaliveDurationSecondsOnShutdown">
        <decimalTextBox refId="FetchKeepaliveDurationSecondsOnShutdown">Fetch keepalive duration on Shutdown:</decimalTextBox>
      </presentation>
      <presentation id="ForceEphemeralProfiles" />
      <presentation id="ForceGoogleSafeSearch" />
      <presentation id="ForceYouTubeRestrict">
        <dropdownList refId="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</dropdownList>
      </presentation>
      <presentation id="ForcedLanguages">
        <listBox refId="ForcedLanguagesDesc">Configure the content and order of preferred languages</listBox>
      </presentation>
      <presentation id="FullscreenAllowed" />
      <presentation id="GloballyScopeHTTPAuthCacheEnabled" />
      <presentation id="HSTSPolicyBypassList">
        <listBox refId="HSTSPolicyBypassListDesc">List of names that will bypass the HSTS policy check</listBox>
      </presentation>
      <presentation id="HardwareAccelerationModeEnabled" />
      <presentation id="HeadlessMode">
        <dropdownList refId="HeadlessMode">Control use of the Headless Mode</dropdownList>
      </presentation>
      <presentation id="HideWebStoreIcon" />
      <presentation id="HistoryClustersVisible" />
      <presentation id="HttpsOnlyMode">
        <dropdownList refId="HttpsOnlyMode">Allow HTTPS-Only Mode to be enabled</dropdownList>
      </presentation>
      <presentation id="ImportAutofillFormData" />
      <presentation id="ImportBookmarks" />
      <presentation id="ImportHistory" />
      <presentation id="ImportHomepage" />
      <presentation id="ImportSavedPasswords" />
      <presentation id="ImportSearchEngine" />
      <presentation id="IncognitoModeAvailability">
        <dropdownList refId="IncognitoModeAvailability">Incognito mode availability</dropdownList>
      </presentation>
      <presentation id="InsecureFormsWarningsEnabled" />
      <presentation id="InsecurePrivateNetworkRequestsAllowed" />
      <presentation id="InsecurePrivateNetworkRequestsAllowedForUrls">
        <listBox refId="InsecurePrivateNetworkRequestsAllowedForUrlsDesc">Allow the listed sites to make requests to more-private network endpoints from insecure contexts.</listBox>
      </presentation>
      <presentation id="IntensiveWakeUpThrottlingEnabled" />
      <presentation id="IntranetRedirectBehavior">
        <dropdownList refId="IntranetRedirectBehavior">Intranet Redirection Behavior</dropdownList>
      </presentation>
      <presentation id="IsolateOrigins">
        <textBox refId="IsolateOrigins">
          <label>Enable Site Isolation for specified origins</label>
        </textBox>
      </presentation>
      <presentation id="LensRegionSearchEnabled" />
      <presentation id="LockIconInAddressBarEnabled" />
      <presentation id="LookalikeWarningAllowlistDomains">
        <listBox refId="LookalikeWarningAllowlistDomainsDesc">Suppress lookalike domain warnings on domains</listBox>
      </presentation>
      <presentation id="ManagedAccountsSigninRestriction">
        <dropdownList refId="ManagedAccountsSigninRestriction">Add restrictions on managed accounts</dropdownList>
      </presentation>
      <presentation id="ManagedBookmarks">
        <textBox refId="ManagedBookmarks">
          <label>Managed Bookmarks</label>
        </textBox>
      </presentation>
      <presentation id="ManagedConfigurationPerOrigin">
        <textBox refId="ManagedConfigurationPerOrigin">
          <label>Sets managed configuration values to websites to specific origins</label>
        </textBox>
      </presentation>
      <presentation id="MaxConnectionsPerProxy">
        <decimalTextBox refId="MaxConnectionsPerProxy">Maximal number of concurrent connections to the proxy server:</decimalTextBox>
      </presentation>
      <presentation id="MaxInvalidationFetchDelay">
        <decimalTextBox refId="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation:</decimalTextBox>
      </presentation>
      <presentation id="MediaRecommendationsEnabled" />
      <presentation id="MediaRouterCastAllowAllIPs" />
      <presentation id="MetricsReportingEnabled" />
      <presentation id="NTPCardsVisible" />
      <presentation id="NTPCustomBackgroundEnabled" />
      <presentation id="NetworkPredictionOptions">
        <dropdownList refId="NetworkPredictionOptions">Enable network prediction</dropdownList>
      </presentation>
      <presentation id="NetworkServiceSandboxEnabled" />
      <presentation id="OverrideSecurityRestrictionsOnInsecureOrigin">
        <listBox refId="OverrideSecurityRestrictionsOnInsecureOriginDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</listBox>
      </presentation>
      <presentation id="PaymentMethodQueryEnabled" />
      <presentation id="PolicyAtomicGroupsEnabled" />
      <presentation id="PolicyDictionaryMultipleSourceMergeList">
        <listBox refId="PolicyDictionaryMultipleSourceMergeListDesc">Allow merging dictionary policies from different sources</listBox>
      </presentation>
      <presentation id="PolicyListMultipleSourceMergeList">
        <listBox refId="PolicyListMultipleSourceMergeListDesc">Allow merging list policies from different sources</listBox>
      </presentation>
      <presentation id="PolicyRefreshRate">
        <decimalTextBox refId="PolicyRefreshRate">Refresh rate for user policy:</decimalTextBox>
      </presentation>
      <presentation id="ProfilePickerOnStartupAvailability">
        <dropdownList refId="ProfilePickerOnStartupAvailability">Profile picker availability on startup</dropdownList>
      </presentation>
      <presentation id="PromotionalTabsEnabled" />
      <presentation id="PromptForDownloadLocation" />
      <presentation id="ProxySettings">
        <textBox refId="ProxySettings">
          <label>Proxy settings</label>
        </textBox>
      </presentation>
      <presentation id="QuicAllowed" />
      <presentation id="RelaunchNotification">
        <dropdownList refId="RelaunchNotification">Notify a user that a browser relaunch or device restart is recommended or required</dropdownList>
      </presentation>
      <presentation id="RelaunchNotificationPeriod">
        <decimalTextBox refId="RelaunchNotificationPeriod">Time period (milliseconds):</decimalTextBox>
      </presentation>
      <presentation id="RelaunchWindow">
        <textBox refId="RelaunchWindow">
          <label>Relaunch time window</label>
        </textBox>
      </presentation>
      <presentation id="RemoteDebuggingAllowed" />
      <presentation id="RendererCodeIntegrityEnabled" />
      <presentation id="RequireOnlineRevocationChecksForLocalAnchors" />
      <presentation id="RestrictSigninToPattern">
        <textBox refId="RestrictSigninToPattern">
          <label>Restrict which Google accounts are allowed to be set as browser primary accounts in Brave</label>
        </textBox>
      </presentation>
      <presentation id="RoamingProfileLocation">
        <textBox refId="RoamingProfileLocation">
          <label>Set the roaming profile directory</label>
        </textBox>
      </presentation>
      <presentation id="RoamingProfileSupportEnabled" />
      <presentation id="SSLErrorOverrideAllowed" />
      <presentation id="SSLErrorOverrideAllowedForOrigins">
        <listBox refId="SSLErrorOverrideAllowedForOriginsDesc">Allow proceeding from the SSL warning page on specific origins</listBox>
      </presentation>
      <presentation id="SSLVersionMin">
        <dropdownList refId="SSLVersionMin">Minimum SSL version enabled</dropdownList>
      </presentation>
      <presentation id="SafeBrowsingForTrustedSourcesEnabled" />
      <presentation id="SafeSitesFilterBehavior">
        <dropdownList refId="SafeSitesFilterBehavior">Control SafeSites adult content filtering.</dropdownList>
      </presentation>
      <presentation id="SandboxExternalProtocolBlocked" />
      <presentation id="SavingBrowserHistoryDisabled" />
      <presentation id="ScrollToTextFragmentEnabled" />
      <presentation id="SearchSuggestEnabled" />
      <presentation id="SecurityKeyPermitAttestation">
        <listBox refId="SecurityKeyPermitAttestationDesc">URLs/domains automatically permitted direct Security Key attestation</listBox>
      </presentation>
      <presentation id="SharedArrayBufferUnrestrictedAccessAllowed" />
      <presentation id="SharedClipboardEnabled" />
      <presentation id="ShowAppsShortcutInBookmarkBar" />
      <presentation id="ShowFullUrlsInAddressBar" />
      <presentation id="SignedHTTPExchangeEnabled" />
      <presentation id="SigninInterceptionEnabled" />
      <presentation id="SitePerProcess" />
      <presentation id="SpellCheckServiceEnabled" />
      <presentation id="SpellcheckEnabled" />
      <presentation id="SpellcheckLanguage">
        <listBox refId="SpellcheckLanguageDesc">Force enable spellcheck languages</listBox>
      </presentation>
      <presentation id="SpellcheckLanguageBlocklist">
        <listBox refId="SpellcheckLanguageBlocklistDesc">Force disable spellcheck languages</listBox>
      </presentation>
      <presentation id="SuppressDifferentOriginSubframeDialogs" />
      <presentation id="SuppressUnsupportedOSWarning" />
      <presentation id="SyncDisabled" />
      <presentation id="SyncTypesListDisabled">
        <listBox refId="SyncTypesListDisabledDesc">List of types that should be excluded from synchronization</listBox>
      </presentation>
      <presentation id="TargetBlankImpliesNoOpener" />
      <presentation id="TaskManagerEndProcessEnabled" />
      <presentation id="ThirdPartyBlockingEnabled" />
      <presentation id="TotalMemoryLimitMb">
        <decimalTextBox refId="TotalMemoryLimitMb">Set memory limit for Chrome instances:</decimalTextBox>
      </presentation>
      <presentation id="TranslateEnabled" />
      <presentation id="U2fSecurityKeyApiEnabled" />
      <presentation id="URLAllowlist">
        <listBox refId="URLAllowlistDesc">Allow access to a list of URLs</listBox>
      </presentation>
      <presentation id="URLBlocklist">
        <listBox refId="URLBlocklistDesc">Block access to a list of URLs</listBox>
      </presentation>
      <presentation id="UrlKeyedAnonymizedDataCollectionEnabled" />
      <presentation id="UserDataDir">
        <textBox refId="UserDataDir">
          <label>Set user data directory</label>
        </textBox>
      </presentation>
      <presentation id="UserDataSnapshotRetentionLimit">
        <decimalTextBox refId="UserDataSnapshotRetentionLimit">Limits the number of user data snapshots retained for use in case of emergency rollback.:</decimalTextBox>
      </presentation>
      <presentation id="UserFeedbackAllowed" />
      <presentation id="VideoCaptureAllowed" />
      <presentation id="VideoCaptureAllowedUrls">
        <listBox refId="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</listBox>
      </presentation>
      <presentation id="WPADQuickCheckEnabled" />
      <presentation id="WebAppInstallForceList">
        <textBox refId="WebAppInstallForceList">
          <label>URLs for Web Apps to be silently installed.</label>
        </textBox>
      </presentation>
      <presentation id="WebRtcAllowLegacyTLSProtocols" />
      <presentation id="WebRtcEventLogCollectionAllowed" />
      <presentation id="WebRtcIPHandling">
        <dropdownList refId="WebRtcIPHandling">The IP handling policy of WebRTC</dropdownList>
      </presentation>
      <presentation id="WebRtcLocalIpsAllowedUrls">
        <listBox refId="WebRtcLocalIpsAllowedUrlsDesc">URLs for which local IPs are exposed in WebRTC ICE candidates</listBox>
      </presentation>
      <presentation id="WebRtcUdpPortRange">
        <textBox refId="WebRtcUdpPortRange">
          <label>Restrict the range of local UDP ports used by WebRTC</label>
        </textBox>
      </presentation>
      <presentation id="WebSQLInThirdPartyContextEnabled" />
      <presentation id="WindowOcclusionEnabled" />
      <presentation id="TorDisabled" />
      <presentation id="IPFSEnabled" />
    </presentationTable>
  </resources>
</policyDefinitionResources>